Help on module pydnp3.opendnp3 in pydnp3:

NAME
    pydnp3.opendnp3 - Bindings for opendnp3 namespace

SUBMODULES
    flags
    levels
    measurements

CLASSES
    pybind11_builtins.pybind11_object(builtins.object)
        AnalogCommandEvent
        AnalogInfo
            AnalogSpec
        AnalogOutputStatusInfo
            AnalogOutputStatusSpec
        AnalogOutputStatusQuality
        AnalogOutput_Double
            AnalogOutputDouble64
        AnalogOutput_Float
            AnalogOutputFloat32
        AnalogOutput_Int16
            AnalogOutputInt16
        AnalogOutput_Int32
            AnalogOutputInt32
        AnalogQuality
        ApplicationIIN
        AssignClassType
        AuthErrorCode
        BinaryCommandEvent
        BinaryInfo
            BinarySpec
        BinaryOutputStatusInfo
            BinaryOutputStatusSpec
        BinaryOutputStatusQuality
        BinaryQuality
        CertificateType
        ChallengeReason
        ChannelState
        ClassField
        CommandCallbackT
        CommandPointResult
        CommandPointState
        CommandSet
        CommandStatus
        ConfigAuthMode
        ControlCode
        ControlRelayOutputBlock
        CountUint16
        CountUint8
        CounterInfo
            CounterSpec
        CounterQuality
        DNPTime
        DatabaseSizes
        DoubleBit
        DoubleBitBinaryInfo
            DoubleBitBinarySpec
        DoubleBitBinaryQuality
        EmptyEventCellA null object for types that have no metadata.
        EventAnalogOutputStatusVariation
        EventAnalogVariation
        EventBinaryOutputStatusVariation
        EventBinaryVariation
        EventBufferConfig
        EventCellBaseBinaryOutputStatusSpec
            SimpleEventCellBinaryOutputStatusSpec
        EventCellBaseBinarySpec
            SimpleEventCellBinarySpec
        EventCellBaseDoubleBitBinarySpec
            SimpleEventCellDoubleBitBinarySpec
        EventClass
        EventCounterVariation
        EventDoubleBinaryVariation
        EventFrozenCounterVariation
        EventMode
        EventSecurityStatVariation
        EventType
        Flags
        FlagsType
        FlowControl
        FrozenCounterInfo
            FrozenCounterSpec
        FrozenCounterQuality
        FunctionCode
        GroupVariation
        GroupVariationID
        HMACType
        Header
        HeaderInfo
        HeaderType
        HeaderUnion
        HeaderWriter
        ICollectionCommandPointResult
            ICommandTaskResult
        ICollectionDNPTime
        ICollectionIndexedAnalog
        ICollectionIndexedAnalogCommandEvent
        ICollectionIndexedAnalogOutputStatus
        ICollectionIndexedBinary
        ICollectionIndexedBinaryCommandEvent
        ICollectionIndexedBinaryOutputStatus
        ICollectionIndexedCounter
        ICollectionIndexedDoubleBitBinary
        ICollectionIndexedFrozenCounter
        ICollectionIndexedOctetString
        ICollectionIndexedSecurityStat
        ICollectionIndexedTimeAndInterval
        ICommandCollectionAnalogOutputDouble64
        ICommandCollectionAnalogOutputFloat32
        ICommandCollectionAnalogOutputInt16
        ICommandCollectionAnalogOutputInt32
        ICommandCollectionControlRelayOutputBlock
        ICommandProcessor
        IINBit
        IINField
        ILinkListener
            IMasterApplication(ILinkListener, pydnp3.openpal.IUTCTimeSource)
            IOutstationApplication
                DefaultOutstationApplication
        ITaskCallback
        ITransactable
            ICommandHandler
                SimpleCommandHandler
                    SuccessCommandHandler
            ISOEHandler
        IUpdateHandler
        IVisitorCommandPointResult
        IVisitorDNPTime
        IVisitorIndexedAnalog
        IVisitorIndexedAnalogCommandEvent
        IVisitorIndexedAnalogOutputStatus
        IVisitorIndexedBinary
        IVisitorIndexedBinaryCommandEvent
        IVisitorIndexedBinaryOutputStatus
        IVisitorIndexedCounter
        IVisitorIndexedDoubleBitBinary
        IVisitorIndexedFrozenCounter
        IVisitorIndexedOctetString
        IVisitorIndexedSecurityStat
        IVisitorIndexedTimeAndInterval
        IndexConfig
            SecurityStatConfig
            StaticConfigAnalogInfo
                EventConfigAnalogInfo
                    DeadbandConfigAnalogInfo
                        AnalogConfig
            StaticConfigAnalogOutputStatusInfo
                EventConfigAnalogOutputStatusInfo
                    DeadbandConfigAnalogOutputStatusInfo
                        AOStatusConfig
            StaticConfigBinaryInfo
                EventConfigBinaryInfo
                    BinaryConfig
            StaticConfigBinaryOutputStatusInfo
                EventConfigBinaryOutputStatusInfo
                    BOStatusConfig
            StaticConfigCounterInfo
                EventConfigCounterInfo
                    DeadbandConfigCounterInfo
                        CounterConfig
            StaticConfigDoubleBitBinaryInfo
                EventConfigDoubleBitBinaryInfo
                    DoubleBitBinaryConfig
            StaticConfigFrozenCounterInfo
                EventConfigFrozenCounterInfo
                    DeadbandConfigFrozenCounterInfo
                        FrozenCounterConfig
            StaticConfigTimeAndIntervalInfo
                TimeAndIntervalConfig
        IndexMode
        IndexedAnalog
        IndexedAnalogCommandEvent
        IndexedAnalogOutputDouble64
        IndexedAnalogOutputFloat32
        IndexedAnalogOutputInt16
        IndexedAnalogOutputInt32
        IndexedAnalogOutputStatus
        IndexedBinary
        IndexedBinaryCommandEvent
        IndexedBinaryOutputStatus
        IndexedControlRelayOutputBlock
        IndexedCounter
        IndexedDoubleBitBinary
        IndexedFrozenCounter
        IndexedOctetString
        IndexedSecurityStat
        IndexedTimeAndInterval
        IntervalUnits
        KeyChangeMethod
        KeyStatus
        KeyWrapAlgorithm
        LinkConfig
        LinkFunction
        LinkHeaderFields
        LinkStatistics
        LinkStatisticsChannel
        LinkStatisticsParser
        LinkStatus
        MasterParams
        MasterTaskType
        Measurement
            TypedMeasurementBool
                Binary
                BinaryOutputStatus
            TypedMeasurementDouble
                Analog
                AnalogOutputStatus
            TypedMeasurementDoubleBit
                DoubleBitBinary
            TypedMeasurementUint32
                Counter
                FrozenCounter
        OctetData
            OctetString
        OperateType
        OutstationConfig
        OutstationParams
        Parity
        PointClass
        QualifierCode
        RestartMode
        RestartOperationCallbackT
        RestartOperationResult
        RestartType
        SecurityStat
        SecurityStatIndex
        SecurityStatInfo
            SecurityStatSpec
        SecurityStatValue
        StackStatistics
        StackStatisticsLink
        StackStatisticsTransport
        StackStatisticsTransportRx
        StackStatisticsTransportTx
        StartStopRangeUint16
        StartStopRangeUint8
        StaticAnalogOutputStatusVariation
        StaticAnalogVariation
        StaticBinaryOutputStatusVariation
        StaticBinaryVariation
        StaticCounterVariation
        StaticDoubleBinaryVariation
        StaticFrozenCounterVariation
        StaticSecurityStatVariation
        StaticTimeAndIntervalVariation
        StaticTypeBitField
        StaticTypeBitmask
        StopBits
        TaskCompletion
        TaskConfig
        TaskId
        TaskInfo
        TimeAndInterval
        TimeAndIntervalInfo
            TimeAndIntervalSpec
        TimeSyncMode
        TimestampMode
        Transaction
        UserOperation
        UserRole
        WriteHeaderFunT
    
    class AOStatusConfig(DeadbandConfigAnalogOutputStatusInfo)
     |  Method resolution order:
     |      AOStatusConfig
     |      DeadbandConfigAnalogOutputStatusInfo
     |      EventConfigAnalogOutputStatusInfo
     |      StaticConfigAnalogOutputStatusInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.AOStatusConfig) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from DeadbandConfigAnalogOutputStatusInfo:
     |  
     |  deadband
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from EventConfigAnalogOutputStatusInfo:
     |  
     |  clazz
     |  
     |  evariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from StaticConfigAnalogOutputStatusInfo:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class Analog(TypedMeasurementDouble)
     |  Analogs are used for variable data points that usually reflect a real world value. 
     |  Good examples are current, voltage, sensor readouts, etc. Think of a speedometer guage.
     |  
     |  Method resolution order:
     |      Analog
     |      TypedMeasurementDouble
     |      Measurement
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.Analog) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.Analog, value: float) -> None
     |      
     |      :type value: double
     |      
     |      3. __init__(self: pydnp3.opendnp3.Analog, value: float, flags: pydnp3.opendnp3.Flags) -> None
     |      
     |      :type value: double
     |      
     |      4. __init__(self: pydnp3.opendnp3.Analog, value: float, flags: pydnp3.opendnp3.Flags, time: pydnp3.opendnp3.DNPTime) -> None
     |      
     |      :type value: double
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from TypedMeasurementDouble:
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Measurement:
     |  
     |  flags
     |      Bitfield that stores type specific quality information.
     |  
     |  time
     |      Timestamp associated with the measurement.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class AnalogCommandEvent(pybind11_builtins.pybind11_object)
     |  Occurs when an outstation receives and analog command. Maps to Group43.
     |  
     |  Method resolution order:
     |      AnalogCommandEvent
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.AnalogCommandEvent, arg0: pydnp3.opendnp3.AnalogCommandEvent) -> bool
     |      
     |      Equality comparision.
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.AnalogCommandEvent) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.AnalogCommandEvent, value: float, status: pydnp3.opendnp3.CommandStatus) -> None
     |      
     |      :type value: double
     |      
     |      3. __init__(self: pydnp3.opendnp3.AnalogCommandEvent, value: float, status: pydnp3.opendnp3.CommandStatus, time: pydnp3.opendnp3.DNPTime) -> None
     |      
     |      :type value: double
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  status
     |  
     |  time
     |  
     |  value
     |      :type value: double
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class AnalogConfig(DeadbandConfigAnalogInfo)
     |  Method resolution order:
     |      AnalogConfig
     |      DeadbandConfigAnalogInfo
     |      EventConfigAnalogInfo
     |      StaticConfigAnalogInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.AnalogConfig) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from DeadbandConfigAnalogInfo:
     |  
     |  deadband
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from EventConfigAnalogInfo:
     |  
     |  clazz
     |  
     |  evariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from StaticConfigAnalogInfo:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class AnalogInfo(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      AnalogInfo
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  DefaultEventVariation
     |  
     |  DefaultStaticVariation
     |  
     |  EventTypeEnum
     |  
     |  StaticTypeEnum
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class AnalogOutputDouble64(AnalogOutput_Double)
     |  Double precision analog output. The underlying serialization is Group41, Variation 3
     |  
     |  Method resolution order:
     |      AnalogOutputDouble64
     |      AnalogOutput_Double
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.AnalogOutputDouble64, arg0: pydnp3.opendnp3.AnalogOutputDouble64) -> bool
     |      
     |      Equality comparision.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.AnalogOutputDouble64, value: float = 0, status: pydnp3.opendnp3.CommandStatus = CommandStatus.SUCCESS) -> None
     |      
     |      :param value: defaults to 0 
     |      :param status: defaults to opendnp3.CommandStatus.SUCCESS
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from AnalogOutput_Double:
     |  
     |  ValuesEqual(...)
     |      ValuesEqual(self: pydnp3.opendnp3.AnalogOutput_Double, lhs: pydnp3.opendnp3.AnalogOutput_Double) -> bool
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from AnalogOutput_Double:
     |  
     |  status
     |      The status value defaults to CS_SUCCESS for requests.
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class AnalogOutputFloat32(AnalogOutput_Float)
     |  Single precision analog output. The underlying serialization is Group41, Variation 3.
     |  
     |  Method resolution order:
     |      AnalogOutputFloat32
     |      AnalogOutput_Float
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.AnalogOutputFloat32, arg0: pydnp3.opendnp3.AnalogOutputFloat32) -> bool
     |      
     |      Equality comparision.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.AnalogOutputFloat32, value: float = 0, status: pydnp3.opendnp3.CommandStatus = CommandStatus.SUCCESS) -> None
     |      
     |      :param value: defaults to 0 
     |      :param status: defaults to opendnp3.CommandStatus.SUCCESS
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from AnalogOutput_Float:
     |  
     |  ValuesEqual(...)
     |      ValuesEqual(self: pydnp3.opendnp3.AnalogOutput_Float, lhs: pydnp3.opendnp3.AnalogOutput_Float) -> bool
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from AnalogOutput_Float:
     |  
     |  status
     |      The status value defaults to CS_SUCCESS for requests.
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class AnalogOutputInt16(AnalogOutput_Int16)
     |  16-bit signed integer analog output. The underlying serialization is Group41, Variation 2.
     |  
     |  Method resolution order:
     |      AnalogOutputInt16
     |      AnalogOutput_Int16
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.AnalogOutputInt16, arg0: pydnp3.opendnp3.AnalogOutputInt16) -> bool
     |      
     |      Equality comparision.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.AnalogOutputInt16, value: int = 0, status: pydnp3.opendnp3.CommandStatus = CommandStatus.SUCCESS) -> None
     |      
     |      :param value: defaults to 0 
     |      :param status: defaults to opendnp3.CommandStatus.SUCCESS
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from AnalogOutput_Int16:
     |  
     |  ValuesEqual(...)
     |      ValuesEqual(self: pydnp3.opendnp3.AnalogOutput_Int16, lhs: pydnp3.opendnp3.AnalogOutput_Int16) -> bool
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from AnalogOutput_Int16:
     |  
     |  status
     |      The status value defaults to CS_SUCCESS for requests.
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class AnalogOutputInt32(AnalogOutput_Int32)
     |  32-bit signed integer analog output. The underlying serialization is Group41, Variation 1.
     |  
     |  Method resolution order:
     |      AnalogOutputInt32
     |      AnalogOutput_Int32
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.AnalogOutputInt32, arg0: pydnp3.opendnp3.AnalogOutputInt32) -> bool
     |      
     |      Equality comparision.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.AnalogOutputInt32, value: int = 0, status: pydnp3.opendnp3.CommandStatus = CommandStatus.SUCCESS) -> None
     |      
     |      :param value: defaults to 0 
     |      :param status: defaults to opendnp3.CommandStatus.SUCCESS
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from AnalogOutput_Int32:
     |  
     |  ValuesEqual(...)
     |      ValuesEqual(self: pydnp3.opendnp3.AnalogOutput_Int32, lhs: pydnp3.opendnp3.AnalogOutput_Int32) -> bool
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from AnalogOutput_Int32:
     |  
     |  status
     |      The status value defaults to CS_SUCCESS for requests.
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class AnalogOutputStatus(TypedMeasurementDouble)
     |  Describes the last set value of the set-point. 
     |  Like the BinaryOutputStatus data type it is not well supported and its generally better practice to use an explicit analog.
     |  
     |  Method resolution order:
     |      AnalogOutputStatus
     |      TypedMeasurementDouble
     |      Measurement
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.AnalogOutputStatus) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.AnalogOutputStatus, value: float) -> None
     |      
     |      :type value: double
     |      
     |      3. __init__(self: pydnp3.opendnp3.AnalogOutputStatus, value: float, flags: pydnp3.opendnp3.Flags) -> None
     |      
     |      :type value: double
     |      
     |      4. __init__(self: pydnp3.opendnp3.AnalogOutputStatus, value: float, flags: pydnp3.opendnp3.Flags, time: pydnp3.opendnp3.DNPTime) -> None
     |      
     |      :type value: double
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from TypedMeasurementDouble:
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Measurement:
     |  
     |  flags
     |      Bitfield that stores type specific quality information.
     |  
     |  time
     |      Timestamp associated with the measurement.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class AnalogOutputStatusInfo(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      AnalogOutputStatusInfo
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  DefaultEventVariation
     |  
     |  DefaultStaticVariation
     |  
     |  EventTypeEnum
     |  
     |  StaticTypeEnum
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class AnalogOutputStatusQuality(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      AnalogOutputStatusQuality
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.AnalogOutputStatusQuality, arg0: pydnp3.opendnp3.AnalogOutputStatusQuality) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.AnalogOutputStatusQuality) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.AnalogOutputStatusQuality) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.AnalogOutputStatusQuality, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.AnalogOutputStatusQuality) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.AnalogOutputStatusQuality, arg0: pydnp3.opendnp3.AnalogOutputStatusQuality) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.AnalogOutputStatusQuality) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.AnalogOutputStatusQuality, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  COMM_LOST = AnalogOutputStatusQuality.COMM_LOST
     |  
     |  LOCAL_FORCED = AnalogOutputStatusQuality.LOCAL_FORCED
     |  
     |  ONLINE = AnalogOutputStatusQuality.ONLINE
     |  
     |  OVERRANGE = AnalogOutputStatusQuality.OVERRANGE
     |  
     |  REFERENCE_ERR = AnalogOutputStatusQuality.REFERENCE_ERR
     |  
     |  REMOTE_FORCED = AnalogOutputStatusQuality.REMOTE_FORCED
     |  
     |  RESERVED = AnalogOutputStatusQuality.RESERVED
     |  
     |  RESTART = AnalogOutputStatusQuality.RESTART
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class AnalogOutputStatusSpec(AnalogOutputStatusInfo)
     |  Method resolution order:
     |      AnalogOutputStatusSpec
     |      AnalogOutputStatusInfo
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  IsEvent(...) from builtins.PyCapsule
     |      IsEvent(oldValue: pydnp3.opendnp3.AnalogOutputStatus, newValue: pydnp3.opendnp3.AnalogOutputStatus, deadband: float) -> bool
     |      
     |      :type deadband: double
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties inherited from AnalogOutputStatusInfo:
     |  
     |  DefaultEventVariation
     |  
     |  DefaultStaticVariation
     |  
     |  EventTypeEnum
     |  
     |  StaticTypeEnum
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class AnalogOutput_Double(pybind11_builtins.pybind11_object)
     |  The object to represent a setpoint request from the master. 
     |  Think of this like turning a dial on the front of a machine to desired setting.
     |  
     |  Method resolution order:
     |      AnalogOutput_Double
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ValuesEqual(...)
     |      ValuesEqual(self: pydnp3.opendnp3.AnalogOutput_Double, lhs: pydnp3.opendnp3.AnalogOutput_Double) -> bool
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.AnalogOutput_Double, value: float = 0, status: pydnp3.opendnp3.CommandStatus = CommandStatus.SUCCESS) -> None
     |      
     |      :param value: defaults to 0 
     |      :param status: defaults to opendnp3.CommandStatus.SUCCESS
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  status
     |      The status value defaults to CS_SUCCESS for requests.
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class AnalogOutput_Float(pybind11_builtins.pybind11_object)
     |  The object to represent a setpoint request from the master. 
     |  Think of this like turning a dial on the front of a machine to desired setting.
     |  
     |  Method resolution order:
     |      AnalogOutput_Float
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ValuesEqual(...)
     |      ValuesEqual(self: pydnp3.opendnp3.AnalogOutput_Float, lhs: pydnp3.opendnp3.AnalogOutput_Float) -> bool
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.AnalogOutput_Float, value: float = 0, status: pydnp3.opendnp3.CommandStatus = CommandStatus.SUCCESS) -> None
     |      
     |      :param value: defaults to 0 
     |      :param status: defaults to opendnp3.CommandStatus.SUCCESS
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  status
     |      The status value defaults to CS_SUCCESS for requests.
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class AnalogOutput_Int16(pybind11_builtins.pybind11_object)
     |  The object to represent a setpoint request from the master. 
     |  Think of this like turning a dial on the front of a machine to desired setting.
     |  
     |  Method resolution order:
     |      AnalogOutput_Int16
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ValuesEqual(...)
     |      ValuesEqual(self: pydnp3.opendnp3.AnalogOutput_Int16, lhs: pydnp3.opendnp3.AnalogOutput_Int16) -> bool
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.AnalogOutput_Int16, value: int = 0, status: pydnp3.opendnp3.CommandStatus = CommandStatus.SUCCESS) -> None
     |      
     |      :param value: defaults to 0 
     |      :param status: defaults to opendnp3.CommandStatus.SUCCESS
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  status
     |      The status value defaults to CS_SUCCESS for requests.
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class AnalogOutput_Int32(pybind11_builtins.pybind11_object)
     |  The object to represent a setpoint request from the master. 
     |  Think of this like turning a dial on the front of a machine to desired setting.
     |  
     |  Method resolution order:
     |      AnalogOutput_Int32
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ValuesEqual(...)
     |      ValuesEqual(self: pydnp3.opendnp3.AnalogOutput_Int32, lhs: pydnp3.opendnp3.AnalogOutput_Int32) -> bool
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.AnalogOutput_Int32, value: int = 0, status: pydnp3.opendnp3.CommandStatus = CommandStatus.SUCCESS) -> None
     |      
     |      :param value: defaults to 0 
     |      :param status: defaults to opendnp3.CommandStatus.SUCCESS
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  status
     |      The status value defaults to CS_SUCCESS for requests.
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class AnalogQuality(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      AnalogQuality
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.AnalogQuality, arg0: pydnp3.opendnp3.AnalogQuality) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.AnalogQuality) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.AnalogQuality) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.AnalogQuality, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.AnalogQuality) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.AnalogQuality, arg0: pydnp3.opendnp3.AnalogQuality) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.AnalogQuality) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.AnalogQuality, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  COMM_LOST = AnalogQuality.COMM_LOST
     |  
     |  LOCAL_FORCED = AnalogQuality.LOCAL_FORCED
     |  
     |  ONLINE = AnalogQuality.ONLINE
     |  
     |  OVERRANGE = AnalogQuality.OVERRANGE
     |  
     |  REFERENCE_ERR = AnalogQuality.REFERENCE_ERR
     |  
     |  REMOTE_FORCED = AnalogQuality.REMOTE_FORCED
     |  
     |  RESERVED = AnalogQuality.RESERVED
     |  
     |  RESTART = AnalogQuality.RESTART
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class AnalogSpec(AnalogInfo)
     |  Method resolution order:
     |      AnalogSpec
     |      AnalogInfo
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  IsEvent(...) from builtins.PyCapsule
     |      IsEvent(oldValue: pydnp3.opendnp3.Analog, newValue: pydnp3.opendnp3.Analog, deadband: float) -> bool
     |      
     |      :type deadband: double
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties inherited from AnalogInfo:
     |  
     |  DefaultEventVariation
     |  
     |  DefaultStaticVariation
     |  
     |  EventTypeEnum
     |  
     |  StaticTypeEnum
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ApplicationIIN(pybind11_builtins.pybind11_object)
     |  Some IIN bits are necessarily controlled by the outstation application, not the underlying protocol stack. 
     |  This structure describes the state of the bits controllable by the application.
     |  
     |  Method resolution order:
     |      ApplicationIIN
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ToIIN(...)
     |      ToIIN(self: pydnp3.opendnp3.ApplicationIIN) -> pydnp3.opendnp3.IINField
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ApplicationIIN) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  configCorrupt
     |  
     |  deviceTrouble
     |  
     |  localControl
     |  
     |  needTime
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class AssignClassType(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      AssignClassType
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.AssignClassType, arg0: pydnp3.opendnp3.AssignClassType) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.AssignClassType) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.AssignClassType) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.AssignClassType, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.AssignClassType) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.AssignClassType, arg0: pydnp3.opendnp3.AssignClassType) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.AssignClassType) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.AssignClassType, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  AnalogInput = AssignClassType.AnalogInput
     |  
     |  AnalogOutputStatus = AssignClassType.AnalogOutputStatus
     |  
     |  BinaryInput = AssignClassType.BinaryInput
     |  
     |  BinaryOutputStatus = AssignClassType.BinaryOutputStatus
     |  
     |  Counter = AssignClassType.Counter
     |  
     |  DoubleBinaryInput = AssignClassType.DoubleBinaryInput
     |  
     |  FrozenCounter = AssignClassType.FrozenCounter
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class AuthErrorCode(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      AuthErrorCode
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.AuthErrorCode, arg0: pydnp3.opendnp3.AuthErrorCode) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.AuthErrorCode) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.AuthErrorCode) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.AuthErrorCode, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.AuthErrorCode) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.AuthErrorCode, arg0: pydnp3.opendnp3.AuthErrorCode) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.AuthErrorCode) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.AuthErrorCode, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  AGGRESSIVE_MODE_UNSUPPORTED = AuthErrorCode.AGGRESSIVE_MODE_UNSUPPORTE...
     |  
     |  AUTHENTICATION_FAILED = AuthErrorCode.AUTHENTICATION_FAILED
     |  
     |  AUTHORIZATION_FAILED = AuthErrorCode.AUTHORIZATION_FAILED
     |  
     |  INVALID_CERTIFICATION_DATA = AuthErrorCode.INVALID_CERTIFICATION_DATA
     |  
     |  INVALID_SIGNATURE = AuthErrorCode.INVALID_SIGNATURE
     |  
     |  KEY_WRAP_NOT_SUPPORTED = AuthErrorCode.KEY_WRAP_NOT_SUPPORTED
     |  
     |  MAC_NOT_SUPPORTED = AuthErrorCode.MAC_NOT_SUPPORTED
     |  
     |  MAX_SESSION_KEY_STATUS_REQUESTS_EXCEEDED = AuthErrorCode.MAX_SESSION_K...
     |  
     |  UNKNOWN = AuthErrorCode.UNKNOWN
     |  
     |  UNKNOWN_USER = AuthErrorCode.UNKNOWN_USER
     |  
     |  UPDATE_KEY_METHOD_NOT_PERMITTED = AuthErrorCode.UPDATE_KEY_METHOD_NOT_...
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class BOStatusConfig(EventConfigBinaryOutputStatusInfo)
     |  Method resolution order:
     |      BOStatusConfig
     |      EventConfigBinaryOutputStatusInfo
     |      StaticConfigBinaryOutputStatusInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.BOStatusConfig) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from EventConfigBinaryOutputStatusInfo:
     |  
     |  clazz
     |  
     |  evariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from StaticConfigBinaryOutputStatusInfo:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class Binary(TypedMeasurementBool)
     |  The Binary data type is for describing on-off (boolean) type values. 
     |  Good examples of binaries are alarms, mode settings, enabled/disabled flags etc. 
     |  Think of it as a status LED on a piece of equipment.
     |  
     |  Method resolution order:
     |      Binary
     |      TypedMeasurementBool
     |      Measurement
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.Binary) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.Binary, value: bool) -> None
     |      
     |      3. __init__(self: pydnp3.opendnp3.Binary, flags: pydnp3.opendnp3.Flags) -> None
     |      
     |      4. __init__(self: pydnp3.opendnp3.Binary, flags: pydnp3.opendnp3.Flags, time: pydnp3.opendnp3.DNPTime) -> None
     |      
     |      5. __init__(self: pydnp3.opendnp3.Binary, value: bool, flags: pydnp3.opendnp3.Flags) -> None
     |      
     |      6. __init__(self: pydnp3.opendnp3.Binary, value: bool, flags: pydnp3.opendnp3.Flags, time: pydnp3.opendnp3.DNPTime) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from TypedMeasurementBool:
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Measurement:
     |  
     |  flags
     |      Bitfield that stores type specific quality information.
     |  
     |  time
     |      Timestamp associated with the measurement.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class BinaryCommandEvent(pybind11_builtins.pybind11_object)
     |  Maps to Group13Var1/2.
     |  
     |  Method resolution order:
     |      BinaryCommandEvent
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  GetFlags(...)
     |      GetFlags(self: pydnp3.opendnp3.BinaryCommandEvent) -> pydnp3.opendnp3.Flags
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.BinaryCommandEvent, arg0: pydnp3.opendnp3.BinaryCommandEvent) -> bool
     |      
     |      Equality comparision.
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.BinaryCommandEvent) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.BinaryCommandEvent, flags: pydnp3.opendnp3.Flags) -> None
     |      
     |      3. __init__(self: pydnp3.opendnp3.BinaryCommandEvent, flags: pydnp3.opendnp3.Flags, time: pydnp3.opendnp3.DNPTime) -> None
     |      
     |      4. __init__(self: pydnp3.opendnp3.BinaryCommandEvent, value: bool, status: pydnp3.opendnp3.CommandStatus) -> None
     |      
     |      5. __init__(self: pydnp3.opendnp3.BinaryCommandEvent, value: bool, status: pydnp3.opendnp3.CommandStatus, time: pydnp3.opendnp3.DNPTime) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  status
     |  
     |  time
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class BinaryConfig(EventConfigBinaryInfo)
     |  Method resolution order:
     |      BinaryConfig
     |      EventConfigBinaryInfo
     |      StaticConfigBinaryInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.BinaryConfig) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from EventConfigBinaryInfo:
     |  
     |  clazz
     |  
     |  evariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from StaticConfigBinaryInfo:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class BinaryInfo(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      BinaryInfo
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  DefaultEventVariation
     |  
     |  DefaultStaticVariation
     |  
     |  EventTypeEnum
     |  
     |  StaticTypeEnum
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class BinaryOutputStatus(TypedMeasurementBool)
     |  BinaryOutputStatus is used for describing the current state of a control. 
     |  It is very infrequently used and many masters don't provide any mechanisms for reading these values so their use is strongly discouraged, a Binary should be used instead.
     |  
     |  Method resolution order:
     |      BinaryOutputStatus
     |      TypedMeasurementBool
     |      Measurement
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.BinaryOutputStatus) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.BinaryOutputStatus, value: bool) -> None
     |      
     |      3. __init__(self: pydnp3.opendnp3.BinaryOutputStatus, flags: pydnp3.opendnp3.Flags) -> None
     |      
     |      4. __init__(self: pydnp3.opendnp3.BinaryOutputStatus, flags: pydnp3.opendnp3.Flags, time: pydnp3.opendnp3.DNPTime) -> None
     |      
     |      5. __init__(self: pydnp3.opendnp3.BinaryOutputStatus, value: bool, flags: pydnp3.opendnp3.Flags) -> None
     |      
     |      6. __init__(self: pydnp3.opendnp3.BinaryOutputStatus, value: bool, flags: pydnp3.opendnp3.Flags, time: pydnp3.opendnp3.DNPTime) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from TypedMeasurementBool:
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Measurement:
     |  
     |  flags
     |      Bitfield that stores type specific quality information.
     |  
     |  time
     |      Timestamp associated with the measurement.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class BinaryOutputStatusInfo(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      BinaryOutputStatusInfo
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  DefaultEventVariation
     |  
     |  DefaultStaticVariation
     |  
     |  EventTypeEnum
     |  
     |  StaticTypeEnum
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class BinaryOutputStatusQuality(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      BinaryOutputStatusQuality
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.BinaryOutputStatusQuality, arg0: pydnp3.opendnp3.BinaryOutputStatusQuality) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.BinaryOutputStatusQuality) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.BinaryOutputStatusQuality) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.BinaryOutputStatusQuality, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.BinaryOutputStatusQuality) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.BinaryOutputStatusQuality, arg0: pydnp3.opendnp3.BinaryOutputStatusQuality) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.BinaryOutputStatusQuality) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.BinaryOutputStatusQuality, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  COMM_LOST = BinaryOutputStatusQuality.COMM_LOST
     |  
     |  LOCAL_FORCED = BinaryOutputStatusQuality.LOCAL_FORCED
     |  
     |  ONLINE = BinaryOutputStatusQuality.ONLINE
     |  
     |  REMOTE_FORCED = BinaryOutputStatusQuality.REMOTE_FORCED
     |  
     |  RESERVED1 = BinaryOutputStatusQuality.RESERVED1
     |  
     |  RESERVED2 = BinaryOutputStatusQuality.RESERVED2
     |  
     |  RESTART = BinaryOutputStatusQuality.RESTART
     |  
     |  STATE = BinaryOutputStatusQuality.STATE
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class BinaryOutputStatusSpec(BinaryOutputStatusInfo)
     |  Method resolution order:
     |      BinaryOutputStatusSpec
     |      BinaryOutputStatusInfo
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  IsEvent(...) from builtins.PyCapsule
     |      IsEvent(oldValue: pydnp3.opendnp3.BinaryOutputStatus, newValue: pydnp3.opendnp3.BinaryOutputStatus) -> bool
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties inherited from BinaryOutputStatusInfo:
     |  
     |  DefaultEventVariation
     |  
     |  DefaultStaticVariation
     |  
     |  EventTypeEnum
     |  
     |  StaticTypeEnum
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class BinaryQuality(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      BinaryQuality
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.BinaryQuality, arg0: pydnp3.opendnp3.BinaryQuality) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.BinaryQuality) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.BinaryQuality) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.BinaryQuality, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.BinaryQuality) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.BinaryQuality, arg0: pydnp3.opendnp3.BinaryQuality) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.BinaryQuality) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.BinaryQuality, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  CHATTER_FILTER = BinaryQuality.CHATTER_FILTER
     |  
     |  COMM_LOST = BinaryQuality.COMM_LOST
     |  
     |  LOCAL_FORCED = BinaryQuality.LOCAL_FORCED
     |  
     |  ONLINE = BinaryQuality.ONLINE
     |  
     |  REMOTE_FORCED = BinaryQuality.REMOTE_FORCED
     |  
     |  RESERVED = BinaryQuality.RESERVED
     |  
     |  RESTART = BinaryQuality.RESTART
     |  
     |  STATE = BinaryQuality.STATE
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class BinarySpec(BinaryInfo)
     |  Method resolution order:
     |      BinarySpec
     |      BinaryInfo
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  IsEvent(...) from builtins.PyCapsule
     |      IsEvent(oldValue: pydnp3.opendnp3.Binary, newValue: pydnp3.opendnp3.Binary) -> bool
     |  
     |  IsQualityOnlineOnly(...) from builtins.PyCapsule
     |      IsQualityOnlineOnly(binary: pydnp3.opendnp3.Binary) -> bool
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties inherited from BinaryInfo:
     |  
     |  DefaultEventVariation
     |  
     |  DefaultStaticVariation
     |  
     |  EventTypeEnum
     |  
     |  StaticTypeEnum
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class CertificateType(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      CertificateType
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.CertificateType, arg0: pydnp3.opendnp3.CertificateType) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.CertificateType) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.CertificateType) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.CertificateType, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.CertificateType) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.CertificateType, arg0: pydnp3.opendnp3.CertificateType) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.CertificateType) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.CertificateType, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ATTRIBUTE_CERTIFICATE = CertificateType.ATTRIBUTE_CERTIFICATE
     |  
     |  ID_CERTIFICATE = CertificateType.ID_CERTIFICATE
     |  
     |  UNKNOWN = CertificateType.UNKNOWN
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ChallengeReason(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      ChallengeReason
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.ChallengeReason, arg0: pydnp3.opendnp3.ChallengeReason) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.ChallengeReason) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.ChallengeReason) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ChallengeReason, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.ChallengeReason) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.ChallengeReason, arg0: pydnp3.opendnp3.ChallengeReason) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.ChallengeReason) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.ChallengeReason, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  CRITICAL = ChallengeReason.CRITICAL
     |  
     |  UNKNOWN = ChallengeReason.UNKNOWN
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ChannelState(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      ChannelState
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.ChannelState, arg0: pydnp3.opendnp3.ChannelState) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.ChannelState) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.ChannelState) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ChannelState, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.ChannelState) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.ChannelState, arg0: pydnp3.opendnp3.ChannelState) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.ChannelState) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.ChannelState, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  CLOSED = ChannelState.CLOSED
     |  
     |  OPEN = ChannelState.OPEN
     |  
     |  OPENING = ChannelState.OPENING
     |  
     |  SHUTDOWN = ChannelState.SHUTDOWN
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ClassField(pybind11_builtins.pybind11_object)
     |  Specifies a set of event classes e.g. some subset of {0, 1, 2, 3}.
     |  
     |  Method resolution order:
     |      ClassField
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Clear(...)
     |      Clear(self: pydnp3.opendnp3.ClassField, field: pydnp3.opendnp3.ClassField) -> None
     |  
     |  GetBitfield(...)
     |      GetBitfield(self: pydnp3.opendnp3.ClassField) -> int
     |  
     |  HasAnyClass(...)
     |      HasAnyClass(self: pydnp3.opendnp3.ClassField) -> bool
     |  
     |  HasClass0(...)
     |      HasClass0(self: pydnp3.opendnp3.ClassField) -> bool
     |  
     |  HasClass1(...)
     |      HasClass1(self: pydnp3.opendnp3.ClassField) -> bool
     |  
     |  HasClass2(...)
     |      HasClass2(self: pydnp3.opendnp3.ClassField) -> bool
     |  
     |  HasClass3(...)
     |      HasClass3(self: pydnp3.opendnp3.ClassField) -> bool
     |  
     |  HasEventClass(...)
     |      HasEventClass(self: pydnp3.opendnp3.ClassField) -> bool
     |  
     |  HasEventType(...)
     |      HasEventType(self: pydnp3.opendnp3.ClassField, arg0: pydnp3.opendnp3.EventClass) -> bool
     |  
     |  Intersects(...)
     |      Intersects(self: pydnp3.opendnp3.ClassField, other: pydnp3.opendnp3.ClassField) -> bool
     |  
     |  IsEmpty(...)
     |      IsEmpty(self: pydnp3.opendnp3.ClassField) -> bool
     |  
     |  OnlyEventClasses(...)
     |      OnlyEventClasses(self: pydnp3.opendnp3.ClassField) -> pydnp3.opendnp3.ClassField
     |  
     |  Set(...)
     |      Set(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. Set(self: pydnp3.opendnp3.ClassField, field: pydnp3.opendnp3.ClassField) -> None
     |      
     |      2. Set(self: pydnp3.opendnp3.ClassField, pc: pydnp3.opendnp3.PointClass) -> None
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.ClassField) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.ClassField, pc: pydnp3.opendnp3.PointClass) -> None
     |      
     |      3. __init__(self: pydnp3.opendnp3.ClassField, mask: int) -> None
     |      
     |      4. __init__(self: pydnp3.opendnp3.ClassField, class0: bool, class1: bool, class2: bool, class3: bool) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  AllClasses(...) from builtins.PyCapsule
     |      AllClasses() -> pydnp3.opendnp3.ClassField
     |  
     |  AllEventClasses(...) from builtins.PyCapsule
     |      AllEventClasses() -> pydnp3.opendnp3.ClassField
     |  
     |  None(...) from builtins.PyCapsule
     |      None() -> pydnp3.opendnp3.ClassField
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ALL_CLASSES = 15
     |  
     |  CLASS_0 = 1
     |  
     |  CLASS_1 = 2
     |  
     |  CLASS_2 = 4
     |  
     |  CLASS_3 = 8
     |  
     |  EVENT_CLASSES = 14
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class CommandCallbackT(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      CommandCallbackT
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class CommandPointResult(pybind11_builtins.pybind11_object)
     |  Represents the result of a command operation on a particular point.
     |  
     |  Method resolution order:
     |      CommandPointResult
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Equals(...)
     |      Equals(self: pydnp3.opendnp3.CommandPointResult, other: pydnp3.opendnp3.CommandPointResult) -> bool
     |      
     |      Check the result for equality against another value.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.CommandPointResult, headerIndex: int, index: int, state: pydnp3.opendnp3.CommandPointState, status: pydnp3.opendnp3.CommandStatus) -> None
     |      
     |         Fully construct based on all members. 
     |      :type headerIndex: unsigned int 
     |      :type index: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  headerIndex
     |      The index of the header when request was made (0-based). 
     |      :type headerIndex: unsigned int
     |  
     |  index
     |      The index of the command that was requested. 
     |      :type index: unsigned short
     |  
     |  state
     |      The final state of the command operation on this point.
     |  
     |  status
     |      The response value. This is only valid if state == SUCCESS or state == SELECT_FAIL.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class CommandPointState(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      CommandPointState
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.CommandPointState, arg0: pydnp3.opendnp3.CommandPointState) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.CommandPointState) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.CommandPointState) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.CommandPointState, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.CommandPointState) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.CommandPointState, arg0: pydnp3.opendnp3.CommandPointState) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.CommandPointState) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.CommandPointState, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  INIT = CommandPointState.INIT
     |  
     |  OPERATE_FAIL = CommandPointState.OPERATE_FAIL
     |  
     |  SELECT_FAIL = CommandPointState.SELECT_FAIL
     |  
     |  SELECT_MISMATCH = CommandPointState.SELECT_MISMATCH
     |  
     |  SELECT_SUCCESS = CommandPointState.SELECT_SUCCESS
     |  
     |  SUCCESS = CommandPointState.SUCCESS
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class CommandSet(pybind11_builtins.pybind11_object)
     |  Provides a mechanism for building a set of one or more command headers.
     |  
     |  Method resolution order:
     |      CommandSet
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Add(...)
     |      Add(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. Add(self: pydnp3.opendnp3.CommandSet, items: List[pydnp3.opendnp3.IndexedControlRelayOutputBlock]) -> None
     |      
     |      2. Add(self: pydnp3.opendnp3.CommandSet, items: List[pydnp3.opendnp3.IndexedAnalogOutputInt16]) -> None
     |      
     |      3. Add(self: pydnp3.opendnp3.CommandSet, items: List[pydnp3.opendnp3.IndexedAnalogOutputInt32]) -> None
     |      
     |      4. Add(self: pydnp3.opendnp3.CommandSet, items: List[pydnp3.opendnp3.IndexedAnalogOutputFloat32]) -> None
     |      
     |      5. Add(self: pydnp3.opendnp3.CommandSet, items: List[pydnp3.opendnp3.IndexedAnalogOutputDouble64]) -> None
     |  
     |  StartHeader(...)
     |      StartHeader(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. StartHeader(self: pydnp3.opendnp3.CommandSet) -> pydnp3.opendnp3.ICommandCollectionControlRelayOutputBlock
     |      
     |      Begin a header of the parameterized type.
     |      
     |      2. StartHeader(self: pydnp3.opendnp3.CommandSet) -> pydnp3.opendnp3.ICommandCollectionAnalogOutputInt16
     |      
     |      Begin a header of the parameterized type.
     |      
     |      3. StartHeader(self: pydnp3.opendnp3.CommandSet) -> pydnp3.opendnp3.ICommandCollectionAnalogOutputInt32
     |      
     |      Begin a header of the parameterized type.
     |      
     |      4. StartHeader(self: pydnp3.opendnp3.CommandSet) -> pydnp3.opendnp3.ICommandCollectionAnalogOutputFloat32
     |      
     |      Begin a header of the parameterized type.
     |      
     |      5. StartHeader(self: pydnp3.opendnp3.CommandSet) -> pydnp3.opendnp3.ICommandCollectionAnalogOutputDouble64
     |      
     |      Begin a header of the parameterized type.
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.CommandSet) -> None
     |      
     |      Contrsuct an empty command set.
     |      
     |      2. __init__(self: pydnp3.opendnp3.CommandSet, arg0: pydnp3.opendnp3.CommandSet) -> None
     |      
     |      Construct a new command set and take ownership of the headers in argument.
     |      
     |      3. __init__(self: pydnp3.opendnp3.CommandSet, items: List[pydnp3.opendnp3.IndexedControlRelayOutputBlock]) -> None
     |      
     |      Construct a command set from a list of CROB.
     |      
     |      4. __init__(self: pydnp3.opendnp3.CommandSet, items: List[pydnp3.opendnp3.IndexedAnalogOutputInt16]) -> None
     |      
     |      Construct a command set from a list of AOInt16.
     |      
     |      5. __init__(self: pydnp3.opendnp3.CommandSet, items: List[pydnp3.opendnp3.IndexedAnalogOutputInt32]) -> None
     |      
     |      Construct a command set from a list of AOInt32.
     |      
     |      6. __init__(self: pydnp3.opendnp3.CommandSet, items: List[pydnp3.opendnp3.IndexedAnalogOutputFloat32]) -> None
     |      
     |      Construct a command set from a list of AOFloat32.
     |      
     |      7. __init__(self: pydnp3.opendnp3.CommandSet, items: List[pydnp3.opendnp3.IndexedAnalogOutputDouble64]) -> None
     |      
     |      Construct a command set from a list of AODouble64.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class CommandStatus(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      CommandStatus
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.CommandStatus, arg0: pydnp3.opendnp3.CommandStatus) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.CommandStatus) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.CommandStatus) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.CommandStatus, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.CommandStatus) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.CommandStatus, arg0: pydnp3.opendnp3.CommandStatus) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.CommandStatus) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.CommandStatus, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ALREADY_ACTIVE = CommandStatus.ALREADY_ACTIVE
     |  
     |  ALREADY_COMPLETE = CommandStatus.ALREADY_COMPLETE
     |  
     |  AUTOMATION_INHIBIT = CommandStatus.AUTOMATION_INHIBIT
     |  
     |  BLOCKED = CommandStatus.BLOCKED
     |  
     |  BLOCKED_OTHER_MASTER = CommandStatus.BLOCKED_OTHER_MASTER
     |  
     |  CANCELLED = CommandStatus.CANCELLED
     |  
     |  DOWNSTREAM_FAIL = CommandStatus.DOWNSTREAM_FAIL
     |  
     |  DOWNSTREAM_LOCAL = CommandStatus.DOWNSTREAM_LOCAL
     |  
     |  FORMAT_ERROR = CommandStatus.FORMAT_ERROR
     |  
     |  HARDWARE_ERROR = CommandStatus.HARDWARE_ERROR
     |  
     |  LOCAL = CommandStatus.LOCAL
     |  
     |  NON_PARTICIPATING = CommandStatus.NON_PARTICIPATING
     |  
     |  NOT_AUTHORIZED = CommandStatus.NOT_AUTHORIZED
     |  
     |  NOT_SUPPORTED = CommandStatus.NOT_SUPPORTED
     |  
     |  NO_SELECT = CommandStatus.NO_SELECT
     |  
     |  OUT_OF_RANGE = CommandStatus.OUT_OF_RANGE
     |  
     |  PROCESSING_LIMITED = CommandStatus.PROCESSING_LIMITED
     |  
     |  SUCCESS = CommandStatus.SUCCESS
     |  
     |  TIMEOUT = CommandStatus.TIMEOUT
     |  
     |  TOO_MANY_OPS = CommandStatus.TOO_MANY_OPS
     |  
     |  UNDEFINED = CommandStatus.UNDEFINED
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ConfigAuthMode(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      ConfigAuthMode
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.ConfigAuthMode, arg0: pydnp3.opendnp3.ConfigAuthMode) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.ConfigAuthMode) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.ConfigAuthMode) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ConfigAuthMode, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.ConfigAuthMode) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.ConfigAuthMode, arg0: pydnp3.opendnp3.ConfigAuthMode) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.ConfigAuthMode) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.ConfigAuthMode, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  NONE = ConfigAuthMode.NONE
     |  
     |  SAV5 = ConfigAuthMode.SAV5
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ControlCode(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      ControlCode
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.ControlCode, arg0: pydnp3.opendnp3.ControlCode) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.ControlCode) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.ControlCode) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ControlCode, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.ControlCode) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.ControlCode, arg0: pydnp3.opendnp3.ControlCode) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.ControlCode) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.ControlCode, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  CLOSE_PULSE_ON = ControlCode.CLOSE_PULSE_ON
     |  
     |  CLOSE_PULSE_ON_CANCEL = ControlCode.CLOSE_PULSE_ON_CANCEL
     |  
     |  LATCH_OFF = ControlCode.LATCH_OFF
     |  
     |  LATCH_OFF_CANCEL = ControlCode.LATCH_OFF_CANCEL
     |  
     |  LATCH_ON = ControlCode.LATCH_ON
     |  
     |  LATCH_ON_CANCEL = ControlCode.LATCH_ON_CANCEL
     |  
     |  NUL = ControlCode.NUL
     |  
     |  NUL_CANCEL = ControlCode.NUL_CANCEL
     |  
     |  PULSE_OFF = ControlCode.PULSE_OFF
     |  
     |  PULSE_OFF_CANCEL = ControlCode.PULSE_OFF_CANCEL
     |  
     |  PULSE_ON = ControlCode.PULSE_ON
     |  
     |  PULSE_ON_CANCEL = ControlCode.PULSE_ON_CANCEL
     |  
     |  TRIP_PULSE_ON = ControlCode.TRIP_PULSE_ON
     |  
     |  TRIP_PULSE_ON_CANCEL = ControlCode.TRIP_PULSE_ON_CANCEL
     |  
     |  UNDEFINED = ControlCode.UNDEFINED
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ControlRelayOutputBlock(pybind11_builtins.pybind11_object)
     |  Describes an incoming control request from the master. 
     |  It is the applications responsibility to handle the request and return an approiate status code. 
     |  The PULSE_CLOSE and PULSE_TRIP ControlCodes require setting the mOnTimeMS, mOffTimeMS and mCount variables, otherwise just use the defaults.
     |  
     |  Method resolution order:
     |      ControlRelayOutputBlock
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ValuesEqual(...)
     |      ValuesEqual(self: pydnp3.opendnp3.ControlRelayOutputBlock, arg0: pydnp3.opendnp3.ControlRelayOutputBlock) -> bool
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.ControlRelayOutputBlock, arg0: pydnp3.opendnp3.ControlRelayOutputBlock) -> bool
     |      
     |      Equality comparision.
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.ControlRelayOutputBlock, functionCode: pydnp3.opendnp3.ControlCode = ControlCode.LATCH_ON, count: int = 1, onTimeMS: int = 100, offTimeMS: int = 100, status: pydnp3.opendnp3.CommandStatus = CommandStatus.SUCCESS) -> None
     |      
     |         Primary constructor where the control code is set by enumeration. 
     |      :param count: defaults to 1 
     |      :param onTimeMS: defaults to 100 
     |      :param offTimeMS: defaults to 100 
     |      :param status: defaults to opendnp3.ControlCode.LATCH_ON
     |      
     |      2. __init__(self: pydnp3.opendnp3.ControlRelayOutputBlock, rawCode: int, count: int = 1, onTimeMS: int = 100, offTimeMS: int = 100, status: pydnp3.opendnp3.CommandStatus = CommandStatus.SUCCESS) -> None
     |      
     |         Overloaded constructor that allows the user to set a raw control code for non-standard codes. 
     |      :param count: defaults to 1 
     |      :param onTimeMS: defaults to 100 
     |      :param offTimeMS: defaults to 100 
     |      :param status: defaults to opendnp3.ControlCode.LATCH_ON
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  count
     |      The number of times to repeat the operation.
     |  
     |  functionCode
     |      Allows matching of exact code.
     |  
     |  offTimeMS
     |      The off time for the pulse train.
     |  
     |  onTimeMS
     |      The on time for the pulse train.
     |  
     |  rawCode
     |      The raw code in bytes.
     |  
     |  status
     |      Status of the resulting operation.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class CountUint16(pybind11_builtins.pybind11_object)
     |  A template for an integer count.
     |  
     |  Method resolution order:
     |      CountUint16
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.CountUint16, value: int = 0) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class CountUint8(pybind11_builtins.pybind11_object)
     |  A template for an integer count.
     |  
     |  Method resolution order:
     |      CountUint8
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.CountUint8, value: int = 0) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class Counter(TypedMeasurementUint32)
     |  Counters are used for describing generally increasing values (non-negative!). 
     |  Good examples are total power consumed, max voltage. Think odometer on a car.
     |  
     |  Method resolution order:
     |      Counter
     |      TypedMeasurementUint32
     |      Measurement
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.Counter) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.Counter, value: int) -> None
     |      
     |      :type value: unsigned int
     |      
     |      3. __init__(self: pydnp3.opendnp3.Counter, value: int, flags: pydnp3.opendnp3.Flags) -> None
     |      
     |      :type value: unsigned int
     |      
     |      4. __init__(self: pydnp3.opendnp3.Counter, value: int, flags: pydnp3.opendnp3.Flags, time: pydnp3.opendnp3.DNPTime) -> None
     |      
     |      :type value: unsigned int
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from TypedMeasurementUint32:
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Measurement:
     |  
     |  flags
     |      Bitfield that stores type specific quality information.
     |  
     |  time
     |      Timestamp associated with the measurement.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class CounterConfig(DeadbandConfigCounterInfo)
     |  Method resolution order:
     |      CounterConfig
     |      DeadbandConfigCounterInfo
     |      EventConfigCounterInfo
     |      StaticConfigCounterInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.CounterConfig) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from DeadbandConfigCounterInfo:
     |  
     |  deadband
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from EventConfigCounterInfo:
     |  
     |  clazz
     |  
     |  evariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from StaticConfigCounterInfo:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class CounterInfo(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      CounterInfo
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  DefaultEventVariation
     |  
     |  DefaultStaticVariation
     |  
     |  EventTypeEnum
     |  
     |  StaticTypeEnum
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class CounterQuality(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      CounterQuality
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.CounterQuality, arg0: pydnp3.opendnp3.CounterQuality) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.CounterQuality) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.CounterQuality) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.CounterQuality, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.CounterQuality) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.CounterQuality, arg0: pydnp3.opendnp3.CounterQuality) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.CounterQuality) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.CounterQuality, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  COMM_LOST = CounterQuality.COMM_LOST
     |  
     |  DISCONTINUITY = CounterQuality.DISCONTINUITY
     |  
     |  LOCAL_FORCED = CounterQuality.LOCAL_FORCED
     |  
     |  ONLINE = CounterQuality.ONLINE
     |  
     |  REMOTE_FORCED = CounterQuality.REMOTE_FORCED
     |  
     |  RESERVED = CounterQuality.RESERVED
     |  
     |  RESTART = CounterQuality.RESTART
     |  
     |  ROLLOVER = CounterQuality.ROLLOVER
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class CounterSpec(CounterInfo)
     |  Method resolution order:
     |      CounterSpec
     |      CounterInfo
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  IsEvent(...) from builtins.PyCapsule
     |      IsEvent(oldValue: pydnp3.opendnp3.Counter, newValue: pydnp3.opendnp3.Counter, deadband: int) -> bool
     |      
     |      :type deadband: unsigned int
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties inherited from CounterInfo:
     |  
     |  DefaultEventVariation
     |  
     |  DefaultStaticVariation
     |  
     |  EventTypeEnum
     |  
     |  StaticTypeEnum
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class DNPTime(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      DNPTime
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.DNPTime) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.DNPTime, value: int) -> None
     |      
     |      :type value: long
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  value
     |      :type value: long
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class DatabaseSizes(pybind11_builtins.pybind11_object)
     |  Specifies the number and type of measurements in an outstation database.
     |  
     |  Method resolution order:
     |      DatabaseSizes
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.DatabaseSizes) -> None
     |      
     |      Default constructor: set all arguments to 0.
     |      
     |      2. __init__(self: pydnp3.opendnp3.DatabaseSizes, numBinary: int, numDoubleBinary: int, numAnalog: int, numCounter: int, numFrozenCounter: int, numBinaryOutputStatus: int, numAnalogOutputStatus: int, numTimeAndInterval: int) -> None
     |      
     |      :type numBinary: unsigned short 
     |      :type numDoubleBinary: unsigned short 
     |      :type numAnalog: unsigned short 
     |      :type numCounter: unsigned short 
     |      :type numFrozenCounter: unsigned short 
     |      :type numBinaryOutputStatus: unsigned short 
     |      :type numAnalogOutputStatus: unsigned short 
     |      :type numTimeAndInterval: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  AllTypes(...) from builtins.PyCapsule
     |      AllTypes(count: int) -> pydnp3.opendnp3.DatabaseSizes
     |      
     |      :type count: unsigned short
     |  
     |  AnalogOnly(...) from builtins.PyCapsule
     |      AnalogOnly(count: int) -> pydnp3.opendnp3.DatabaseSizes
     |      
     |      :type count: unsigned short
     |  
     |  AnalogOutputStatusOnly(...) from builtins.PyCapsule
     |      AnalogOutputStatusOnly(count: int) -> pydnp3.opendnp3.DatabaseSizes
     |      
     |      :type count: unsigned short
     |  
     |  BinaryOnly(...) from builtins.PyCapsule
     |      BinaryOnly(count: int) -> pydnp3.opendnp3.DatabaseSizes
     |      
     |      :type count: unsigned short
     |  
     |  BinaryOutputStatusOnly(...) from builtins.PyCapsule
     |      BinaryOutputStatusOnly(count: int) -> pydnp3.opendnp3.DatabaseSizes
     |      
     |      :type count: unsigned short
     |  
     |  CounterOnly(...) from builtins.PyCapsule
     |      CounterOnly(count: int) -> pydnp3.opendnp3.DatabaseSizes
     |      
     |      :type count: unsigned short
     |  
     |  DoubleBinaryOnly(...) from builtins.PyCapsule
     |      DoubleBinaryOnly(count: int) -> pydnp3.opendnp3.DatabaseSizes
     |      
     |      :type count: unsigned short
     |  
     |  Empty(...) from builtins.PyCapsule
     |      Empty() -> pydnp3.opendnp3.DatabaseSizes
     |  
     |  FrozenCounterOnly(...) from builtins.PyCapsule
     |      FrozenCounterOnly(count: int) -> pydnp3.opendnp3.DatabaseSizes
     |      
     |      :type count: unsigned short
     |  
     |  TimeAndIntervalOnly(...) from builtins.PyCapsule
     |      TimeAndIntervalOnly(count: int) -> pydnp3.opendnp3.DatabaseSizes
     |      
     |      :type count: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  numAnalog
     |      :type DatabaseSizes: unsigned short
     |  
     |  numAnalogOutputStatus
     |      :type numAnalogOutputStatus: unsigned short
     |  
     |  numBinary
     |      :type numBinary: unsigned short
     |  
     |  numBinaryOutputStatus
     |      :type numBinaryOutputStatus: unsigned short
     |  
     |  numCounter
     |      :type numCounter: unsigned short
     |  
     |  numDoubleBinary
     |      :type numDoubleBinary: unsigned short
     |  
     |  numFrozenCounter
     |      :type numFrozenCounter: unsigned short
     |  
     |  numTimeAndInterval
     |      :type numTimeAndInterval: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class DeadbandConfigAnalogInfo(EventConfigAnalogInfo)
     |  Method resolution order:
     |      DeadbandConfigAnalogInfo
     |      EventConfigAnalogInfo
     |      StaticConfigAnalogInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.DeadbandConfigAnalogInfo) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  deadband
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from EventConfigAnalogInfo:
     |  
     |  clazz
     |  
     |  evariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from StaticConfigAnalogInfo:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class DeadbandConfigAnalogOutputStatusInfo(EventConfigAnalogOutputStatusInfo)
     |  Method resolution order:
     |      DeadbandConfigAnalogOutputStatusInfo
     |      EventConfigAnalogOutputStatusInfo
     |      StaticConfigAnalogOutputStatusInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.DeadbandConfigAnalogOutputStatusInfo) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  deadband
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from EventConfigAnalogOutputStatusInfo:
     |  
     |  clazz
     |  
     |  evariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from StaticConfigAnalogOutputStatusInfo:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class DeadbandConfigCounterInfo(EventConfigCounterInfo)
     |  Method resolution order:
     |      DeadbandConfigCounterInfo
     |      EventConfigCounterInfo
     |      StaticConfigCounterInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.DeadbandConfigCounterInfo) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  deadband
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from EventConfigCounterInfo:
     |  
     |  clazz
     |  
     |  evariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from StaticConfigCounterInfo:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class DeadbandConfigFrozenCounterInfo(EventConfigFrozenCounterInfo)
     |  Method resolution order:
     |      DeadbandConfigFrozenCounterInfo
     |      EventConfigFrozenCounterInfo
     |      StaticConfigFrozenCounterInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.DeadbandConfigFrozenCounterInfo) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  deadband
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from EventConfigFrozenCounterInfo:
     |  
     |  clazz
     |  
     |  evariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from StaticConfigFrozenCounterInfo:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class DefaultOutstationApplication(IOutstationApplication)
     |  A singleton with default setting useful for examples.
     |  
     |  Method resolution order:
     |      DefaultOutstationApplication
     |      IOutstationApplication
     |      ILinkListener
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.DefaultOutstationApplication) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  Create(...) from builtins.PyCapsule
     |      Create() -> pydnp3.opendnp3.IOutstationApplication
     |      
     |      :return: shared_ptr to opendnp3.IOutstationApplication
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from IOutstationApplication:
     |  
     |  ColdRestart(...)
     |      ColdRestart(self: pydnp3.opendnp3.IOutstationApplication) -> int
     |      
     |      The outstation should perform a complete restart. 
     |      (See the DNP3 specification for a complete descripton of normal behavior.) 
     |      Return number of seconds or milliseconds until restart is complete. The value is interpreted based on the Restart Mode returned from ColdRestartSupport().
     |  
     |  ColdRestartSupport(...)
     |      ColdRestartSupport(self: pydnp3.opendnp3.IOutstationApplication) -> pydnp3.opendnp3.RestartMode
     |      
     |      Query the outstation for the cold restart mode it supports.
     |  
     |  GetApplicationIIN(...)
     |      GetApplicationIIN(self: pydnp3.opendnp3.IOutstationApplication) -> pydnp3.opendnp3.ApplicationIIN
     |      
     |      Returns the application-controlled IIN field.
     |  
     |  RecordClassAssignment(...)
     |      RecordClassAssignment(self: pydnp3.opendnp3.IOutstationApplication, type: pydnp3.opendnp3.AssignClassType, clazz: pydnp3.opendnp3.PointClass, start: int, stop: int) -> None
     |      
     |         Called if SupportsAssignClass returns true. 
     |         The type and range are pre-validated against the outstation's database and class assignments are automatically applied internally. 
     |         This callback allows user code to persist the changes to non-volatile memory.:type start: unsigned short 
     |      :type stop: unsigned short
     |  
     |  SupportsAssignClass(...)
     |      SupportsAssignClass(self: pydnp3.opendnp3.IOutstationApplication) -> bool
     |      
     |      True if the outstation supports the assign class function code. 
     |      If this function returns false, the assign class callbacks will never be called and the outstation will return IIN 2.1 (FUNC_NOT_SUPPORTED) when it receives this function code.
     |  
     |  SupportsWriteAbsoluteTime(...)
     |      SupportsWriteAbsoluteTime(self: pydnp3.opendnp3.IOutstationApplication) -> bool
     |      
     |      Queries whether the the outstation supports absolute time writes. 
     |      If this function returns false, WriteAbsoluteTime will never be called and the outstation will return IIN 2.1 (FUNC_NOT_SUPPORTED).
     |  
     |  SupportsWriteTimeAndInterval(...)
     |      SupportsWriteTimeAndInterval(self: pydnp3.opendnp3.IOutstationApplication) -> bool
     |      
     |      Queries whether the outstation supports the writing of TimeAndInterval. 
     |      If this function returns false, WriteTimeAndInterval will never be called and the outstation will return IIN 2.1 (FUNC_NOT_SUPPORTED) when it receives this request.
     |  
     |  WarmRestart(...)
     |      WarmRestart(self: pydnp3.opendnp3.IOutstationApplication) -> int
     |      
     |      The outstation should perform a partial restart of only the DNP3 application. 
     |      (See the DNP3 specification for a complete descripton of normal behavior.) 
     |      Return number of seconds or milliseconds until restart is complete. The value is interpreted based on the Restart Mode returned from WarmRestartSupport().
     |  
     |  WarmRestartSupport(...)
     |      WarmRestartSupport(self: pydnp3.opendnp3.IOutstationApplication) -> pydnp3.opendnp3.RestartMode
     |      
     |      Query the outstation for the warm restart mode it supports.
     |  
     |  WriteAbsoluteTime(...)
     |      WriteAbsoluteTime(self: pydnp3.opendnp3.IOutstationApplication, timestamp: pydnp3.openpal.UTCTimestamp) -> bool
     |      
     |      Write the time to outstation, only called if SupportsWriteAbsoluteTime return true. 
     |      Return boolean value indicating if the time value supplied was accepted. Returning false will cause the outstation to set IIN 2.3 (PARAM_ERROR) in its response. 
     |      The outstation should clear its NEED_TIME field when handling this response.
     |  
     |  WriteTimeAndInterval(...)
     |      WriteTimeAndInterval(self: pydnp3.opendnp3.IOutstationApplication, values: pydnp3.opendnp3.ICollectionIndexedTimeAndInterval) -> bool
     |      
     |      Write one or more TimeAndInterval values. Only called if SupportsWriteTimeAndInterval returns true. 
     |      The outstation application code is reponsible for updating TimeAndInterval values in the database if this behavior is desired. 
     |      Return boolean value indicating if the values supplied were accepted. Returning false will cause the outstation to set IIN 2.3 (PARAM_ERROR) in its response.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from ILinkListener:
     |  
     |  OnKeepAliveFailure(...)
     |      OnKeepAliveFailure(self: pydnp3.opendnp3.ILinkListener) -> None
     |      
     |      Called when a keep alive message (request link status) receives no response.
     |  
     |  OnKeepAliveInitiated(...)
     |      OnKeepAliveInitiated(self: pydnp3.opendnp3.ILinkListener) -> None
     |      
     |      Called when the keep alive timer elapses. This doesn't denote a keep-alive failure, it's just a notification.
     |  
     |  OnKeepAliveSuccess(...)
     |      OnKeepAliveSuccess(self: pydnp3.opendnp3.ILinkListener) -> None
     |      
     |      Called when a keep alive message receives a valid response.
     |  
     |  OnStateChange(...)
     |      OnStateChange(self: pydnp3.opendnp3.ILinkListener, value: pydnp3.opendnp3.LinkStatus) -> None
     |      
     |      Called when a the reset/unreset status of the link layer changes.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class DoubleBit(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      DoubleBit
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.DoubleBit, arg0: pydnp3.opendnp3.DoubleBit) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.DoubleBit) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.DoubleBit) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.DoubleBit, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.DoubleBit) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.DoubleBit, arg0: pydnp3.opendnp3.DoubleBit) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.DoubleBit) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.DoubleBit, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  DETERMINED_OFF = DoubleBit.DETERMINED_OFF
     |  
     |  DETERMINED_ON = DoubleBit.DETERMINED_ON
     |  
     |  INDETERMINATE = DoubleBit.INDETERMINATE
     |  
     |  INTERMEDIATE = DoubleBit.INTERMEDIATE
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class DoubleBitBinary(TypedMeasurementDoubleBit)
     |  The Double-bit Binary data type has two stable states, on and off, and an in transit state. 
     |  Motor operated switches or binary valves are good examples.
     |  
     |  Method resolution order:
     |      DoubleBitBinary
     |      TypedMeasurementDoubleBit
     |      Measurement
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.DoubleBitBinary) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.DoubleBitBinary, value: pydnp3.opendnp3.DoubleBit) -> None
     |      
     |      3. __init__(self: pydnp3.opendnp3.DoubleBitBinary, flags: pydnp3.opendnp3.Flags) -> None
     |      
     |      4. __init__(self: pydnp3.opendnp3.DoubleBitBinary, flags: pydnp3.opendnp3.Flags, time: pydnp3.opendnp3.DNPTime) -> None
     |      
     |      5. __init__(self: pydnp3.opendnp3.DoubleBitBinary, value: pydnp3.opendnp3.DoubleBit, flags: pydnp3.opendnp3.Flags) -> None
     |      
     |      6. __init__(self: pydnp3.opendnp3.DoubleBitBinary, value: pydnp3.opendnp3.DoubleBit, flags: pydnp3.opendnp3.Flags, time: pydnp3.opendnp3.DNPTime) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from TypedMeasurementDoubleBit:
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Measurement:
     |  
     |  flags
     |      Bitfield that stores type specific quality information.
     |  
     |  time
     |      Timestamp associated with the measurement.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class DoubleBitBinaryConfig(EventConfigDoubleBitBinaryInfo)
     |  Method resolution order:
     |      DoubleBitBinaryConfig
     |      EventConfigDoubleBitBinaryInfo
     |      StaticConfigDoubleBitBinaryInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.DoubleBitBinaryConfig) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from EventConfigDoubleBitBinaryInfo:
     |  
     |  clazz
     |  
     |  evariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from StaticConfigDoubleBitBinaryInfo:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class DoubleBitBinaryInfo(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      DoubleBitBinaryInfo
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  DefaultEventVariation
     |  
     |  DefaultStaticVariation
     |  
     |  EventTypeEnum
     |  
     |  StaticTypeEnum
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class DoubleBitBinaryQuality(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      DoubleBitBinaryQuality
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.DoubleBitBinaryQuality, arg0: pydnp3.opendnp3.DoubleBitBinaryQuality) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.DoubleBitBinaryQuality) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.DoubleBitBinaryQuality) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.DoubleBitBinaryQuality, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.DoubleBitBinaryQuality) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.DoubleBitBinaryQuality, arg0: pydnp3.opendnp3.DoubleBitBinaryQuality) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.DoubleBitBinaryQuality) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.DoubleBitBinaryQuality, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  CHATTER_FILTER = DoubleBitBinaryQuality.CHATTER_FILTER
     |  
     |  COMM_LOST = DoubleBitBinaryQuality.COMM_LOST
     |  
     |  LOCAL_FORCED = DoubleBitBinaryQuality.LOCAL_FORCED
     |  
     |  ONLINE = DoubleBitBinaryQuality.ONLINE
     |  
     |  REMOTE_FORCED = DoubleBitBinaryQuality.REMOTE_FORCED
     |  
     |  RESTART = DoubleBitBinaryQuality.RESTART
     |  
     |  STATE1 = DoubleBitBinaryQuality.STATE1
     |  
     |  STATE2 = DoubleBitBinaryQuality.STATE2
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class DoubleBitBinarySpec(DoubleBitBinaryInfo)
     |  Method resolution order:
     |      DoubleBitBinarySpec
     |      DoubleBitBinaryInfo
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  IsEvent(...) from builtins.PyCapsule
     |      IsEvent(oldValue: pydnp3.opendnp3.DoubleBitBinary, newValue: pydnp3.opendnp3.DoubleBitBinary) -> bool
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties inherited from DoubleBitBinaryInfo:
     |  
     |  DefaultEventVariation
     |  
     |  DefaultStaticVariation
     |  
     |  EventTypeEnum
     |  
     |  StaticTypeEnum
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EmptyEventCellA null object for types that have no metadata.(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      EmptyEventCellA null object for types that have no metadata.
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EventAnalogOutputStatusVariation(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      EventAnalogOutputStatusVariation
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.EventAnalogOutputStatusVariation, arg0: pydnp3.opendnp3.EventAnalogOutputStatusVariation) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.EventAnalogOutputStatusVariation) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.EventAnalogOutputStatusVariation) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.EventAnalogOutputStatusVariation, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.EventAnalogOutputStatusVariation) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.EventAnalogOutputStatusVariation, arg0: pydnp3.opendnp3.EventAnalogOutputStatusVariation) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.EventAnalogOutputStatusVariation) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.EventAnalogOutputStatusVariation, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Group42Var1 = EventAnalogOutputStatusVariation.Group42Var1
     |  
     |  Group42Var2 = EventAnalogOutputStatusVariation.Group42Var2
     |  
     |  Group42Var3 = EventAnalogOutputStatusVariation.Group42Var3
     |  
     |  Group42Var4 = EventAnalogOutputStatusVariation.Group42Var4
     |  
     |  Group42Var5 = EventAnalogOutputStatusVariation.Group42Var5
     |  
     |  Group42Var6 = EventAnalogOutputStatusVariation.Group42Var6
     |  
     |  Group42Var7 = EventAnalogOutputStatusVariation.Group42Var7
     |  
     |  Group42Var8 = EventAnalogOutputStatusVariation.Group42Var8
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EventAnalogVariation(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      EventAnalogVariation
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.EventAnalogVariation, arg0: pydnp3.opendnp3.EventAnalogVariation) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.EventAnalogVariation) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.EventAnalogVariation) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.EventAnalogVariation, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.EventAnalogVariation) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.EventAnalogVariation, arg0: pydnp3.opendnp3.EventAnalogVariation) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.EventAnalogVariation) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.EventAnalogVariation, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Group32Var1 = EventAnalogVariation.Group32Var1
     |  
     |  Group32Var2 = EventAnalogVariation.Group32Var2
     |  
     |  Group32Var3 = EventAnalogVariation.Group32Var3
     |  
     |  Group32Var4 = EventAnalogVariation.Group32Var4
     |  
     |  Group32Var5 = EventAnalogVariation.Group32Var5
     |  
     |  Group32Var6 = EventAnalogVariation.Group32Var6
     |  
     |  Group32Var7 = EventAnalogVariation.Group32Var7
     |  
     |  Group32Var8 = EventAnalogVariation.Group32Var8
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EventBinaryOutputStatusVariation(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      EventBinaryOutputStatusVariation
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.EventBinaryOutputStatusVariation, arg0: pydnp3.opendnp3.EventBinaryOutputStatusVariation) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.EventBinaryOutputStatusVariation) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.EventBinaryOutputStatusVariation) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.EventBinaryOutputStatusVariation, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.EventBinaryOutputStatusVariation) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.EventBinaryOutputStatusVariation, arg0: pydnp3.opendnp3.EventBinaryOutputStatusVariation) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.EventBinaryOutputStatusVariation) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.EventBinaryOutputStatusVariation, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Group11Var1 = EventBinaryOutputStatusVariation.Group11Var1
     |  
     |  Group11Var2 = EventBinaryOutputStatusVariation.Group11Var2
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EventBinaryVariation(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      EventBinaryVariation
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.EventBinaryVariation, arg0: pydnp3.opendnp3.EventBinaryVariation) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.EventBinaryVariation) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.EventBinaryVariation) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.EventBinaryVariation, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.EventBinaryVariation) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.EventBinaryVariation, arg0: pydnp3.opendnp3.EventBinaryVariation) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.EventBinaryVariation) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.EventBinaryVariation, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Group2Var1 = EventBinaryVariation.Group2Var1
     |  
     |  Group2Var2 = EventBinaryVariation.Group2Var2
     |  
     |  Group2Var3 = EventBinaryVariation.Group2Var3
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EventBufferConfig(pybind11_builtins.pybind11_object)
     |  Configuration of maximum event counts per event type. 
     |  The underlying implementation uses a *preallocated* heap buffer to store events until they are transmitted to the master. 
     |  The size of this buffer is proportional to the TotalEvents() method, i.e. the sum of the maximum events for each type. 
     |  Implementations should configure the buffers to store a reasonable number events given the polling frequency and memory restrictions of the target platform.
     |  
     |  Method resolution order:
     |      EventBufferConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  GetMaxEventsForType(...)
     |      GetMaxEventsForType(self: pydnp3.opendnp3.EventBufferConfig, type: pydnp3.opendnp3.EventType) -> int
     |      
     |      Retrieve the number of events using a type enumeration.
     |  
     |  TotalEvents(...)
     |      TotalEvents(self: pydnp3.opendnp3.EventBufferConfig) -> int
     |      
     |      :return: the sum of all event count maximums (number of elements in preallocated buffer)
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.EventBufferConfig, maxBinaryEvents: int = 0, maxDoubleBinaryEvents: int = 0, maxAnalogEvents: int = 0, maxCounterEvents: int = 0, maxFrozenCounterEvents: int = 0, maxBinaryOutputStatusEvents: int = 0, maxAnalogOutputStatusEvents: int = 0, maxSecurityStatisticEvents: int = 0) -> None
     |      
     |         Construct the class specifying the maximum number of events for each type individually. 
     |      :type maxBinaryEvents: unsigned short 
     |      :type maxDoubleBinaryEvents: unsigned short 
     |      :type maxAnalogEvents: unsigned short 
     |      :type maxCounterEvents: unsigned short 
     |      :type maxFrozenCounterEvents: unsigned short 
     |      :type maxBinaryOutputStatusEvents: unsigned short 
     |      :type maxAnalogOutputStatusEvents: unsigned short 
     |      :type maxSecurityStatisticEvents: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  AllTypes(...) from builtins.PyCapsule
     |      AllTypes(sizes: int) -> pydnp3.opendnp3.EventBufferConfig
     |      
     |         Construct the class using the same maximum for all types. This is mainly used for demo purposes. 
     |         You probably don't want to use this method unless your implementation actually reports every type. 
     |      :type sizes: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  maxAnalogEvents
     |      The number of analog events the outstation will buffer before overflowing. 
     |      :type : unsigned short
     |  
     |  maxAnalogOutputStatusEvents
     |      The number of analog output status events the outstation will buffer before overflowing. 
     |      :type maxAnalogOutputStatusEvents: unsigned short
     |  
     |  maxBinaryEvents
     |      The number of binary events the outstation will buffer before overflowing. 
     |      :type maxBinaryEvents: unsigned short
     |  
     |  maxBinaryOutputStatusEvents
     |      The number of binary output status events the outstation will buffer before overflowing. 
     |      :type maxBinaryOutputStatusEvents: unsigned short
     |  
     |  maxCounterEvents
     |      The number of counter events the outstation will buffer before overflowing. 
     |      :type maxAnalogEvents: unsigned short
     |  
     |  maxDoubleBinaryEvents
     |      The number of double bit binary events the outstation will buffer before overflowing. 
     |      :type maxDoubleBinaryEvents: unsigned short
     |  
     |  maxFrozenCounterEvents
     |      The number of frozen counter events the outstation will buffer before overflowing. 
     |      :type maxFrozenCounterEvents: unsigned short
     |  
     |  maxSecurityStatisticEvents
     |      The number of security statistic events the outstation will buffer before overflowing. 
     |      :type maxSecurityStatisticEvents: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EventCellBaseBinaryOutputStatusSpec(pybind11_builtins.pybind11_object)
     |  Base class for different types of event metadata.
     |  
     |  Method resolution order:
     |      EventCellBaseBinaryOutputStatusSpec
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  SetEventValue(...)
     |      SetEventValue(self: pydnp3.opendnp3.EventCellBaseBinaryOutputStatusSpec, value: opendnp3::BinaryOutputStatus) -> None
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  clazz
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EventCellBaseBinarySpec(pybind11_builtins.pybind11_object)
     |  Base class for different types of event metadata.
     |  
     |  Method resolution order:
     |      EventCellBaseBinarySpec
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  SetEventValue(...)
     |      SetEventValue(self: pydnp3.opendnp3.EventCellBaseBinarySpec, value: opendnp3::Binary) -> None
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  clazz
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EventCellBaseDoubleBitBinarySpec(pybind11_builtins.pybind11_object)
     |  Base class for different types of event metadata.
     |  
     |  Method resolution order:
     |      EventCellBaseDoubleBitBinarySpec
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  SetEventValue(...)
     |      SetEventValue(self: pydnp3.opendnp3.EventCellBaseDoubleBitBinarySpec, value: opendnp3::DoubleBitBinary) -> None
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  clazz
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EventClass(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      EventClass
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.EventClass, arg0: pydnp3.opendnp3.EventClass) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.EventClass) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.EventClass) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.EventClass, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.EventClass) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.EventClass, arg0: pydnp3.opendnp3.EventClass) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.EventClass) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.EventClass, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  EC1 = EventClass.EC1
     |  
     |  EC2 = EventClass.EC2
     |  
     |  EC3 = EventClass.EC3
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EventConfigAnalogInfo(StaticConfigAnalogInfo)
     |  Method resolution order:
     |      EventConfigAnalogInfo
     |      StaticConfigAnalogInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.EventConfigAnalogInfo) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  clazz
     |  
     |  evariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from StaticConfigAnalogInfo:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EventConfigAnalogOutputStatusInfo(StaticConfigAnalogOutputStatusInfo)
     |  Method resolution order:
     |      EventConfigAnalogOutputStatusInfo
     |      StaticConfigAnalogOutputStatusInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.EventConfigAnalogOutputStatusInfo) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  clazz
     |  
     |  evariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from StaticConfigAnalogOutputStatusInfo:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EventConfigBinaryInfo(StaticConfigBinaryInfo)
     |  Method resolution order:
     |      EventConfigBinaryInfo
     |      StaticConfigBinaryInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.EventConfigBinaryInfo) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  clazz
     |  
     |  evariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from StaticConfigBinaryInfo:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EventConfigBinaryOutputStatusInfo(StaticConfigBinaryOutputStatusInfo)
     |  Method resolution order:
     |      EventConfigBinaryOutputStatusInfo
     |      StaticConfigBinaryOutputStatusInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.EventConfigBinaryOutputStatusInfo) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  clazz
     |  
     |  evariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from StaticConfigBinaryOutputStatusInfo:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EventConfigCounterInfo(StaticConfigCounterInfo)
     |  Method resolution order:
     |      EventConfigCounterInfo
     |      StaticConfigCounterInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.EventConfigCounterInfo) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  clazz
     |  
     |  evariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from StaticConfigCounterInfo:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EventConfigDoubleBitBinaryInfo(StaticConfigDoubleBitBinaryInfo)
     |  Method resolution order:
     |      EventConfigDoubleBitBinaryInfo
     |      StaticConfigDoubleBitBinaryInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.EventConfigDoubleBitBinaryInfo) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  clazz
     |  
     |  evariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from StaticConfigDoubleBitBinaryInfo:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EventConfigFrozenCounterInfo(StaticConfigFrozenCounterInfo)
     |  Method resolution order:
     |      EventConfigFrozenCounterInfo
     |      StaticConfigFrozenCounterInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.EventConfigFrozenCounterInfo) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  clazz
     |  
     |  evariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from StaticConfigFrozenCounterInfo:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EventCounterVariation(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      EventCounterVariation
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.EventCounterVariation, arg0: pydnp3.opendnp3.EventCounterVariation) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.EventCounterVariation) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.EventCounterVariation) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.EventCounterVariation, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.EventCounterVariation) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.EventCounterVariation, arg0: pydnp3.opendnp3.EventCounterVariation) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.EventCounterVariation) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.EventCounterVariation, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Group22Var1 = EventCounterVariation.Group22Var1
     |  
     |  Group22Var2 = EventCounterVariation.Group22Var2
     |  
     |  Group22Var5 = EventCounterVariation.Group22Var5
     |  
     |  Group22Var6 = EventCounterVariation.Group22Var6
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EventDoubleBinaryVariation(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      EventDoubleBinaryVariation
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.EventDoubleBinaryVariation, arg0: pydnp3.opendnp3.EventDoubleBinaryVariation) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.EventDoubleBinaryVariation) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.EventDoubleBinaryVariation) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.EventDoubleBinaryVariation, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.EventDoubleBinaryVariation) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.EventDoubleBinaryVariation, arg0: pydnp3.opendnp3.EventDoubleBinaryVariation) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.EventDoubleBinaryVariation) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.EventDoubleBinaryVariation, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Group4Var1 = EventDoubleBinaryVariation.Group4Var1
     |  
     |  Group4Var2 = EventDoubleBinaryVariation.Group4Var2
     |  
     |  Group4Var3 = EventDoubleBinaryVariation.Group4Var3
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EventFrozenCounterVariation(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      EventFrozenCounterVariation
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.EventFrozenCounterVariation, arg0: pydnp3.opendnp3.EventFrozenCounterVariation) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.EventFrozenCounterVariation) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.EventFrozenCounterVariation) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.EventFrozenCounterVariation, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.EventFrozenCounterVariation) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.EventFrozenCounterVariation, arg0: pydnp3.opendnp3.EventFrozenCounterVariation) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.EventFrozenCounterVariation) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.EventFrozenCounterVariation, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Group23Var1 = EventFrozenCounterVariation.Group23Var1
     |  
     |  Group23Var2 = EventFrozenCounterVariation.Group23Var2
     |  
     |  Group23Var5 = EventFrozenCounterVariation.Group23Var5
     |  
     |  Group23Var6 = EventFrozenCounterVariation.Group23Var6
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EventMode(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      EventMode
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.EventMode, arg0: pydnp3.opendnp3.EventMode) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.EventMode) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.EventMode) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.EventMode, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.EventMode) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.EventMode, arg0: pydnp3.opendnp3.EventMode) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.EventMode) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.EventMode, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Detect = EventMode.Detect
     |  
     |  Force = EventMode.Force
     |  
     |  Suppress = EventMode.Suppress
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EventSecurityStatVariation(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      EventSecurityStatVariation
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.EventSecurityStatVariation, arg0: pydnp3.opendnp3.EventSecurityStatVariation) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.EventSecurityStatVariation) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.EventSecurityStatVariation) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.EventSecurityStatVariation, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.EventSecurityStatVariation) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.EventSecurityStatVariation, arg0: pydnp3.opendnp3.EventSecurityStatVariation) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.EventSecurityStatVariation) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.EventSecurityStatVariation, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Group122Var1 = EventSecurityStatVariation.Group122Var1
     |  
     |  Group122Var2 = EventSecurityStatVariation.Group122Var2
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class EventType(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      EventType
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.EventType, arg0: pydnp3.opendnp3.EventType) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.EventType) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.EventType) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.EventType, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.EventType) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.EventType, arg0: pydnp3.opendnp3.EventType) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.EventType) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.EventType, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Analog = EventType.Analog
     |  
     |  AnalogOutputStatus = EventType.AnalogOutputStatus
     |  
     |  Binary = EventType.Binary
     |  
     |  BinaryOutputStatus = EventType.BinaryOutputStatus
     |  
     |  Counter = EventType.Counter
     |  
     |  DoubleBitBinary = EventType.DoubleBitBinary
     |  
     |  FrozenCounter = EventType.FrozenCounter
     |  
     |  SecurityStat = EventType.SecurityStat
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class Flags(pybind11_builtins.pybind11_object)
     |  Measurement Flags.
     |  
     |  Method resolution order:
     |      Flags
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  IsSet(...)
     |      IsSet(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. IsSet(self: pydnp3.opendnp3.Flags, flag: pydnp3.opendnp3.BinaryQuality) -> bool
     |      
     |      2. IsSet(self: pydnp3.opendnp3.Flags, flag: pydnp3.opendnp3.AnalogQuality) -> bool
     |      
     |      3. IsSet(self: pydnp3.opendnp3.Flags, flag: pydnp3.opendnp3.CounterQuality) -> bool
     |      
     |      4. IsSet(self: pydnp3.opendnp3.Flags, flag: pydnp3.opendnp3.FrozenCounterQuality) -> bool
     |      
     |      5. IsSet(self: pydnp3.opendnp3.Flags, flag: pydnp3.opendnp3.BinaryOutputStatusQuality) -> bool
     |      
     |      6. IsSet(self: pydnp3.opendnp3.Flags, flag: pydnp3.opendnp3.AnalogOutputStatusQuality) -> bool
     |  
     |  Set(...)
     |      Set(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. Set(self: pydnp3.opendnp3.Flags, flag: pydnp3.opendnp3.BinaryQuality) -> None
     |      
     |      2. Set(self: pydnp3.opendnp3.Flags, flag: pydnp3.opendnp3.AnalogQuality) -> None
     |      
     |      3. Set(self: pydnp3.opendnp3.Flags, flag: pydnp3.opendnp3.CounterQuality) -> None
     |      
     |      4. Set(self: pydnp3.opendnp3.Flags, flag: pydnp3.opendnp3.FrozenCounterQuality) -> None
     |      
     |      5. Set(self: pydnp3.opendnp3.Flags, flag: pydnp3.opendnp3.BinaryOutputStatusQuality) -> None
     |      
     |      6. Set(self: pydnp3.opendnp3.Flags, flag: pydnp3.opendnp3.AnalogOutputStatusQuality) -> None
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.Flags, value: int = 0) -> None
     |      
     |      :param value: defaults to 0 
     |      :type value: unsigned char
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  value
     |      :type value: unsigned char
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class FlagsType(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      FlagsType
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.FlagsType, arg0: pydnp3.opendnp3.FlagsType) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.FlagsType) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.FlagsType) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.FlagsType, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.FlagsType) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.FlagsType, arg0: pydnp3.opendnp3.FlagsType) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.FlagsType) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.FlagsType, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  AnalogInput = FlagsType.AnalogInput
     |  
     |  AnalogOutputStatus = FlagsType.AnalogOutputStatus
     |  
     |  BinaryInput = FlagsType.BinaryInput
     |  
     |  BinaryOutputStatus = FlagsType.BinaryOutputStatus
     |  
     |  Counter = FlagsType.Counter
     |  
     |  DoubleBinaryInput = FlagsType.DoubleBinaryInput
     |  
     |  FrozenCounter = FlagsType.FrozenCounter
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class FlowControl(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      FlowControl
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.FlowControl, arg0: pydnp3.opendnp3.FlowControl) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.FlowControl) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.FlowControl) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.FlowControl, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.FlowControl) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.FlowControl, arg0: pydnp3.opendnp3.FlowControl) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.FlowControl) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.FlowControl, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Hardware = FlowControl.Hardware
     |  
     |  None = FlowControl.None
     |  
     |  XONXOFF = FlowControl.XONXOFF
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class FrozenCounter(TypedMeasurementUint32)
     |  Frozen counters are used to report the value of a counter point captured at the instant when the count is frozen.
     |  
     |  Method resolution order:
     |      FrozenCounter
     |      TypedMeasurementUint32
     |      Measurement
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.FrozenCounter) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.FrozenCounter, value: int) -> None
     |      
     |      :type value: unsigned int
     |      
     |      3. __init__(self: pydnp3.opendnp3.FrozenCounter, value: int, flags: pydnp3.opendnp3.Flags) -> None
     |      
     |      :type value: unsigned int
     |      
     |      4. __init__(self: pydnp3.opendnp3.FrozenCounter, value: int, flags: pydnp3.opendnp3.Flags, time: pydnp3.opendnp3.DNPTime) -> None
     |      
     |      :type value: unsigned int
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from TypedMeasurementUint32:
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Measurement:
     |  
     |  flags
     |      Bitfield that stores type specific quality information.
     |  
     |  time
     |      Timestamp associated with the measurement.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class FrozenCounterConfig(DeadbandConfigFrozenCounterInfo)
     |  Method resolution order:
     |      FrozenCounterConfig
     |      DeadbandConfigFrozenCounterInfo
     |      EventConfigFrozenCounterInfo
     |      StaticConfigFrozenCounterInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.FrozenCounterConfig) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from DeadbandConfigFrozenCounterInfo:
     |  
     |  deadband
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from EventConfigFrozenCounterInfo:
     |  
     |  clazz
     |  
     |  evariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from StaticConfigFrozenCounterInfo:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class FrozenCounterInfo(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      FrozenCounterInfo
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  DefaultEventVariation
     |  
     |  DefaultStaticVariation
     |  
     |  EventTypeEnum
     |  
     |  StaticTypeEnum
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class FrozenCounterQuality(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      FrozenCounterQuality
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.FrozenCounterQuality, arg0: pydnp3.opendnp3.FrozenCounterQuality) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.FrozenCounterQuality) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.FrozenCounterQuality) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.FrozenCounterQuality, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.FrozenCounterQuality) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.FrozenCounterQuality, arg0: pydnp3.opendnp3.FrozenCounterQuality) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.FrozenCounterQuality) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.FrozenCounterQuality, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  COMM_LOST = FrozenCounterQuality.COMM_LOST
     |  
     |  DISCONTINUITY = FrozenCounterQuality.DISCONTINUITY
     |  
     |  LOCAL_FORCED = FrozenCounterQuality.LOCAL_FORCED
     |  
     |  ONLINE = FrozenCounterQuality.ONLINE
     |  
     |  REMOTE_FORCED = FrozenCounterQuality.REMOTE_FORCED
     |  
     |  RESERVED = FrozenCounterQuality.RESERVED
     |  
     |  RESTART = FrozenCounterQuality.RESTART
     |  
     |  ROLLOVER = FrozenCounterQuality.ROLLOVER
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class FrozenCounterSpec(FrozenCounterInfo)
     |  Method resolution order:
     |      FrozenCounterSpec
     |      FrozenCounterInfo
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  IsEvent(...) from builtins.PyCapsule
     |      IsEvent(oldValue: pydnp3.opendnp3.FrozenCounter, newValue: pydnp3.opendnp3.FrozenCounter, deadband: int) -> bool
     |      
     |      :type deadband: unsigned int
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties inherited from FrozenCounterInfo:
     |  
     |  DefaultEventVariation
     |  
     |  DefaultStaticVariation
     |  
     |  EventTypeEnum
     |  
     |  StaticTypeEnum
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class FunctionCode(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      FunctionCode
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.FunctionCode, arg0: pydnp3.opendnp3.FunctionCode) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.FunctionCode) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.FunctionCode) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.FunctionCode, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.FunctionCode) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.FunctionCode, arg0: pydnp3.opendnp3.FunctionCode) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.FunctionCode) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.FunctionCode, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ABORT_FILE = FunctionCode.ABORT_FILE
     |  
     |  ASSIGN_CLASS = FunctionCode.ASSIGN_CLASS
     |  
     |  AUTHENTICATE_FILE = FunctionCode.AUTHENTICATE_FILE
     |  
     |  AUTH_REQUEST = FunctionCode.AUTH_REQUEST
     |  
     |  AUTH_REQUEST_NO_ACK = FunctionCode.AUTH_REQUEST_NO_ACK
     |  
     |  AUTH_RESPONSE = FunctionCode.AUTH_RESPONSE
     |  
     |  CLOSE_FILE = FunctionCode.CLOSE_FILE
     |  
     |  COLD_RESTART = FunctionCode.COLD_RESTART
     |  
     |  CONFIRM = FunctionCode.CONFIRM
     |  
     |  DELAY_MEASURE = FunctionCode.DELAY_MEASURE
     |  
     |  DELETE_FILE = FunctionCode.DELETE_FILE
     |  
     |  DIRECT_OPERATE = FunctionCode.DIRECT_OPERATE
     |  
     |  DIRECT_OPERATE_NR = FunctionCode.DIRECT_OPERATE_NR
     |  
     |  DISABLE_UNSOLICITED = FunctionCode.DISABLE_UNSOLICITED
     |  
     |  ENABLE_UNSOLICITED = FunctionCode.ENABLE_UNSOLICITED
     |  
     |  FREEZE_AT_TIME = FunctionCode.FREEZE_AT_TIME
     |  
     |  FREEZE_AT_TIME_NR = FunctionCode.FREEZE_AT_TIME_NR
     |  
     |  FREEZE_CLEAR = FunctionCode.FREEZE_CLEAR
     |  
     |  FREEZE_CLEAR_NR = FunctionCode.FREEZE_CLEAR_NR
     |  
     |  GET_FILE_INFO = FunctionCode.GET_FILE_INFO
     |  
     |  IMMED_FREEZE = FunctionCode.IMMED_FREEZE
     |  
     |  IMMED_FREEZE_NR = FunctionCode.IMMED_FREEZE_NR
     |  
     |  INITIALIZE_APPLICATION = FunctionCode.INITIALIZE_APPLICATION
     |  
     |  INITIALIZE_DATA = FunctionCode.INITIALIZE_DATA
     |  
     |  OPEN_FILE = FunctionCode.OPEN_FILE
     |  
     |  OPERATE = FunctionCode.OPERATE
     |  
     |  READ = FunctionCode.READ
     |  
     |  RECORD_CURRENT_TIME = FunctionCode.RECORD_CURRENT_TIME
     |  
     |  RESPONSE = FunctionCode.RESPONSE
     |  
     |  SAVE_CONFIGURATION = FunctionCode.SAVE_CONFIGURATION
     |  
     |  SELECT = FunctionCode.SELECT
     |  
     |  START_APPLICATION = FunctionCode.START_APPLICATION
     |  
     |  STOP_APPLICATION = FunctionCode.STOP_APPLICATION
     |  
     |  UNKNOWN = FunctionCode.UNKNOWN
     |  
     |  UNSOLICITED_RESPONSE = FunctionCode.UNSOLICITED_RESPONSE
     |  
     |  WARM_RESTART = FunctionCode.WARM_RESTART
     |  
     |  WRITE = FunctionCode.WRITE
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class GroupVariation(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      GroupVariation
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.GroupVariation, arg0: pydnp3.opendnp3.GroupVariation) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.GroupVariation) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.GroupVariation) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.GroupVariation, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.GroupVariation) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.GroupVariation, arg0: pydnp3.opendnp3.GroupVariation) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.GroupVariation) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.GroupVariation, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Group10Var0 = GroupVariation.Group10Var0
     |  
     |  Group10Var1 = GroupVariation.Group10Var1
     |  
     |  Group10Var2 = GroupVariation.Group10Var2
     |  
     |  Group110Var0 = GroupVariation.Group110Var0
     |  
     |  Group111Var0 = GroupVariation.Group111Var0
     |  
     |  Group112Var0 = GroupVariation.Group112Var0
     |  
     |  Group113Var0 = GroupVariation.Group113Var0
     |  
     |  Group11Var0 = GroupVariation.Group11Var0
     |  
     |  Group11Var1 = GroupVariation.Group11Var1
     |  
     |  Group11Var2 = GroupVariation.Group11Var2
     |  
     |  Group120Var1 = GroupVariation.Group120Var1
     |  
     |  Group120Var10 = GroupVariation.Group120Var10
     |  
     |  Group120Var11 = GroupVariation.Group120Var11
     |  
     |  Group120Var12 = GroupVariation.Group120Var12
     |  
     |  Group120Var13 = GroupVariation.Group120Var13
     |  
     |  Group120Var14 = GroupVariation.Group120Var14
     |  
     |  Group120Var15 = GroupVariation.Group120Var15
     |  
     |  Group120Var2 = GroupVariation.Group120Var2
     |  
     |  Group120Var3 = GroupVariation.Group120Var3
     |  
     |  Group120Var4 = GroupVariation.Group120Var4
     |  
     |  Group120Var5 = GroupVariation.Group120Var5
     |  
     |  Group120Var6 = GroupVariation.Group120Var6
     |  
     |  Group120Var7 = GroupVariation.Group120Var7
     |  
     |  Group120Var8 = GroupVariation.Group120Var8
     |  
     |  Group120Var9 = GroupVariation.Group120Var9
     |  
     |  Group121Var0 = GroupVariation.Group121Var0
     |  
     |  Group121Var1 = GroupVariation.Group121Var1
     |  
     |  Group122Var0 = GroupVariation.Group122Var0
     |  
     |  Group122Var1 = GroupVariation.Group122Var1
     |  
     |  Group122Var2 = GroupVariation.Group122Var2
     |  
     |  Group12Var0 = GroupVariation.Group12Var0
     |  
     |  Group12Var1 = GroupVariation.Group12Var1
     |  
     |  Group13Var1 = GroupVariation.Group13Var1
     |  
     |  Group13Var2 = GroupVariation.Group13Var2
     |  
     |  Group1Var0 = GroupVariation.Group1Var0
     |  
     |  Group1Var1 = GroupVariation.Group1Var1
     |  
     |  Group1Var2 = GroupVariation.Group1Var2
     |  
     |  Group20Var0 = GroupVariation.Group20Var0
     |  
     |  Group20Var1 = GroupVariation.Group20Var1
     |  
     |  Group20Var2 = GroupVariation.Group20Var2
     |  
     |  Group20Var5 = GroupVariation.Group20Var5
     |  
     |  Group20Var6 = GroupVariation.Group20Var6
     |  
     |  Group21Var0 = GroupVariation.Group21Var0
     |  
     |  Group21Var1 = GroupVariation.Group21Var1
     |  
     |  Group21Var10 = GroupVariation.Group21Var10
     |  
     |  Group21Var2 = GroupVariation.Group21Var2
     |  
     |  Group21Var5 = GroupVariation.Group21Var5
     |  
     |  Group21Var6 = GroupVariation.Group21Var6
     |  
     |  Group21Var9 = GroupVariation.Group21Var9
     |  
     |  Group22Var0 = GroupVariation.Group22Var0
     |  
     |  Group22Var1 = GroupVariation.Group22Var1
     |  
     |  Group22Var2 = GroupVariation.Group22Var2
     |  
     |  Group22Var5 = GroupVariation.Group22Var5
     |  
     |  Group22Var6 = GroupVariation.Group22Var6
     |  
     |  Group23Var0 = GroupVariation.Group23Var0
     |  
     |  Group23Var1 = GroupVariation.Group23Var1
     |  
     |  Group23Var2 = GroupVariation.Group23Var2
     |  
     |  Group23Var5 = GroupVariation.Group23Var5
     |  
     |  Group23Var6 = GroupVariation.Group23Var6
     |  
     |  Group2Var0 = GroupVariation.Group2Var0
     |  
     |  Group2Var1 = GroupVariation.Group2Var1
     |  
     |  Group2Var2 = GroupVariation.Group2Var2
     |  
     |  Group2Var3 = GroupVariation.Group2Var3
     |  
     |  Group30Var0 = GroupVariation.Group30Var0
     |  
     |  Group30Var1 = GroupVariation.Group30Var1
     |  
     |  Group30Var2 = GroupVariation.Group30Var2
     |  
     |  Group30Var3 = GroupVariation.Group30Var3
     |  
     |  Group30Var4 = GroupVariation.Group30Var4
     |  
     |  Group30Var5 = GroupVariation.Group30Var5
     |  
     |  Group30Var6 = GroupVariation.Group30Var6
     |  
     |  Group32Var0 = GroupVariation.Group32Var0
     |  
     |  Group32Var1 = GroupVariation.Group32Var1
     |  
     |  Group32Var2 = GroupVariation.Group32Var2
     |  
     |  Group32Var3 = GroupVariation.Group32Var3
     |  
     |  Group32Var4 = GroupVariation.Group32Var4
     |  
     |  Group32Var5 = GroupVariation.Group32Var5
     |  
     |  Group32Var6 = GroupVariation.Group32Var6
     |  
     |  Group32Var7 = GroupVariation.Group32Var7
     |  
     |  Group32Var8 = GroupVariation.Group32Var8
     |  
     |  Group3Var0 = GroupVariation.Group3Var0
     |  
     |  Group3Var1 = GroupVariation.Group3Var1
     |  
     |  Group3Var2 = GroupVariation.Group3Var2
     |  
     |  Group40Var0 = GroupVariation.Group40Var0
     |  
     |  Group40Var1 = GroupVariation.Group40Var1
     |  
     |  Group40Var2 = GroupVariation.Group40Var2
     |  
     |  Group40Var3 = GroupVariation.Group40Var3
     |  
     |  Group40Var4 = GroupVariation.Group40Var4
     |  
     |  Group41Var0 = GroupVariation.Group41Var0
     |  
     |  Group41Var1 = GroupVariation.Group41Var1
     |  
     |  Group41Var2 = GroupVariation.Group41Var2
     |  
     |  Group41Var3 = GroupVariation.Group41Var3
     |  
     |  Group41Var4 = GroupVariation.Group41Var4
     |  
     |  Group42Var0 = GroupVariation.Group42Var0
     |  
     |  Group42Var1 = GroupVariation.Group42Var1
     |  
     |  Group42Var2 = GroupVariation.Group42Var2
     |  
     |  Group42Var3 = GroupVariation.Group42Var3
     |  
     |  Group42Var4 = GroupVariation.Group42Var4
     |  
     |  Group42Var5 = GroupVariation.Group42Var5
     |  
     |  Group42Var6 = GroupVariation.Group42Var6
     |  
     |  Group42Var7 = GroupVariation.Group42Var7
     |  
     |  Group42Var8 = GroupVariation.Group42Var8
     |  
     |  Group43Var1 = GroupVariation.Group43Var1
     |  
     |  Group43Var2 = GroupVariation.Group43Var2
     |  
     |  Group43Var3 = GroupVariation.Group43Var3
     |  
     |  Group43Var4 = GroupVariation.Group43Var4
     |  
     |  Group43Var5 = GroupVariation.Group43Var5
     |  
     |  Group43Var6 = GroupVariation.Group43Var6
     |  
     |  Group43Var7 = GroupVariation.Group43Var7
     |  
     |  Group43Var8 = GroupVariation.Group43Var8
     |  
     |  Group4Var0 = GroupVariation.Group4Var0
     |  
     |  Group4Var1 = GroupVariation.Group4Var1
     |  
     |  Group4Var2 = GroupVariation.Group4Var2
     |  
     |  Group4Var3 = GroupVariation.Group4Var3
     |  
     |  Group50Var1 = GroupVariation.Group50Var1
     |  
     |  Group50Var3 = GroupVariation.Group50Var3
     |  
     |  Group50Var4 = GroupVariation.Group50Var4
     |  
     |  Group51Var1 = GroupVariation.Group51Var1
     |  
     |  Group51Var2 = GroupVariation.Group51Var2
     |  
     |  Group52Var1 = GroupVariation.Group52Var1
     |  
     |  Group52Var2 = GroupVariation.Group52Var2
     |  
     |  Group60Var1 = GroupVariation.Group60Var1
     |  
     |  Group60Var2 = GroupVariation.Group60Var2
     |  
     |  Group60Var3 = GroupVariation.Group60Var3
     |  
     |  Group60Var4 = GroupVariation.Group60Var4
     |  
     |  Group70Var1 = GroupVariation.Group70Var1
     |  
     |  Group70Var2 = GroupVariation.Group70Var2
     |  
     |  Group70Var3 = GroupVariation.Group70Var3
     |  
     |  Group70Var4 = GroupVariation.Group70Var4
     |  
     |  Group70Var5 = GroupVariation.Group70Var5
     |  
     |  Group70Var6 = GroupVariation.Group70Var6
     |  
     |  Group70Var7 = GroupVariation.Group70Var7
     |  
     |  Group70Var8 = GroupVariation.Group70Var8
     |  
     |  Group80Var1 = GroupVariation.Group80Var1
     |  
     |  UNKNOWN = GroupVariation.UNKNOWN
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class GroupVariationID(pybind11_builtins.pybind11_object)
     |  Simple uint8_t/uint8_t tuple for group and variation.
     |  
     |  Method resolution order:
     |      GroupVariationID
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.GroupVariationID, group: int = 255, variation: int = 255) -> None
     |      
     |      :param group: defaults to 0xFF 
     |      :param variation: defaults to 0xFF 
     |      :type group: unsigned char 
     |      :type varitaion: unsigned char
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  group
     |      :type group: unsigned char
     |  
     |  variation
     |      :type varitaion: unsigned char
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class HMACType(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      HMACType
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.HMACType, arg0: pydnp3.opendnp3.HMACType) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.HMACType) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.HMACType) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.HMACType, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.HMACType) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.HMACType, arg0: pydnp3.opendnp3.HMACType) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.HMACType) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.HMACType, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  AES_GMAC = HMACType.AES_GMAC
     |  
     |  HMAC_SHA1_TRUNC_10 = HMACType.HMAC_SHA1_TRUNC_10
     |  
     |  HMAC_SHA1_TRUNC_8 = HMACType.HMAC_SHA1_TRUNC_8
     |  
     |  HMAC_SHA256_TRUNC_16 = HMACType.HMAC_SHA256_TRUNC_16
     |  
     |  HMAC_SHA256_TRUNC_8 = HMACType.HMAC_SHA256_TRUNC_8
     |  
     |  NO_MAC_VALUE = HMACType.NO_MAC_VALUE
     |  
     |  UNKNOWN = HMACType.UNKNOWN
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class Header(pybind11_builtins.pybind11_object)
     |  Class used to specify a header type.
     |  
     |  Method resolution order:
     |      Header
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  WriteTo(...)
     |      WriteTo(self: pydnp3.opendnp3.Header, writer: pydnp3.opendnp3.HeaderWriter) -> bool
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.Header) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  AllObjects(...) from builtins.PyCapsule
     |      AllObjects(group: int, variation: int) -> pydnp3.opendnp3.Header
     |      
     |      Create an all objects (0x06) header.
     |  
     |  Count16(...) from builtins.PyCapsule
     |      Count16(group: int, variation: int, count: int) -> pydnp3.opendnp3.Header
     |      
     |      Create a 16-bit count header (0x08).
     |  
     |  Count8(...) from builtins.PyCapsule
     |      Count8(group: int, variation: int, count: int) -> pydnp3.opendnp3.Header
     |      
     |      Create a 8-bit count header (0x07).
     |  
     |  From(...) from builtins.PyCapsule
     |      From(pointClass: pydnp3.opendnp3.PointClass) -> pydnp3.opendnp3.Header
     |      
     |      Create an all objects (0x06) header.
     |  
     |  Range16(...) from builtins.PyCapsule
     |      Range16(group: int, variation: int, start: int, stop: int) -> pydnp3.opendnp3.Header
     |      
     |      Create a 16-bit start stop header (0x01).
     |  
     |  Range8(...) from builtins.PyCapsule
     |      Range8(group: int, variation: int, start: int, stop: int) -> pydnp3.opendnp3.Header
     |      
     |      Create a 8-bit start stop header (0x00).
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class HeaderInfo(pybind11_builtins.pybind11_object)
     |  Simple structure used in the ISOEHandler callbacks to return information about the associated header.
     |  
     |  Method resolution order:
     |      HeaderInfo
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.HeaderInfo) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.HeaderInfo, gv: pydnp3.opendnp3.GroupVariation, qualifier: pydnp3.opendnp3.QualifierCode, tsmode: pydnp3.opendnp3.TimestampMode, headerIndex: int) -> None
     |      
     |      :type headerIndex: unsigned int
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  flagsValid
     |      True if the flags on the value were present on underlying type, false if online is just assumed.
     |  
     |  gv
     |      The group/variation enumeration for the header.
     |  
     |  headerIndex
     |      The 0-based index of the header within the ASDU. 
     |      :type headerIndex: unsigned int
     |  
     |  isEventVariation
     |      True if the specfied variation is an event variation.
     |  
     |  qualifier
     |      The qualifier code enumeration for the header.
     |  
     |  tsmode
     |      Enumeration that provides information about the validity of timestamps on the associated objects.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class HeaderType(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      HeaderType
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.HeaderType, arg0: pydnp3.opendnp3.HeaderType) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.HeaderType) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.HeaderType) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.HeaderType, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.HeaderType) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.HeaderType, arg0: pydnp3.opendnp3.HeaderType) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.HeaderType) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.HeaderType, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  AllObjects = HeaderType.AllObjects
     |  
     |  LimitedCount16 = HeaderType.LimitedCount16
     |  
     |  LimitedCount8 = HeaderType.LimitedCount8
     |  
     |  Ranged16 = HeaderType.Ranged16
     |  
     |  Ranged8 = HeaderType.Ranged8
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class HeaderUnion(pybind11_builtins.pybind11_object)
     |  Union type that holds information for a single header type.
     |  
     |  Method resolution order:
     |      HeaderUnion
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.HeaderUnion) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  count16
     |  
     |  count8
     |  
     |  range16
     |  
     |  range8
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class HeaderWriter(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      HeaderWriter
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ICollectionCommandPointResult(pybind11_builtins.pybind11_object)
     |  An interface representing an abstract immutable collection of things of type T. 
     |  The user can only read these values via callback to receive each element.
     |  
     |  Method resolution order:
     |      ICollectionCommandPointResult
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Count(...)
     |      Count(self: pydnp3.opendnp3.ICollectionCommandPointResult) -> int
     |      
     |      The number of elements in the collection.
     |  
     |  Foreach(...)
     |      Foreach(self: pydnp3.opendnp3.ICollectionCommandPointResult, visitor: pydnp3.opendnp3.IVisitorCommandPointResult) -> None
     |      
     |      Visit all the elements of a collection.
     |  
     |  ForeachItem(...)
     |      ForeachItem(self: pydnp3.opendnp3.ICollectionCommandPointResult, callback: Callable[[opendnp3::CommandPointResult], None]) -> None
     |      
     |      Visit all of the elements of a collection.
     |  
     |  ReadOnlyValue(...)
     |      ReadOnlyValue(self: pydnp3.opendnp3.ICollectionCommandPointResult, value: opendnp3::CommandPointResult) -> bool
     |      
     |      Retrieve the only value from the collection.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ICollectionCommandPointResult) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ICollectionDNPTime(pybind11_builtins.pybind11_object)
     |  An interface representing an abstract immutable collection of things of type T. 
     |  The user can only read these values via callback to receive each element.
     |  
     |  Method resolution order:
     |      ICollectionDNPTime
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Count(...)
     |      Count(self: pydnp3.opendnp3.ICollectionDNPTime) -> int
     |      
     |      The number of elements in the collection.
     |  
     |  Foreach(...)
     |      Foreach(self: pydnp3.opendnp3.ICollectionDNPTime, visitor: pydnp3.opendnp3.IVisitorDNPTime) -> None
     |      
     |      Visit all the elements of a collection.
     |  
     |  ForeachItem(...)
     |      ForeachItem(self: pydnp3.opendnp3.ICollectionDNPTime, callback: Callable[[openpal::UInt48Type], None]) -> None
     |      
     |      Visit all of the elements of a collection.
     |  
     |  ReadOnlyValue(...)
     |      ReadOnlyValue(self: pydnp3.opendnp3.ICollectionDNPTime, value: openpal::UInt48Type) -> bool
     |      
     |      Retrieve the only value from the collection.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ICollectionDNPTime) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ICollectionIndexedAnalog(pybind11_builtins.pybind11_object)
     |  An interface representing an abstract immutable collection of things of type T. 
     |  The user can only read these values via callback to receive each element.
     |  
     |  Method resolution order:
     |      ICollectionIndexedAnalog
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Count(...)
     |      Count(self: pydnp3.opendnp3.ICollectionIndexedAnalog) -> int
     |      
     |      The number of elements in the collection.
     |  
     |  Foreach(...)
     |      Foreach(self: pydnp3.opendnp3.ICollectionIndexedAnalog, visitor: pydnp3.opendnp3.IVisitorIndexedAnalog) -> None
     |      
     |      Visit all the elements of a collection.
     |  
     |  ForeachItem(...)
     |      ForeachItem(self: pydnp3.opendnp3.ICollectionIndexedAnalog, callback: Callable[[opendnp3::Indexed<opendnp3::Analog>], None]) -> None
     |      
     |      Visit all of the elements of a collection.
     |  
     |  ReadOnlyValue(...)
     |      ReadOnlyValue(self: pydnp3.opendnp3.ICollectionIndexedAnalog, value: opendnp3::Indexed<opendnp3::Analog>) -> bool
     |      
     |      Retrieve the only value from the collection.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ICollectionIndexedAnalog) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ICollectionIndexedAnalogCommandEvent(pybind11_builtins.pybind11_object)
     |  An interface representing an abstract immutable collection of things of type T. 
     |  The user can only read these values via callback to receive each element.
     |  
     |  Method resolution order:
     |      ICollectionIndexedAnalogCommandEvent
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Count(...)
     |      Count(self: pydnp3.opendnp3.ICollectionIndexedAnalogCommandEvent) -> int
     |      
     |      The number of elements in the collection.
     |  
     |  Foreach(...)
     |      Foreach(self: pydnp3.opendnp3.ICollectionIndexedAnalogCommandEvent, visitor: pydnp3.opendnp3.IVisitorIndexedAnalogCommandEvent) -> None
     |      
     |      Visit all the elements of a collection.
     |  
     |  ForeachItem(...)
     |      ForeachItem(self: pydnp3.opendnp3.ICollectionIndexedAnalogCommandEvent, callback: Callable[[opendnp3::Indexed<opendnp3::AnalogCommandEvent>], None]) -> None
     |      
     |      Visit all of the elements of a collection.
     |  
     |  ReadOnlyValue(...)
     |      ReadOnlyValue(self: pydnp3.opendnp3.ICollectionIndexedAnalogCommandEvent, value: opendnp3::Indexed<opendnp3::AnalogCommandEvent>) -> bool
     |      
     |      Retrieve the only value from the collection.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ICollectionIndexedAnalogCommandEvent) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ICollectionIndexedAnalogOutputStatus(pybind11_builtins.pybind11_object)
     |  An interface representing an abstract immutable collection of things of type T. 
     |  The user can only read these values via callback to receive each element.
     |  
     |  Method resolution order:
     |      ICollectionIndexedAnalogOutputStatus
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Count(...)
     |      Count(self: pydnp3.opendnp3.ICollectionIndexedAnalogOutputStatus) -> int
     |      
     |      The number of elements in the collection.
     |  
     |  Foreach(...)
     |      Foreach(self: pydnp3.opendnp3.ICollectionIndexedAnalogOutputStatus, visitor: pydnp3.opendnp3.IVisitorIndexedAnalogOutputStatus) -> None
     |      
     |      Visit all the elements of a collection.
     |  
     |  ForeachItem(...)
     |      ForeachItem(self: pydnp3.opendnp3.ICollectionIndexedAnalogOutputStatus, callback: Callable[[opendnp3::Indexed<opendnp3::AnalogOutputStatus>], None]) -> None
     |      
     |      Visit all of the elements of a collection.
     |  
     |  ReadOnlyValue(...)
     |      ReadOnlyValue(self: pydnp3.opendnp3.ICollectionIndexedAnalogOutputStatus, value: opendnp3::Indexed<opendnp3::AnalogOutputStatus>) -> bool
     |      
     |      Retrieve the only value from the collection.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ICollectionIndexedAnalogOutputStatus) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ICollectionIndexedBinary(pybind11_builtins.pybind11_object)
     |  An interface representing an abstract immutable collection of things of type T. 
     |  The user can only read these values via callback to receive each element.
     |  
     |  Method resolution order:
     |      ICollectionIndexedBinary
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Count(...)
     |      Count(self: pydnp3.opendnp3.ICollectionIndexedBinary) -> int
     |      
     |      The number of elements in the collection.
     |  
     |  Foreach(...)
     |      Foreach(self: pydnp3.opendnp3.ICollectionIndexedBinary, visitor: pydnp3.opendnp3.IVisitorIndexedBinary) -> None
     |      
     |      Visit all the elements of a collection.
     |  
     |  ForeachItem(...)
     |      ForeachItem(self: pydnp3.opendnp3.ICollectionIndexedBinary, callback: Callable[[opendnp3::Indexed<opendnp3::Binary>], None]) -> None
     |      
     |      Visit all of the elements of a collection.
     |  
     |  ReadOnlyValue(...)
     |      ReadOnlyValue(self: pydnp3.opendnp3.ICollectionIndexedBinary, value: opendnp3::Indexed<opendnp3::Binary>) -> bool
     |      
     |      Retrieve the only value from the collection.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ICollectionIndexedBinary) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ICollectionIndexedBinaryCommandEvent(pybind11_builtins.pybind11_object)
     |  An interface representing an abstract immutable collection of things of type T. 
     |  The user can only read these values via callback to receive each element.
     |  
     |  Method resolution order:
     |      ICollectionIndexedBinaryCommandEvent
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Count(...)
     |      Count(self: pydnp3.opendnp3.ICollectionIndexedBinaryCommandEvent) -> int
     |      
     |      The number of elements in the collection.
     |  
     |  Foreach(...)
     |      Foreach(self: pydnp3.opendnp3.ICollectionIndexedBinaryCommandEvent, visitor: pydnp3.opendnp3.IVisitorIndexedBinaryCommandEvent) -> None
     |      
     |      Visit all the elements of a collection.
     |  
     |  ForeachItem(...)
     |      ForeachItem(self: pydnp3.opendnp3.ICollectionIndexedBinaryCommandEvent, callback: Callable[[opendnp3::Indexed<opendnp3::BinaryCommandEvent>], None]) -> None
     |      
     |      Visit all of the elements of a collection.
     |  
     |  ReadOnlyValue(...)
     |      ReadOnlyValue(self: pydnp3.opendnp3.ICollectionIndexedBinaryCommandEvent, value: opendnp3::Indexed<opendnp3::BinaryCommandEvent>) -> bool
     |      
     |      Retrieve the only value from the collection.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ICollectionIndexedBinaryCommandEvent) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ICollectionIndexedBinaryOutputStatus(pybind11_builtins.pybind11_object)
     |  An interface representing an abstract immutable collection of things of type T. 
     |  The user can only read these values via callback to receive each element.
     |  
     |  Method resolution order:
     |      ICollectionIndexedBinaryOutputStatus
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Count(...)
     |      Count(self: pydnp3.opendnp3.ICollectionIndexedBinaryOutputStatus) -> int
     |      
     |      The number of elements in the collection.
     |  
     |  Foreach(...)
     |      Foreach(self: pydnp3.opendnp3.ICollectionIndexedBinaryOutputStatus, visitor: pydnp3.opendnp3.IVisitorIndexedBinaryOutputStatus) -> None
     |      
     |      Visit all the elements of a collection.
     |  
     |  ForeachItem(...)
     |      ForeachItem(self: pydnp3.opendnp3.ICollectionIndexedBinaryOutputStatus, callback: Callable[[opendnp3::Indexed<opendnp3::BinaryOutputStatus>], None]) -> None
     |      
     |      Visit all of the elements of a collection.
     |  
     |  ReadOnlyValue(...)
     |      ReadOnlyValue(self: pydnp3.opendnp3.ICollectionIndexedBinaryOutputStatus, value: opendnp3::Indexed<opendnp3::BinaryOutputStatus>) -> bool
     |      
     |      Retrieve the only value from the collection.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ICollectionIndexedBinaryOutputStatus) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ICollectionIndexedCounter(pybind11_builtins.pybind11_object)
     |  An interface representing an abstract immutable collection of things of type T. 
     |  The user can only read these values via callback to receive each element.
     |  
     |  Method resolution order:
     |      ICollectionIndexedCounter
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Count(...)
     |      Count(self: pydnp3.opendnp3.ICollectionIndexedCounter) -> int
     |      
     |      The number of elements in the collection.
     |  
     |  Foreach(...)
     |      Foreach(self: pydnp3.opendnp3.ICollectionIndexedCounter, visitor: pydnp3.opendnp3.IVisitorIndexedCounter) -> None
     |      
     |      Visit all the elements of a collection.
     |  
     |  ForeachItem(...)
     |      ForeachItem(self: pydnp3.opendnp3.ICollectionIndexedCounter, callback: Callable[[opendnp3::Indexed<opendnp3::Counter>], None]) -> None
     |      
     |      Visit all of the elements of a collection.
     |  
     |  ReadOnlyValue(...)
     |      ReadOnlyValue(self: pydnp3.opendnp3.ICollectionIndexedCounter, value: opendnp3::Indexed<opendnp3::Counter>) -> bool
     |      
     |      Retrieve the only value from the collection.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ICollectionIndexedCounter) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ICollectionIndexedDoubleBitBinary(pybind11_builtins.pybind11_object)
     |  An interface representing an abstract immutable collection of things of type T. 
     |  The user can only read these values via callback to receive each element.
     |  
     |  Method resolution order:
     |      ICollectionIndexedDoubleBitBinary
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Count(...)
     |      Count(self: pydnp3.opendnp3.ICollectionIndexedDoubleBitBinary) -> int
     |      
     |      The number of elements in the collection.
     |  
     |  Foreach(...)
     |      Foreach(self: pydnp3.opendnp3.ICollectionIndexedDoubleBitBinary, visitor: pydnp3.opendnp3.IVisitorIndexedDoubleBitBinary) -> None
     |      
     |      Visit all the elements of a collection.
     |  
     |  ForeachItem(...)
     |      ForeachItem(self: pydnp3.opendnp3.ICollectionIndexedDoubleBitBinary, callback: Callable[[opendnp3::Indexed<opendnp3::DoubleBitBinary>], None]) -> None
     |      
     |      Visit all of the elements of a collection.
     |  
     |  ReadOnlyValue(...)
     |      ReadOnlyValue(self: pydnp3.opendnp3.ICollectionIndexedDoubleBitBinary, value: opendnp3::Indexed<opendnp3::DoubleBitBinary>) -> bool
     |      
     |      Retrieve the only value from the collection.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ICollectionIndexedDoubleBitBinary) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ICollectionIndexedFrozenCounter(pybind11_builtins.pybind11_object)
     |  An interface representing an abstract immutable collection of things of type T. 
     |  The user can only read these values via callback to receive each element.
     |  
     |  Method resolution order:
     |      ICollectionIndexedFrozenCounter
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Count(...)
     |      Count(self: pydnp3.opendnp3.ICollectionIndexedFrozenCounter) -> int
     |      
     |      The number of elements in the collection.
     |  
     |  Foreach(...)
     |      Foreach(self: pydnp3.opendnp3.ICollectionIndexedFrozenCounter, visitor: pydnp3.opendnp3.IVisitorIndexedFrozenCounter) -> None
     |      
     |      Visit all the elements of a collection.
     |  
     |  ForeachItem(...)
     |      ForeachItem(self: pydnp3.opendnp3.ICollectionIndexedFrozenCounter, callback: Callable[[opendnp3::Indexed<opendnp3::FrozenCounter>], None]) -> None
     |      
     |      Visit all of the elements of a collection.
     |  
     |  ReadOnlyValue(...)
     |      ReadOnlyValue(self: pydnp3.opendnp3.ICollectionIndexedFrozenCounter, value: opendnp3::Indexed<opendnp3::FrozenCounter>) -> bool
     |      
     |      Retrieve the only value from the collection.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ICollectionIndexedFrozenCounter) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ICollectionIndexedOctetString(pybind11_builtins.pybind11_object)
     |  An interface representing an abstract immutable collection of things of type T. 
     |  The user can only read these values via callback to receive each element.
     |  
     |  Method resolution order:
     |      ICollectionIndexedOctetString
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Count(...)
     |      Count(self: pydnp3.opendnp3.ICollectionIndexedOctetString) -> int
     |      
     |      The number of elements in the collection.
     |  
     |  Foreach(...)
     |      Foreach(self: pydnp3.opendnp3.ICollectionIndexedOctetString, visitor: pydnp3.opendnp3.IVisitorIndexedOctetString) -> None
     |      
     |      Visit all the elements of a collection.
     |  
     |  ForeachItem(...)
     |      ForeachItem(self: pydnp3.opendnp3.ICollectionIndexedOctetString, callback: Callable[[opendnp3::Indexed<opendnp3::OctetString>], None]) -> None
     |      
     |      Visit all of the elements of a collection.
     |  
     |  ReadOnlyValue(...)
     |      ReadOnlyValue(self: pydnp3.opendnp3.ICollectionIndexedOctetString, value: opendnp3::Indexed<opendnp3::OctetString>) -> bool
     |      
     |      Retrieve the only value from the collection.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ICollectionIndexedOctetString) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ICollectionIndexedSecurityStat(pybind11_builtins.pybind11_object)
     |  An interface representing an abstract immutable collection of things of type T. 
     |  The user can only read these values via callback to receive each element.
     |  
     |  Method resolution order:
     |      ICollectionIndexedSecurityStat
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Count(...)
     |      Count(self: pydnp3.opendnp3.ICollectionIndexedSecurityStat) -> int
     |      
     |      The number of elements in the collection.
     |  
     |  Foreach(...)
     |      Foreach(self: pydnp3.opendnp3.ICollectionIndexedSecurityStat, visitor: pydnp3.opendnp3.IVisitorIndexedSecurityStat) -> None
     |      
     |      Visit all the elements of a collection.
     |  
     |  ForeachItem(...)
     |      ForeachItem(self: pydnp3.opendnp3.ICollectionIndexedSecurityStat, callback: Callable[[opendnp3::Indexed<opendnp3::SecurityStat>], None]) -> None
     |      
     |      Visit all of the elements of a collection.
     |  
     |  ReadOnlyValue(...)
     |      ReadOnlyValue(self: pydnp3.opendnp3.ICollectionIndexedSecurityStat, value: opendnp3::Indexed<opendnp3::SecurityStat>) -> bool
     |      
     |      Retrieve the only value from the collection.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ICollectionIndexedSecurityStat) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ICollectionIndexedTimeAndInterval(pybind11_builtins.pybind11_object)
     |  An interface representing an abstract immutable collection of things of type T. 
     |  The user can only read these values via callback to receive each element.
     |  
     |  Method resolution order:
     |      ICollectionIndexedTimeAndInterval
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Count(...)
     |      Count(self: pydnp3.opendnp3.ICollectionIndexedTimeAndInterval) -> int
     |      
     |      The number of elements in the collection.
     |  
     |  Foreach(...)
     |      Foreach(self: pydnp3.opendnp3.ICollectionIndexedTimeAndInterval, visitor: pydnp3.opendnp3.IVisitorIndexedTimeAndInterval) -> None
     |      
     |      Visit all the elements of a collection.
     |  
     |  ForeachItem(...)
     |      ForeachItem(self: pydnp3.opendnp3.ICollectionIndexedTimeAndInterval, callback: Callable[[opendnp3::Indexed<opendnp3::TimeAndInterval>], None]) -> None
     |      
     |      Visit all of the elements of a collection.
     |  
     |  ReadOnlyValue(...)
     |      ReadOnlyValue(self: pydnp3.opendnp3.ICollectionIndexedTimeAndInterval, value: opendnp3::Indexed<opendnp3::TimeAndInterval>) -> bool
     |      
     |      Retrieve the only value from the collection.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ICollectionIndexedTimeAndInterval) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ICommandCollectionAnalogOutputDouble64(pybind11_builtins.pybind11_object)
     |  A collection type for command to which the user can add by type and index.
     |  
     |  Method resolution order:
     |      ICommandCollectionAnalogOutputDouble64
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Add(...)
     |      Add(self: pydnp3.opendnp3.ICommandCollectionAnalogOutputDouble64, command: pydnp3.opendnp3.AnalogOutputDouble64, index: int) -> pydnp3.opendnp3.ICommandCollectionAnalogOutputDouble64
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ICommandCollectionAnalogOutputDouble64) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ICommandCollectionAnalogOutputFloat32(pybind11_builtins.pybind11_object)
     |  A collection type for command to which the user can add by type and index.
     |  
     |  Method resolution order:
     |      ICommandCollectionAnalogOutputFloat32
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Add(...)
     |      Add(self: pydnp3.opendnp3.ICommandCollectionAnalogOutputFloat32, command: pydnp3.opendnp3.AnalogOutputFloat32, index: int) -> pydnp3.opendnp3.ICommandCollectionAnalogOutputFloat32
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ICommandCollectionAnalogOutputFloat32) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ICommandCollectionAnalogOutputInt16(pybind11_builtins.pybind11_object)
     |  A collection type for command to which the user can add by type and index.
     |  
     |  Method resolution order:
     |      ICommandCollectionAnalogOutputInt16
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Add(...)
     |      Add(self: pydnp3.opendnp3.ICommandCollectionAnalogOutputInt16, command: pydnp3.opendnp3.AnalogOutputInt16, index: int) -> pydnp3.opendnp3.ICommandCollectionAnalogOutputInt16
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ICommandCollectionAnalogOutputInt16) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ICommandCollectionAnalogOutputInt32(pybind11_builtins.pybind11_object)
     |  A collection type for command to which the user can add by type and index.
     |  
     |  Method resolution order:
     |      ICommandCollectionAnalogOutputInt32
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Add(...)
     |      Add(self: pydnp3.opendnp3.ICommandCollectionAnalogOutputInt32, command: pydnp3.opendnp3.AnalogOutputInt32, index: int) -> pydnp3.opendnp3.ICommandCollectionAnalogOutputInt32
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ICommandCollectionAnalogOutputInt32) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ICommandCollectionControlRelayOutputBlock(pybind11_builtins.pybind11_object)
     |  A collection type for command to which the user can add by type and index.
     |  
     |  Method resolution order:
     |      ICommandCollectionControlRelayOutputBlock
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Add(...)
     |      Add(self: pydnp3.opendnp3.ICommandCollectionControlRelayOutputBlock, command: pydnp3.opendnp3.ControlRelayOutputBlock, index: int) -> pydnp3.opendnp3.ICommandCollectionControlRelayOutputBlock
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ICommandCollectionControlRelayOutputBlock) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ICommandHandler(ITransactable)
     |  Interface used to dispatch SELECT / OPERATE / DIRECT OPERATE (Binary/Analog output) from the outstation to application code. 
     |  The ITransactable sub-interface is used to determine the start and end of an ASDU containing commands.
     |  
     |  Method resolution order:
     |      ICommandHandler
     |      ITransactable
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Operate(...)
     |      Operate(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. Operate(self: pydnp3.opendnp3.ICommandHandler, command: pydnp3.opendnp3.ControlRelayOutputBlock, index: int, opType: pydnp3.opendnp3.OperateType) -> pydnp3.opendnp3.CommandStatus
     |      
     |         Operate a ControlRelayOutputBlock - group 12 variation 1. 
     |      :param command: command to operate 
     |      :param index: index of the command 
     |      :param opType: the operation type the outstation received 
     |      :type index: unsigned short 
     |      :return: result of request
     |      
     |      2. Operate(self: pydnp3.opendnp3.ICommandHandler, command: pydnp3.opendnp3.AnalogOutputInt16, index: int, opType: pydnp3.opendnp3.OperateType) -> pydnp3.opendnp3.CommandStatus
     |      
     |         Ask if the application supports a 16 bit analog output - group 41 variation 2. 
     |      :param command: command to operate 
     |      :param index: index of the command 
     |      :param opType: the operation type the outstation received 
     |      :type index: unsigned short 
     |      :return: result of request
     |      
     |      3. Operate(self: pydnp3.opendnp3.ICommandHandler, command: pydnp3.opendnp3.AnalogOutputInt32, index: int, opType: pydnp3.opendnp3.OperateType) -> pydnp3.opendnp3.CommandStatus
     |      
     |         Operate a 32 bit analog output - group 41 variation 1. 
     |      :param command: command to operate 
     |      :param index: index of the command 
     |      :param opType: the operation type the outstation received 
     |      :type index: unsigned short 
     |      :return: result of request
     |      
     |      4. Operate(self: pydnp3.opendnp3.ICommandHandler, command: pydnp3.opendnp3.AnalogOutputFloat32, index: int, opType: pydnp3.opendnp3.OperateType) -> pydnp3.opendnp3.CommandStatus
     |      
     |         Operate a single precision, floating point analog output - group 41 variation 3. 
     |      :param command: command to operate 
     |      :param index: index of the command 
     |      :param opType: the operation type the outstation received 
     |      :type index: unsigned short 
     |      :return: result of request
     |      
     |      5. Operate(self: pydnp3.opendnp3.ICommandHandler, command: pydnp3.opendnp3.AnalogOutputDouble64, index: int, opType: pydnp3.opendnp3.OperateType) -> pydnp3.opendnp3.CommandStatus
     |      
     |         Operate a double precision, floating point analog output - group 41 variation 4. 
     |      :param command: command to operate 
     |      :param index: index of the command 
     |      :param opType: the operation type the outstation received 
     |      :type index: unsigned short 
     |      :return: result of request
     |  
     |  Select(...)
     |      Select(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. Select(self: pydnp3.opendnp3.ICommandHandler, command: pydnp3.opendnp3.ControlRelayOutputBlock, index: int) -> pydnp3.opendnp3.CommandStatus
     |      
     |         Ask if the application supports a ControlRelayOutputBlock - group 12 variation 1. 
     |      :param command: command to operate 
     |      :param index: index of the command 
     |      :type index: unsigned short 
     |      :return: result of request
     |      
     |      2. Select(self: pydnp3.opendnp3.ICommandHandler, command: pydnp3.opendnp3.AnalogOutputInt16, index: int) -> pydnp3.opendnp3.CommandStatus
     |      
     |         Ask if the application supports a 16 bit analog output - group 41 variation 2. 
     |      :param command: command to operate 
     |      :param index: index of the command 
     |      :type index: unsigned short 
     |      :return: result of request
     |      
     |      3. Select(self: pydnp3.opendnp3.ICommandHandler, command: pydnp3.opendnp3.AnalogOutputInt32, index: int) -> pydnp3.opendnp3.CommandStatus
     |      
     |         Ask if the application supports a 32 bit analog output - group 41 variation 1. 
     |      :param command: command to operate 
     |      :param index: index of the command 
     |      :type index: unsigned short 
     |      :return: result of request
     |      
     |      4. Select(self: pydnp3.opendnp3.ICommandHandler, command: pydnp3.opendnp3.AnalogOutputFloat32, index: int) -> pydnp3.opendnp3.CommandStatus
     |      
     |         Ask if the application supports a single precision, floating point analog output - group 41 variation 3. 
     |      :param command: command to operate 
     |      :param index: index of the command 
     |      :type index: unsigned short 
     |      :return: result of request
     |      
     |      5. Select(self: pydnp3.opendnp3.ICommandHandler, command: pydnp3.opendnp3.AnalogOutputDouble64, index: int) -> pydnp3.opendnp3.CommandStatus
     |      
     |         Ask if the application supports a double precision, floating point analog output - group 41 variation 4. 
     |      :param command: command to operate 
     |      :param index: index of the command 
     |      :type index: unsigned short 
     |      :return: result of request
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ICommandHandler) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from ITransactable:
     |  
     |  End(...)
     |      End(self: pydnp3.opendnp3.ITransactable) -> None
     |  
     |  Start(...)
     |      Start(self: pydnp3.opendnp3.ITransactable) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ICommandProcessor(pybind11_builtins.pybind11_object)
     |  Interface used to dispatch SELECT / OPERATE / DIRECT OPERATE from application code to a master.
     |  
     |  Method resolution order:
     |      ICommandProcessor
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  DirectOperate(...)
     |      DirectOperate(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. DirectOperate(self: pydnp3.opendnp3.ICommandProcessor, command: pydnp3.opendnp3.ControlRelayOutputBlock, index: int, callback: Callable[[pydnp3.opendnp3.ICommandTaskResult], None], config: pydnp3.opendnp3.TaskConfig = <pydnp3.opendnp3.TaskConfig object at 0x7ff469d738b0>) -> None
     |      
     |      2. DirectOperate(self: pydnp3.opendnp3.ICommandProcessor, command: pydnp3.opendnp3.AnalogOutputInt16, index: int, callback: Callable[[pydnp3.opendnp3.ICommandTaskResult], None], config: pydnp3.opendnp3.TaskConfig = <pydnp3.opendnp3.TaskConfig object at 0x7ff4694929f0>) -> None
     |      
     |      3. DirectOperate(self: pydnp3.opendnp3.ICommandProcessor, command: pydnp3.opendnp3.AnalogOutputInt32, index: int, callback: Callable[[pydnp3.opendnp3.ICommandTaskResult], None], config: pydnp3.opendnp3.TaskConfig = <pydnp3.opendnp3.TaskConfig object at 0x7ff469452af0>) -> None
     |      
     |      4. DirectOperate(self: pydnp3.opendnp3.ICommandProcessor, command: pydnp3.opendnp3.AnalogOutputFloat32, index: int, callback: Callable[[pydnp3.opendnp3.ICommandTaskResult], None], config: pydnp3.opendnp3.TaskConfig = <pydnp3.opendnp3.TaskConfig object at 0x7ff46945beb0>) -> None
     |      
     |      5. DirectOperate(self: pydnp3.opendnp3.ICommandProcessor, command: pydnp3.opendnp3.AnalogOutputDouble64, index: int, callback: Callable[[pydnp3.opendnp3.ICommandTaskResult], None], config: pydnp3.opendnp3.TaskConfig = <pydnp3.opendnp3.TaskConfig object at 0x7ff469d84870>) -> None
     |      
     |         Direct operate a single command. 
     |      :param command: Command to operate 
     |      :param index: in dex of the command 
     |      :param callback: callback that will be invoked upon completion or failure 
     |      :param config: optional configuration that controls normal callbacks and allows the user to be specified for SA
     |      
     |      6. DirectOperate(self: pydnp3.opendnp3.ICommandProcessor, commands: pydnp3.opendnp3.CommandSet, callback: Callable[[pydnp3.opendnp3.ICommandTaskResult], None], config: pydnp3.opendnp3.TaskConfig = <pydnp3.opendnp3.TaskConfig object at 0x7ff469d9ed70>) -> None
     |      
     |         Direct operate a set of commands. 
     |      :param commands: Set of command headers 
     |      :param callback: callback that will be invoked upon completion or failure 
     |      :param config: optional configuration that controls normal callbacks and allows the user to be specified for SA
     |  
     |  SelectAndOperate(...)
     |      SelectAndOperate(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. SelectAndOperate(self: pydnp3.opendnp3.ICommandProcessor, command: pydnp3.opendnp3.ControlRelayOutputBlock, index: int, callback: Callable[[pydnp3.opendnp3.ICommandTaskResult], None], config: pydnp3.opendnp3.TaskConfig = <pydnp3.opendnp3.TaskConfig object at 0x7ff469d9ebb0>) -> None
     |      
     |      2. SelectAndOperate(self: pydnp3.opendnp3.ICommandProcessor, command: pydnp3.opendnp3.AnalogOutputInt16, index: int, callback: Callable[[pydnp3.opendnp3.ICommandTaskResult], None], config: pydnp3.opendnp3.TaskConfig = <pydnp3.opendnp3.TaskConfig object at 0x7ff469dbb7f0>) -> None
     |      
     |      3. SelectAndOperate(self: pydnp3.opendnp3.ICommandProcessor, command: pydnp3.opendnp3.AnalogOutputInt32, index: int, callback: Callable[[pydnp3.opendnp3.ICommandTaskResult], None], config: pydnp3.opendnp3.TaskConfig = <pydnp3.opendnp3.TaskConfig object at 0x7ff469d97a30>) -> None
     |      
     |      4. SelectAndOperate(self: pydnp3.opendnp3.ICommandProcessor, command: pydnp3.opendnp3.AnalogOutputFloat32, index: int, callback: Callable[[pydnp3.opendnp3.ICommandTaskResult], None], config: pydnp3.opendnp3.TaskConfig = <pydnp3.opendnp3.TaskConfig object at 0x7ff46946eaf0>) -> None
     |      
     |      5. SelectAndOperate(self: pydnp3.opendnp3.ICommandProcessor, command: pydnp3.opendnp3.AnalogOutputDouble64, index: int, callback: Callable[[pydnp3.opendnp3.ICommandTaskResult], None], config: pydnp3.opendnp3.TaskConfig = <pydnp3.opendnp3.TaskConfig object at 0x7ff469dca770>) -> None
     |      
     |         Select and operate a single command. 
     |      :param command: Command to operate 
     |      :param index: in dex of the command 
     |      :param callback: callback that will be invoked upon completion or failure 
     |      :param config: optional configuration that controls normal callbacks and allows the user to be specified for SA
     |      
     |      6. SelectAndOperate(self: pydnp3.opendnp3.ICommandProcessor, commands: pydnp3.opendnp3.CommandSet, callback: Callable[[pydnp3.opendnp3.ICommandTaskResult], None], config: pydnp3.opendnp3.TaskConfig = <pydnp3.opendnp3.TaskConfig object at 0x7ff469d89e30>) -> None
     |      
     |         Select and operate a set of commands. 
     |      :param commands: Set of command headers 
     |      :param callback: callback that will be invoked upon completion or failure 
     |      :param config: optional configuration that controls normal callbacks and allows the user to be specified for SA
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ICommandProcessor) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ICommandTaskResult(ICollectionCommandPointResult)
     |  Abstract result type returned via callback to a command operation. 
     |  Provides the TaskCompleton summary value and access to a collection of flatten results. 
     |  A result value is provided for every object in every header specified in the CommandSet used to start the operation.
     |  
     |  Method resolution order:
     |      ICommandTaskResult
     |      ICollectionCommandPointResult
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ICommandTaskResult, summary: pydnp3.opendnp3.TaskCompletion) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  summary
     |      A summary result for the entire task.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from ICollectionCommandPointResult:
     |  
     |  Count(...)
     |      Count(self: pydnp3.opendnp3.ICollectionCommandPointResult) -> int
     |      
     |      The number of elements in the collection.
     |  
     |  Foreach(...)
     |      Foreach(self: pydnp3.opendnp3.ICollectionCommandPointResult, visitor: pydnp3.opendnp3.IVisitorCommandPointResult) -> None
     |      
     |      Visit all the elements of a collection.
     |  
     |  ForeachItem(...)
     |      ForeachItem(self: pydnp3.opendnp3.ICollectionCommandPointResult, callback: Callable[[opendnp3::CommandPointResult], None]) -> None
     |      
     |      Visit all of the elements of a collection.
     |  
     |  ReadOnlyValue(...)
     |      ReadOnlyValue(self: pydnp3.opendnp3.ICollectionCommandPointResult, value: opendnp3::CommandPointResult) -> bool
     |      
     |      Retrieve the only value from the collection.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IINBit(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      IINBit
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.IINBit, arg0: pydnp3.opendnp3.IINBit) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.IINBit) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.IINBit) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.IINBit, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.IINBit) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.IINBit, arg0: pydnp3.opendnp3.IINBit) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.IINBit) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.IINBit, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ALL_STATIONS = IINBit.ALL_STATIONS
     |  
     |  ALREADY_EXECUTING = IINBit.ALREADY_EXECUTING
     |  
     |  CLASS1_EVENTS = IINBit.CLASS1_EVENTS
     |  
     |  CLASS2_EVENTS = IINBit.CLASS2_EVENTS
     |  
     |  CLASS3_EVENTS = IINBit.CLASS3_EVENTS
     |  
     |  CONFIG_CORRUPT = IINBit.CONFIG_CORRUPT
     |  
     |  DEVICE_RESTART = IINBit.DEVICE_RESTART
     |  
     |  DEVICE_TROUBLE = IINBit.DEVICE_TROUBLE
     |  
     |  EVENT_BUFFER_OVERFLOW = IINBit.EVENT_BUFFER_OVERFLOW
     |  
     |  FUNC_NOT_SUPPORTED = IINBit.FUNC_NOT_SUPPORTED
     |  
     |  LOCAL_CONTROL = IINBit.LOCAL_CONTROL
     |  
     |  NEED_TIME = IINBit.NEED_TIME
     |  
     |  OBJECT_UNKNOWN = IINBit.OBJECT_UNKNOWN
     |  
     |  PARAM_ERROR = IINBit.PARAM_ERROR
     |  
     |  RESERVED1 = IINBit.RESERVED1
     |  
     |  RESERVED2 = IINBit.RESERVED2
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IINField(pybind11_builtins.pybind11_object)
     |  DNP3 two-byte IIN field.
     |  
     |  Method resolution order:
     |      IINField
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Any(...)
     |      Any(self: pydnp3.opendnp3.IINField) -> bool
     |  
     |  Clear(...)
     |      Clear(self: pydnp3.opendnp3.IINField) -> None
     |  
     |  ClearBit(...)
     |      ClearBit(self: pydnp3.opendnp3.IINField, bit: pydnp3.opendnp3.IINBit) -> None
     |  
     |  HasRequestError(...)
     |      HasRequestError(self: pydnp3.opendnp3.IINField) -> bool
     |  
     |  IsClear(...)
     |      IsClear(self: pydnp3.opendnp3.IINField, bit: pydnp3.opendnp3.IINBit) -> bool
     |  
     |  IsSet(...)
     |      IsSet(self: pydnp3.opendnp3.IINField, bit: pydnp3.opendnp3.IINBit) -> bool
     |  
     |  SetBit(...)
     |      SetBit(self: pydnp3.opendnp3.IINField, bit: pydnp3.opendnp3.IINBit) -> None
     |  
     |  SetBitToValue(...)
     |      SetBitToValue(self: pydnp3.opendnp3.IINField, bit: pydnp3.opendnp3.IINBit, value: bool) -> None
     |  
     |  __and__(...)
     |      __and__(self: pydnp3.opendnp3.IINField, arg0: pydnp3.opendnp3.IINField) -> pydnp3.opendnp3.IINField
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.IINField, arg0: pydnp3.opendnp3.IINField) -> bool
     |  
     |  __iand__(...)
     |      __iand__(self: pydnp3.opendnp3.IINField, arg0: pydnp3.opendnp3.IINField) -> pydnp3.opendnp3.IINField
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.IINField, bit: pydnp3.opendnp3.IINBit) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.IINField, aLSB: int = 0, aMSB: int = 0) -> None
     |  
     |  __invert__(...)
     |      __invert__(self: pydnp3.opendnp3.IINField) -> pydnp3.opendnp3.IINField
     |  
     |  __ior__(...)
     |      __ior__(self: pydnp3.opendnp3.IINField, arg0: pydnp3.opendnp3.IINField) -> pydnp3.opendnp3.IINField
     |  
     |  __or__(...)
     |      __or__(self: pydnp3.opendnp3.IINField, arg0: pydnp3.opendnp3.IINField) -> pydnp3.opendnp3.IINField
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  Empty(...) from builtins.PyCapsule
     |      Empty() -> pydnp3.opendnp3.IINField
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  LSB
     |      :type LSB: unsigned char
     |  
     |  MSB
     |      :type MSB: unsigned char
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ILinkListener(pybind11_builtins.pybind11_object)
     |  Various optional callbacks that can be received for the link layer.
     |  
     |  Method resolution order:
     |      ILinkListener
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  OnKeepAliveFailure(...)
     |      OnKeepAliveFailure(self: pydnp3.opendnp3.ILinkListener) -> None
     |      
     |      Called when a keep alive message (request link status) receives no response.
     |  
     |  OnKeepAliveInitiated(...)
     |      OnKeepAliveInitiated(self: pydnp3.opendnp3.ILinkListener) -> None
     |      
     |      Called when the keep alive timer elapses. This doesn't denote a keep-alive failure, it's just a notification.
     |  
     |  OnKeepAliveSuccess(...)
     |      OnKeepAliveSuccess(self: pydnp3.opendnp3.ILinkListener) -> None
     |      
     |      Called when a keep alive message receives a valid response.
     |  
     |  OnStateChange(...)
     |      OnStateChange(self: pydnp3.opendnp3.ILinkListener, value: pydnp3.opendnp3.LinkStatus) -> None
     |      
     |      Called when a the reset/unreset status of the link layer changes.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ILinkListener) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IMasterApplication(ILinkListener, pydnp3.openpal.IUTCTimeSource)
     |  Interface for all master application callback info except for measurement values.
     |  
     |  Method resolution order:
     |      IMasterApplication
     |      ILinkListener
     |      pydnp3.openpal.IUTCTimeSource
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  AssignClassDuringStartup(...)
     |      AssignClassDuringStartup(self: pydnp3.opendnp3.IMasterApplication) -> bool
     |      
     |      Return true if the master should do an assign class task during startup handshaking.
     |  
     |  ConfigureAssignClassRequest(...)
     |      ConfigureAssignClassRequest(self: pydnp3.opendnp3.IMasterApplication, fun: Callable[[pydnp3.opendnp3.Header], None]) -> None
     |      
     |      Configure the request headers for assign class. 
     |      Only called if AssignClassDuringStartup returns true. 
     |      The user only needs to call the function for each header type to be written.
     |  
     |  OnClose(...)
     |      OnClose(self: pydnp3.opendnp3.IMasterApplication) -> None
     |      
     |      Called when the application layer is closed.
     |  
     |  OnOpen(...)
     |      OnOpen(self: pydnp3.opendnp3.IMasterApplication) -> None
     |      
     |      Called when the application layer is opened.
     |  
     |  OnReceiveIIN(...)
     |      OnReceiveIIN(self: pydnp3.opendnp3.IMasterApplication, iin: pydnp3.opendnp3.IINField) -> None
     |      
     |      Called when a response or unsolicited response is receive from the outstation.
     |  
     |  OnTaskComplete(...)
     |      OnTaskComplete(self: pydnp3.opendnp3.IMasterApplication, info: pydnp3.opendnp3.TaskInfo) -> None
     |      
     |      Task completion notification.
     |  
     |  OnTaskStart(...)
     |      OnTaskStart(self: pydnp3.opendnp3.IMasterApplication, type: pydnp3.opendnp3.MasterTaskType, id: pydnp3.opendnp3.TaskId) -> None
     |      
     |      Task start notification.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.IMasterApplication) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from ILinkListener:
     |  
     |  OnKeepAliveFailure(...)
     |      OnKeepAliveFailure(self: pydnp3.opendnp3.ILinkListener) -> None
     |      
     |      Called when a keep alive message (request link status) receives no response.
     |  
     |  OnKeepAliveInitiated(...)
     |      OnKeepAliveInitiated(self: pydnp3.opendnp3.ILinkListener) -> None
     |      
     |      Called when the keep alive timer elapses. This doesn't denote a keep-alive failure, it's just a notification.
     |  
     |  OnKeepAliveSuccess(...)
     |      OnKeepAliveSuccess(self: pydnp3.opendnp3.ILinkListener) -> None
     |      
     |      Called when a keep alive message receives a valid response.
     |  
     |  OnStateChange(...)
     |      OnStateChange(self: pydnp3.opendnp3.ILinkListener, value: pydnp3.opendnp3.LinkStatus) -> None
     |      
     |      Called when a the reset/unreset status of the link layer changes.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from pydnp3.openpal.IUTCTimeSource:
     |  
     |  Now(...)
     |      Now(self: pydnp3.openpal.IUTCTimeSource) -> pydnp3.openpal.UTCTimestamp
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IOutstationApplication(ILinkListener)
     |  Interface for all outstation application callback info except for control requests.
     |  
     |  Method resolution order:
     |      IOutstationApplication
     |      ILinkListener
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ColdRestart(...)
     |      ColdRestart(self: pydnp3.opendnp3.IOutstationApplication) -> int
     |      
     |      The outstation should perform a complete restart. 
     |      (See the DNP3 specification for a complete descripton of normal behavior.) 
     |      Return number of seconds or milliseconds until restart is complete. The value is interpreted based on the Restart Mode returned from ColdRestartSupport().
     |  
     |  ColdRestartSupport(...)
     |      ColdRestartSupport(self: pydnp3.opendnp3.IOutstationApplication) -> pydnp3.opendnp3.RestartMode
     |      
     |      Query the outstation for the cold restart mode it supports.
     |  
     |  GetApplicationIIN(...)
     |      GetApplicationIIN(self: pydnp3.opendnp3.IOutstationApplication) -> pydnp3.opendnp3.ApplicationIIN
     |      
     |      Returns the application-controlled IIN field.
     |  
     |  RecordClassAssignment(...)
     |      RecordClassAssignment(self: pydnp3.opendnp3.IOutstationApplication, type: pydnp3.opendnp3.AssignClassType, clazz: pydnp3.opendnp3.PointClass, start: int, stop: int) -> None
     |      
     |         Called if SupportsAssignClass returns true. 
     |         The type and range are pre-validated against the outstation's database and class assignments are automatically applied internally. 
     |         This callback allows user code to persist the changes to non-volatile memory.:type start: unsigned short 
     |      :type stop: unsigned short
     |  
     |  SupportsAssignClass(...)
     |      SupportsAssignClass(self: pydnp3.opendnp3.IOutstationApplication) -> bool
     |      
     |      True if the outstation supports the assign class function code. 
     |      If this function returns false, the assign class callbacks will never be called and the outstation will return IIN 2.1 (FUNC_NOT_SUPPORTED) when it receives this function code.
     |  
     |  SupportsWriteAbsoluteTime(...)
     |      SupportsWriteAbsoluteTime(self: pydnp3.opendnp3.IOutstationApplication) -> bool
     |      
     |      Queries whether the the outstation supports absolute time writes. 
     |      If this function returns false, WriteAbsoluteTime will never be called and the outstation will return IIN 2.1 (FUNC_NOT_SUPPORTED).
     |  
     |  SupportsWriteTimeAndInterval(...)
     |      SupportsWriteTimeAndInterval(self: pydnp3.opendnp3.IOutstationApplication) -> bool
     |      
     |      Queries whether the outstation supports the writing of TimeAndInterval. 
     |      If this function returns false, WriteTimeAndInterval will never be called and the outstation will return IIN 2.1 (FUNC_NOT_SUPPORTED) when it receives this request.
     |  
     |  WarmRestart(...)
     |      WarmRestart(self: pydnp3.opendnp3.IOutstationApplication) -> int
     |      
     |      The outstation should perform a partial restart of only the DNP3 application. 
     |      (See the DNP3 specification for a complete descripton of normal behavior.) 
     |      Return number of seconds or milliseconds until restart is complete. The value is interpreted based on the Restart Mode returned from WarmRestartSupport().
     |  
     |  WarmRestartSupport(...)
     |      WarmRestartSupport(self: pydnp3.opendnp3.IOutstationApplication) -> pydnp3.opendnp3.RestartMode
     |      
     |      Query the outstation for the warm restart mode it supports.
     |  
     |  WriteAbsoluteTime(...)
     |      WriteAbsoluteTime(self: pydnp3.opendnp3.IOutstationApplication, timestamp: pydnp3.openpal.UTCTimestamp) -> bool
     |      
     |      Write the time to outstation, only called if SupportsWriteAbsoluteTime return true. 
     |      Return boolean value indicating if the time value supplied was accepted. Returning false will cause the outstation to set IIN 2.3 (PARAM_ERROR) in its response. 
     |      The outstation should clear its NEED_TIME field when handling this response.
     |  
     |  WriteTimeAndInterval(...)
     |      WriteTimeAndInterval(self: pydnp3.opendnp3.IOutstationApplication, values: pydnp3.opendnp3.ICollectionIndexedTimeAndInterval) -> bool
     |      
     |      Write one or more TimeAndInterval values. Only called if SupportsWriteTimeAndInterval returns true. 
     |      The outstation application code is reponsible for updating TimeAndInterval values in the database if this behavior is desired. 
     |      Return boolean value indicating if the values supplied were accepted. Returning false will cause the outstation to set IIN 2.3 (PARAM_ERROR) in its response.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.IOutstationApplication) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from ILinkListener:
     |  
     |  OnKeepAliveFailure(...)
     |      OnKeepAliveFailure(self: pydnp3.opendnp3.ILinkListener) -> None
     |      
     |      Called when a keep alive message (request link status) receives no response.
     |  
     |  OnKeepAliveInitiated(...)
     |      OnKeepAliveInitiated(self: pydnp3.opendnp3.ILinkListener) -> None
     |      
     |      Called when the keep alive timer elapses. This doesn't denote a keep-alive failure, it's just a notification.
     |  
     |  OnKeepAliveSuccess(...)
     |      OnKeepAliveSuccess(self: pydnp3.opendnp3.ILinkListener) -> None
     |      
     |      Called when a keep alive message receives a valid response.
     |  
     |  OnStateChange(...)
     |      OnStateChange(self: pydnp3.opendnp3.ILinkListener, value: pydnp3.opendnp3.LinkStatus) -> None
     |      
     |      Called when a the reset/unreset status of the link layer changes.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ISOEHandler(ITransactable)
     |  An interface for Sequence-Of-Events (SOE) callbacks from a master stack to the application layer. 
     |  A call is made to the appropriate member method for every measurement value in an ASDU. 
     |  The HeaderInfo class provides information about the object header associated with the value.
     |  
     |  Method resolution order:
     |      ISOEHandler
     |      ITransactable
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Process(...)
     |      Process(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. Process(self: pydnp3.opendnp3.ISOEHandler, info: pydnp3.opendnp3.HeaderInfo, values: pydnp3.opendnp3.ICollectionIndexedBinary) -> None
     |      
     |      2. Process(self: pydnp3.opendnp3.ISOEHandler, info: pydnp3.opendnp3.HeaderInfo, values: pydnp3.opendnp3.ICollectionIndexedDoubleBitBinary) -> None
     |      
     |      3. Process(self: pydnp3.opendnp3.ISOEHandler, info: pydnp3.opendnp3.HeaderInfo, values: pydnp3.opendnp3.ICollectionIndexedAnalog) -> None
     |      
     |      4. Process(self: pydnp3.opendnp3.ISOEHandler, info: pydnp3.opendnp3.HeaderInfo, values: pydnp3.opendnp3.ICollectionIndexedCounter) -> None
     |      
     |      5. Process(self: pydnp3.opendnp3.ISOEHandler, info: pydnp3.opendnp3.HeaderInfo, values: pydnp3.opendnp3.ICollectionIndexedFrozenCounter) -> None
     |      
     |      6. Process(self: pydnp3.opendnp3.ISOEHandler, info: pydnp3.opendnp3.HeaderInfo, values: pydnp3.opendnp3.ICollectionIndexedBinaryOutputStatus) -> None
     |      
     |      7. Process(self: pydnp3.opendnp3.ISOEHandler, info: pydnp3.opendnp3.HeaderInfo, values: pydnp3.opendnp3.ICollectionIndexedAnalogOutputStatus) -> None
     |      
     |      8. Process(self: pydnp3.opendnp3.ISOEHandler, info: pydnp3.opendnp3.HeaderInfo, values: pydnp3.opendnp3.ICollectionIndexedOctetString) -> None
     |      
     |      9. Process(self: pydnp3.opendnp3.ISOEHandler, info: pydnp3.opendnp3.HeaderInfo, values: pydnp3.opendnp3.ICollectionIndexedTimeAndInterval) -> None
     |      
     |      10. Process(self: pydnp3.opendnp3.ISOEHandler, info: pydnp3.opendnp3.HeaderInfo, values: pydnp3.opendnp3.ICollectionIndexedBinaryCommandEvent) -> None
     |      
     |      11. Process(self: pydnp3.opendnp3.ISOEHandler, info: pydnp3.opendnp3.HeaderInfo, values: pydnp3.opendnp3.ICollectionIndexedAnalogCommandEvent) -> None
     |      
     |      12. Process(self: pydnp3.opendnp3.ISOEHandler, info: pydnp3.opendnp3.HeaderInfo, values: pydnp3.opendnp3.ICollectionIndexedSecurityStat) -> None
     |      
     |      13. Process(self: pydnp3.opendnp3.ISOEHandler, info: pydnp3.opendnp3.HeaderInfo, values: pydnp3.opendnp3.ICollectionDNPTime) -> None
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ISOEHandler) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from ITransactable:
     |  
     |  End(...)
     |      End(self: pydnp3.opendnp3.ITransactable) -> None
     |  
     |  Start(...)
     |      Start(self: pydnp3.opendnp3.ITransactable) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ITaskCallback(pybind11_builtins.pybind11_object)
     |  Callbacks for when a task starts and completes.
     |  
     |  Method resolution order:
     |      ITaskCallback
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  OnComplete(...)
     |      OnComplete(self: pydnp3.opendnp3.ITaskCallback, result: pydnp3.opendnp3.TaskCompletion) -> None
     |      
     |      Called when the task succeeds or fails.
     |  
     |  OnDestroyed(...)
     |      OnDestroyed(self: pydnp3.opendnp3.ITaskCallback) -> None
     |      
     |      Called when the task no longer exists and no more calls will be made to OnStart/OnComplete.
     |  
     |  OnStart(...)
     |      OnStart(self: pydnp3.opendnp3.ITaskCallback) -> None
     |      
     |      Called when the task starts running.
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ITaskCallback) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class ITransactable(pybind11_builtins.pybind11_object)
     |  Something that can be performed atomically or needing Start()/End() signals.
     |  
     |  Method resolution order:
     |      ITransactable
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  End(...)
     |      End(self: pydnp3.opendnp3.ITransactable) -> None
     |  
     |  Start(...)
     |      Start(self: pydnp3.opendnp3.ITransactable) -> None
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.ITransactable) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IUpdateHandler(pybind11_builtins.pybind11_object)
     |  An interface used to update measurement values.
     |  
     |  Method resolution order:
     |      IUpdateHandler
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Modify(...)
     |      Modify(self: pydnp3.opendnp3.IUpdateHandler, type: pydnp3.opendnp3.FlagsType, start: int, stop: int, flags: int) -> bool
     |      
     |         Update the flags of a measurement without changing it's value. 
     |      :param type: enumeration specifiy the type to change 
     |      :param start: the start index at which to begin changing flags 
     |      :param stop: the stop index at which to end changing flags 
     |      :param flags: the new value of the flags 
     |      :type start: unsigned short 
     |      :type stop: unsigned short
     |  
     |  Update(...)
     |      Update(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. Update(self: pydnp3.opendnp3.IUpdateHandler, measurement: pydnp3.opendnp3.Binary, index: int, mode: pydnp3.opendnp3.EventMode = EventMode.Detect) -> bool
     |      
     |         Update a Binary measurement. 
     |      :param meas: measurement to be processed 
     |      :param index: index of the measurement 
     |      :param mode Describes how event generation is handled for this method 
     |      :type index: unsigned short 
     |      :return: true if the value exists and it was updated
     |      
     |      2. Update(self: pydnp3.opendnp3.IUpdateHandler, measurement: pydnp3.opendnp3.DoubleBitBinary, index: int, mode: pydnp3.opendnp3.EventMode = EventMode.Detect) -> bool
     |      
     |         Update a DoubleBitBinary measurement. 
     |      :param meas: measurement to be processed 
     |      :param index: index of the measurement 
     |      :param mode Describes how event generation is handled for this method 
     |      :type index: unsigned short 
     |      :return: true if the value exists and it was updated
     |      
     |      3. Update(self: pydnp3.opendnp3.IUpdateHandler, measurement: pydnp3.opendnp3.Analog, index: int, mode: pydnp3.opendnp3.EventMode = EventMode.Detect) -> bool
     |      
     |         Update a Analog measurement. 
     |      :param meas: measurement to be processed 
     |      :param index: index of the measurement 
     |      :param mode Describes how event generation is handled for this method 
     |      :type index: unsigned short 
     |      :return: true if the value exists and it was updated
     |      
     |      4. Update(self: pydnp3.opendnp3.IUpdateHandler, measurement: pydnp3.opendnp3.Counter, index: int, mode: pydnp3.opendnp3.EventMode = EventMode.Detect) -> bool
     |      
     |         Update a Counter measurement. 
     |      :param meas: measurement to be processed 
     |      :param index: index of the measurement 
     |      :param mode Describes how event generation is handled for this method 
     |      :type index: unsigned short 
     |      :return: true if the value exists and it was updated
     |      
     |      5. Update(self: pydnp3.opendnp3.IUpdateHandler, measurement: pydnp3.opendnp3.FrozenCounter, index: int, mode: pydnp3.opendnp3.EventMode = EventMode.Detect) -> bool
     |      
     |         Update a FrozenCounter measurement. 
     |      :param meas: measurement to be processed 
     |      :param index: index of the measurement 
     |      :param mode Describes how event generation is handled for this method 
     |      :type index: unsigned short 
     |      :return: true if the value exists and it was updated
     |      
     |      6. Update(self: pydnp3.opendnp3.IUpdateHandler, measurement: pydnp3.opendnp3.BinaryOutputStatus, index: int, mode: pydnp3.opendnp3.EventMode = EventMode.Detect) -> bool
     |      
     |         Update a BinaryOutputStatus measurement. 
     |      :param meas: measurement to be processed 
     |      :param index: index of the measurement 
     |      :param mode Describes how event generation is handled for this method 
     |      :type index: unsigned short 
     |      :return: true if the value exists and it was updated
     |      
     |      7. Update(self: pydnp3.opendnp3.IUpdateHandler, measurement: pydnp3.opendnp3.AnalogOutputStatus, index: int, mode: pydnp3.opendnp3.EventMode = EventMode.Detect) -> bool
     |      
     |         Update a AnalogOutputStatus measurement. 
     |      :param meas: measurement to be processed 
     |      :param index: index of the measurement 
     |      :param mode Describes how event generation is handled for this method 
     |      :type index: unsigned short 
     |      :return: true if the value exists and it was updated
     |      
     |      8. Update(self: pydnp3.opendnp3.IUpdateHandler, measurement: pydnp3.opendnp3.TimeAndInterval, index: int) -> bool
     |      
     |         Update a TimeAndInterval valueindex. 
     |      :param meas: measurement to be processed 
     |      :param index: index of the measurement 
     |      :type index: unsigned short 
     |      :return: true if the value exists and it was updated
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.IUpdateHandler) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IVisitorCommandPointResult(pybind11_builtins.pybind11_object)
     |  Abstract way of visiting elements of a collection.
     |  
     |  Method resolution order:
     |      IVisitorCommandPointResult
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  OnValue(...)
     |      OnValue(self: pydnp3.opendnp3.IVisitorCommandPointResult, value: opendnp3::CommandPointResult) -> None
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.IVisitorCommandPointResult) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IVisitorDNPTime(pybind11_builtins.pybind11_object)
     |  Abstract way of visiting elements of a collection.
     |  
     |  Method resolution order:
     |      IVisitorDNPTime
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  OnValue(...)
     |      OnValue(self: pydnp3.opendnp3.IVisitorDNPTime, value: openpal::UInt48Type) -> None
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.IVisitorDNPTime) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IVisitorIndexedAnalog(pybind11_builtins.pybind11_object)
     |  Abstract way of visiting elements of a collection.
     |  
     |  Method resolution order:
     |      IVisitorIndexedAnalog
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  OnValue(...)
     |      OnValue(self: pydnp3.opendnp3.IVisitorIndexedAnalog, value: opendnp3::Indexed<opendnp3::Analog>) -> None
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.IVisitorIndexedAnalog) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IVisitorIndexedAnalogCommandEvent(pybind11_builtins.pybind11_object)
     |  Abstract way of visiting elements of a collection.
     |  
     |  Method resolution order:
     |      IVisitorIndexedAnalogCommandEvent
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  OnValue(...)
     |      OnValue(self: pydnp3.opendnp3.IVisitorIndexedAnalogCommandEvent, value: opendnp3::Indexed<opendnp3::AnalogCommandEvent>) -> None
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.IVisitorIndexedAnalogCommandEvent) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IVisitorIndexedAnalogOutputStatus(pybind11_builtins.pybind11_object)
     |  Abstract way of visiting elements of a collection.
     |  
     |  Method resolution order:
     |      IVisitorIndexedAnalogOutputStatus
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  OnValue(...)
     |      OnValue(self: pydnp3.opendnp3.IVisitorIndexedAnalogOutputStatus, value: opendnp3::Indexed<opendnp3::AnalogOutputStatus>) -> None
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.IVisitorIndexedAnalogOutputStatus) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IVisitorIndexedBinary(pybind11_builtins.pybind11_object)
     |  Abstract way of visiting elements of a collection.
     |  
     |  Method resolution order:
     |      IVisitorIndexedBinary
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  OnValue(...)
     |      OnValue(self: pydnp3.opendnp3.IVisitorIndexedBinary, value: opendnp3::Indexed<opendnp3::Binary>) -> None
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.IVisitorIndexedBinary) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IVisitorIndexedBinaryCommandEvent(pybind11_builtins.pybind11_object)
     |  Abstract way of visiting elements of a collection.
     |  
     |  Method resolution order:
     |      IVisitorIndexedBinaryCommandEvent
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  OnValue(...)
     |      OnValue(self: pydnp3.opendnp3.IVisitorIndexedBinaryCommandEvent, value: opendnp3::Indexed<opendnp3::BinaryCommandEvent>) -> None
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.IVisitorIndexedBinaryCommandEvent) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IVisitorIndexedBinaryOutputStatus(pybind11_builtins.pybind11_object)
     |  Abstract way of visiting elements of a collection.
     |  
     |  Method resolution order:
     |      IVisitorIndexedBinaryOutputStatus
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  OnValue(...)
     |      OnValue(self: pydnp3.opendnp3.IVisitorIndexedBinaryOutputStatus, value: opendnp3::Indexed<opendnp3::BinaryOutputStatus>) -> None
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.IVisitorIndexedBinaryOutputStatus) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IVisitorIndexedCounter(pybind11_builtins.pybind11_object)
     |  Abstract way of visiting elements of a collection.
     |  
     |  Method resolution order:
     |      IVisitorIndexedCounter
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  OnValue(...)
     |      OnValue(self: pydnp3.opendnp3.IVisitorIndexedCounter, value: opendnp3::Indexed<opendnp3::Counter>) -> None
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.IVisitorIndexedCounter) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IVisitorIndexedDoubleBitBinary(pybind11_builtins.pybind11_object)
     |  Abstract way of visiting elements of a collection.
     |  
     |  Method resolution order:
     |      IVisitorIndexedDoubleBitBinary
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  OnValue(...)
     |      OnValue(self: pydnp3.opendnp3.IVisitorIndexedDoubleBitBinary, value: opendnp3::Indexed<opendnp3::DoubleBitBinary>) -> None
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.IVisitorIndexedDoubleBitBinary) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IVisitorIndexedFrozenCounter(pybind11_builtins.pybind11_object)
     |  Abstract way of visiting elements of a collection.
     |  
     |  Method resolution order:
     |      IVisitorIndexedFrozenCounter
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  OnValue(...)
     |      OnValue(self: pydnp3.opendnp3.IVisitorIndexedFrozenCounter, value: opendnp3::Indexed<opendnp3::FrozenCounter>) -> None
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.IVisitorIndexedFrozenCounter) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IVisitorIndexedOctetString(pybind11_builtins.pybind11_object)
     |  Abstract way of visiting elements of a collection.
     |  
     |  Method resolution order:
     |      IVisitorIndexedOctetString
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  OnValue(...)
     |      OnValue(self: pydnp3.opendnp3.IVisitorIndexedOctetString, value: opendnp3::Indexed<opendnp3::OctetString>) -> None
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.IVisitorIndexedOctetString) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IVisitorIndexedSecurityStat(pybind11_builtins.pybind11_object)
     |  Abstract way of visiting elements of a collection.
     |  
     |  Method resolution order:
     |      IVisitorIndexedSecurityStat
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  OnValue(...)
     |      OnValue(self: pydnp3.opendnp3.IVisitorIndexedSecurityStat, value: opendnp3::Indexed<opendnp3::SecurityStat>) -> None
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.IVisitorIndexedSecurityStat) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IVisitorIndexedTimeAndInterval(pybind11_builtins.pybind11_object)
     |  Abstract way of visiting elements of a collection.
     |  
     |  Method resolution order:
     |      IVisitorIndexedTimeAndInterval
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  OnValue(...)
     |      OnValue(self: pydnp3.opendnp3.IVisitorIndexedTimeAndInterval, value: opendnp3::Indexed<opendnp3::TimeAndInterval>) -> None
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.IVisitorIndexedTimeAndInterval) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IndexConfig(pybind11_builtins.pybind11_object)
     |  All entries have this information.
     |  
     |  Method resolution order:
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.IndexConfig, vIndex: int = 0) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IndexMode(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      IndexMode
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.IndexMode, arg0: pydnp3.opendnp3.IndexMode) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.IndexMode) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.IndexMode) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.IndexMode, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.IndexMode) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.IndexMode, arg0: pydnp3.opendnp3.IndexMode) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.IndexMode) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.IndexMode, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Contiguous = IndexMode.Contiguous
     |  
     |  Discontiguous = IndexMode.Discontiguous
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IndexedAnalog(pybind11_builtins.pybind11_object)
     |  A simple tuple for pairing Values with an index.
     |  
     |  Method resolution order:
     |      IndexedAnalog
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.IndexedAnalog) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.IndexedAnalog, value: opendnp3::Analog, index: int = 0) -> None
     |      
     |      :type index: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  index
     |      :type index: unsigned short
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IndexedAnalogCommandEvent(pybind11_builtins.pybind11_object)
     |  A simple tuple for pairing Values with an index.
     |  
     |  Method resolution order:
     |      IndexedAnalogCommandEvent
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.IndexedAnalogCommandEvent) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.IndexedAnalogCommandEvent, value: pydnp3.opendnp3.AnalogCommandEvent, index: int = 0) -> None
     |      
     |      :type index: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  index
     |      :type index: unsigned short
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IndexedAnalogOutputDouble64(pybind11_builtins.pybind11_object)
     |  A simple tuple for pairing Values with an index.
     |  
     |  Method resolution order:
     |      IndexedAnalogOutputDouble64
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.IndexedAnalogOutputDouble64) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.IndexedAnalogOutputDouble64, value: pydnp3.opendnp3.AnalogOutputDouble64, index: int = 0) -> None
     |      
     |      :type index: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  index
     |      :type index: unsigned short
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IndexedAnalogOutputFloat32(pybind11_builtins.pybind11_object)
     |  A simple tuple for pairing Values with an index.
     |  
     |  Method resolution order:
     |      IndexedAnalogOutputFloat32
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.IndexedAnalogOutputFloat32) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.IndexedAnalogOutputFloat32, value: pydnp3.opendnp3.AnalogOutputFloat32, index: int = 0) -> None
     |      
     |      :type index: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  index
     |      :type index: unsigned short
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IndexedAnalogOutputInt16(pybind11_builtins.pybind11_object)
     |  A simple tuple for pairing Values with an index.
     |  
     |  Method resolution order:
     |      IndexedAnalogOutputInt16
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.IndexedAnalogOutputInt16) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.IndexedAnalogOutputInt16, value: pydnp3.opendnp3.AnalogOutputInt16, index: int = 0) -> None
     |      
     |      :type index: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  index
     |      :type index: unsigned short
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IndexedAnalogOutputInt32(pybind11_builtins.pybind11_object)
     |  A simple tuple for pairing Values with an index.
     |  
     |  Method resolution order:
     |      IndexedAnalogOutputInt32
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.IndexedAnalogOutputInt32) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.IndexedAnalogOutputInt32, value: pydnp3.opendnp3.AnalogOutputInt32, index: int = 0) -> None
     |      
     |      :type index: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  index
     |      :type index: unsigned short
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IndexedAnalogOutputStatus(pybind11_builtins.pybind11_object)
     |  A simple tuple for pairing Values with an index.
     |  
     |  Method resolution order:
     |      IndexedAnalogOutputStatus
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.IndexedAnalogOutputStatus) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.IndexedAnalogOutputStatus, value: opendnp3::AnalogOutputStatus, index: int = 0) -> None
     |      
     |      :type index: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  index
     |      :type index: unsigned short
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IndexedBinary(pybind11_builtins.pybind11_object)
     |  A simple tuple for pairing Values with an index.
     |  
     |  Method resolution order:
     |      IndexedBinary
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.IndexedBinary) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.IndexedBinary, value: opendnp3::Binary, index: int = 0) -> None
     |      
     |      :type index: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  index
     |      :type index: unsigned short
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IndexedBinaryCommandEvent(pybind11_builtins.pybind11_object)
     |  A simple tuple for pairing Values with an index.
     |  
     |  Method resolution order:
     |      IndexedBinaryCommandEvent
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.IndexedBinaryCommandEvent) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.IndexedBinaryCommandEvent, value: pydnp3.opendnp3.BinaryCommandEvent, index: int = 0) -> None
     |      
     |      :type index: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  index
     |      :type index: unsigned short
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IndexedBinaryOutputStatus(pybind11_builtins.pybind11_object)
     |  A simple tuple for pairing Values with an index.
     |  
     |  Method resolution order:
     |      IndexedBinaryOutputStatus
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.IndexedBinaryOutputStatus) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.IndexedBinaryOutputStatus, value: opendnp3::BinaryOutputStatus, index: int = 0) -> None
     |      
     |      :type index: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  index
     |      :type index: unsigned short
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IndexedControlRelayOutputBlock(pybind11_builtins.pybind11_object)
     |  A simple tuple for pairing Values with an index.
     |  
     |  Method resolution order:
     |      IndexedControlRelayOutputBlock
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.IndexedControlRelayOutputBlock) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.IndexedControlRelayOutputBlock, value: pydnp3.opendnp3.ControlRelayOutputBlock, index: int = 0) -> None
     |      
     |      :type index: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  index
     |      :type index: unsigned short
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IndexedCounter(pybind11_builtins.pybind11_object)
     |  A simple tuple for pairing Values with an index.
     |  
     |  Method resolution order:
     |      IndexedCounter
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.IndexedCounter) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.IndexedCounter, value: opendnp3::Counter, index: int = 0) -> None
     |      
     |      :type index: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  index
     |      :type index: unsigned short
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IndexedDoubleBitBinary(pybind11_builtins.pybind11_object)
     |  A simple tuple for pairing Values with an index.
     |  
     |  Method resolution order:
     |      IndexedDoubleBitBinary
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.IndexedDoubleBitBinary) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.IndexedDoubleBitBinary, value: opendnp3::DoubleBitBinary, index: int = 0) -> None
     |      
     |      :type index: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  index
     |      :type index: unsigned short
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IndexedFrozenCounter(pybind11_builtins.pybind11_object)
     |  A simple tuple for pairing Values with an index.
     |  
     |  Method resolution order:
     |      IndexedFrozenCounter
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.IndexedFrozenCounter) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.IndexedFrozenCounter, value: opendnp3::FrozenCounter, index: int = 0) -> None
     |      
     |      :type index: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  index
     |      :type index: unsigned short
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IndexedOctetString(pybind11_builtins.pybind11_object)
     |  A simple tuple for pairing Values with an index.
     |  
     |  Method resolution order:
     |      IndexedOctetString
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.IndexedOctetString) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.IndexedOctetString, value: opendnp3::OctetString, index: int = 0) -> None
     |      
     |      :type index: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  index
     |      :type index: unsigned short
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IndexedSecurityStat(pybind11_builtins.pybind11_object)
     |  A simple tuple for pairing Values with an index.
     |  
     |  Method resolution order:
     |      IndexedSecurityStat
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.IndexedSecurityStat) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.IndexedSecurityStat, value: opendnp3::SecurityStat, index: int = 0) -> None
     |      
     |      :type index: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  index
     |      :type index: unsigned short
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IndexedTimeAndInterval(pybind11_builtins.pybind11_object)
     |  A simple tuple for pairing Values with an index.
     |  
     |  Method resolution order:
     |      IndexedTimeAndInterval
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.IndexedTimeAndInterval) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.IndexedTimeAndInterval, value: opendnp3::TimeAndInterval, index: int = 0) -> None
     |      
     |      :type index: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  index
     |      :type index: unsigned short
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class IntervalUnits(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      IntervalUnits
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.IntervalUnits, arg0: pydnp3.opendnp3.IntervalUnits) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.IntervalUnits) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.IntervalUnits) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.IntervalUnits, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.IntervalUnits) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.IntervalUnits, arg0: pydnp3.opendnp3.IntervalUnits) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.IntervalUnits) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.IntervalUnits, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Days = IntervalUnits.Days
     |  
     |  Hours = IntervalUnits.Hours
     |  
     |  Milliseconds = IntervalUnits.Milliseconds
     |  
     |  Minutes = IntervalUnits.Minutes
     |  
     |  Months7 = IntervalUnits.Months7
     |  
     |  Months8 = IntervalUnits.Months8
     |  
     |  Months9 = IntervalUnits.Months9
     |  
     |  NoRepeat = IntervalUnits.NoRepeat
     |  
     |  Seasons = IntervalUnits.Seasons
     |  
     |  Seconds = IntervalUnits.Seconds
     |  
     |  Undefined = IntervalUnits.Undefined
     |  
     |  Weeks = IntervalUnits.Weeks
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class KeyChangeMethod(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      KeyChangeMethod
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.KeyChangeMethod, arg0: pydnp3.opendnp3.KeyChangeMethod) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.KeyChangeMethod) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.KeyChangeMethod) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.KeyChangeMethod, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.KeyChangeMethod) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.KeyChangeMethod, arg0: pydnp3.opendnp3.KeyChangeMethod) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.KeyChangeMethod) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.KeyChangeMethod, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  AES_128_SHA1_HMAC = KeyChangeMethod.AES_128_SHA1_HMAC
     |  
     |  AES_256_AES_GMAC = KeyChangeMethod.AES_256_AES_GMAC
     |  
     |  AES_256_SHA256_HMAC = KeyChangeMethod.AES_256_SHA256_HMAC
     |  
     |  RSA_1024_DSA_SHA1_HMAC_SHA1 = KeyChangeMethod.RSA_1024_DSA_SHA1_HMAC_S...
     |  
     |  RSA_2048_DSA_SHA256_AES_GMAC = KeyChangeMethod.RSA_2048_DSA_SHA256_AES...
     |  
     |  RSA_2048_DSA_SHA256_HMAC_SHA256 = KeyChangeMethod.RSA_2048_DSA_SHA256_...
     |  
     |  RSA_3072_DSA_SHA256_AES_GMAC = KeyChangeMethod.RSA_3072_DSA_SHA256_AES...
     |  
     |  RSA_3072_DSA_SHA256_HMAC_SHA256 = KeyChangeMethod.RSA_3072_DSA_SHA256_...
     |  
     |  UNDEFINED = KeyChangeMethod.UNDEFINED
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class KeyStatus(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      KeyStatus
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.KeyStatus, arg0: pydnp3.opendnp3.KeyStatus) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.KeyStatus) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.KeyStatus) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.KeyStatus, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.KeyStatus) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.KeyStatus, arg0: pydnp3.opendnp3.KeyStatus) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.KeyStatus) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.KeyStatus, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  AUTH_FAIL = KeyStatus.AUTH_FAIL
     |  
     |  COMM_FAIL = KeyStatus.COMM_FAIL
     |  
     |  NOT_INIT = KeyStatus.NOT_INIT
     |  
     |  OK = KeyStatus.OK
     |  
     |  UNDEFINED = KeyStatus.UNDEFINED
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class KeyWrapAlgorithm(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      KeyWrapAlgorithm
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.KeyWrapAlgorithm, arg0: pydnp3.opendnp3.KeyWrapAlgorithm) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.KeyWrapAlgorithm) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.KeyWrapAlgorithm) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.KeyWrapAlgorithm, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.KeyWrapAlgorithm) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.KeyWrapAlgorithm, arg0: pydnp3.opendnp3.KeyWrapAlgorithm) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.KeyWrapAlgorithm) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.KeyWrapAlgorithm, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  AES_128 = KeyWrapAlgorithm.AES_128
     |  
     |  AES_256 = KeyWrapAlgorithm.AES_256
     |  
     |  UNDEFINED = KeyWrapAlgorithm.UNDEFINED
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class LinkConfig(pybind11_builtins.pybind11_object)
     |  Configuration for the dnp3 link layer.
     |  
     |  Method resolution order:
     |      LinkConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.LinkConfig, IsMaster: bool, UseConfirms: bool, NumRetry: int, LocalAddr: int, RemoteAddr: int, Timeout: pydnp3.openpal.TimeDuration, KeepAliveTimeout: pydnp3.openpal.TimeDuration) -> None
     |      
     |      :type NumRetry: unsigned int 
     |      :type LocalAddr: unsigned short 
     |      :type RemoteAddr: unsigned short
     |      
     |      2. __init__(self: pydnp3.opendnp3.LinkConfig, IsMaster: bool, UseConfirms: bool) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  IsMaster
     |      The master/outstation bit set on all messages.
     |  
     |  KeepAliveTimeout
     |      The interval for keep-alive messages (link status requests) 
     |      If set to TimeDuration::Max(), the keep-alive is disabled.
     |  
     |  LocalAddr
     |      Dnp3 address of the local device. 
     |      :type LocalAddr: unsigned short
     |  
     |  NumRetry
     |      The number of retry attempts the link will attempt after the initial try. 
     |      :type NumRetry: unsigned int
     |  
     |  RemoteAddr
     |      Dnp3 address of the remote device. 
     |      :type RemoteAddr: unsigned short
     |  
     |  Timeout
     |      The response timeout in milliseconds for confirmed requests.
     |  
     |  UseConfirms
     |      If true, the link layer will send data requesting confirmation.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class LinkFunction(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      LinkFunction
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.LinkFunction, arg0: pydnp3.opendnp3.LinkFunction) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.LinkFunction) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.LinkFunction) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.LinkFunction, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.LinkFunction) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.LinkFunction, arg0: pydnp3.opendnp3.LinkFunction) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.LinkFunction) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.LinkFunction, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  INVALID = LinkFunction.INVALID
     |  
     |  PRI_CONFIRMED_USER_DATA = LinkFunction.PRI_CONFIRMED_USER_DATA
     |  
     |  PRI_REQUEST_LINK_STATUS = LinkFunction.PRI_REQUEST_LINK_STATUS
     |  
     |  PRI_RESET_LINK_STATES = LinkFunction.PRI_RESET_LINK_STATES
     |  
     |  PRI_TEST_LINK_STATES = LinkFunction.PRI_TEST_LINK_STATES
     |  
     |  PRI_UNCONFIRMED_USER_DATA = LinkFunction.PRI_UNCONFIRMED_USER_DATA
     |  
     |  SEC_ACK = LinkFunction.SEC_ACK
     |  
     |  SEC_LINK_STATUS = LinkFunction.SEC_LINK_STATUS
     |  
     |  SEC_NACK = LinkFunction.SEC_NACK
     |  
     |  SEC_NOT_SUPPORTED = LinkFunction.SEC_NOT_SUPPORTED
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class LinkHeaderFields(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      LinkHeaderFields
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.LinkHeaderFields) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.LinkHeaderFields, func: pydnp3.opendnp3.LinkFunction, isFromMaster: bool, fcb: bool, fcvdfc: bool, dest: int, src: int) -> None
     |      
     |      :type dest: unsigned short 
     |      :type src: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  dest
     |      :type dest: unsigned short
     |  
     |  fcb
     |  
     |  fcvdfc
     |  
     |  func
     |  
     |  isFromMaster
     |  
     |  src
     |      :type src: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class LinkStatistics(pybind11_builtins.pybind11_object)
     |  Counters for the channel and the DNP3 link layer.
     |  
     |  Method resolution order:
     |      LinkStatistics
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.LinkStatistics) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.LinkStatistics, channel: pydnp3.opendnp3.LinkStatisticsChannel, parser: pydnp3.opendnp3.LinkStatisticsParser) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  channel
     |      Statistics for the communicaiton channel.
     |  
     |  parser
     |      Statistics for the link parser.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class LinkStatisticsChannel(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      LinkStatisticsChannel
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.LinkStatisticsChannel, numOpen: int = 0, numOpenFail: int = 0, numClose: int = 0, numBytesRx: int = 0, numBytesTx: int = 0, numLinkFrameTx: int = 0) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  numBytesRx
     |      The number of bytes received. 
     |      :type numBytesRx: unsigned int
     |  
     |  numBytesTx
     |      The number of bytes transmitted. 
     |      :type numBytesTx: unsigned int
     |  
     |  numClose
     |      The number of times the channel has closed either due to user intervention or an error. 
     |      :type numClose: unsigned int
     |  
     |  numLinkFrameTx
     |      Number of frames transmitted. 
     |      :type numLinkFrameTx: unsigned int
     |  
     |  numOpen
     |      The number of times the channel has successfully opened. 
     |      :type numOpen: unsigned int
     |  
     |  numOpenFail
     |      The number of times the channel has failed to open. 
     |      :type numOpenFail: unsigned int
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class LinkStatisticsParser(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      LinkStatisticsParser
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.LinkStatisticsParser, numHeaderCrcError: int = 0, numBodyCrcError: int = 0, numLinkFrameRx: int = 0, numBadLength: int = 0, numBadFunctionCode: int = 0, numBadFCV: int = 0, numBadFCB: int = 0) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  numBadFCB
     |      Number of frames w/ unexpected FCB bit set (malformed frame). 
     |      :type numBadFCB: unsigned int
     |  
     |  numBadFCV
     |      Number of FCV / function code mismatches (malformed frame). 
     |      :type numBadFCV: unsigned int
     |  
     |  numBadFunctionCode
     |      Number of bad function codes (malformed frame). 
     |      :type numBadFunctionCode: unsigned int
     |  
     |  numBadLength
     |      Number of bad LEN fields received (malformed frame). 
     |      :type numBadLength: unsigned int
     |  
     |  numBodyCrcError
     |      Number of frames discarded due to body CRC errors. 
     |      :type numBodyCrcError: unsigned int
     |  
     |  numHeaderCrcError
     |      Number of frames discarded due to header CRC errors. 
     |      :type numHeaderCrcError: unsigned int
     |  
     |  numLinkFrameRx
     |      Number of frames received. 
     |      :type numLinkFrameRx: unsigned int
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class LinkStatus(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      LinkStatus
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.LinkStatus, arg0: pydnp3.opendnp3.LinkStatus) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.LinkStatus) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.LinkStatus) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.LinkStatus, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.LinkStatus) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.LinkStatus, arg0: pydnp3.opendnp3.LinkStatus) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.LinkStatus) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.LinkStatus, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  RESET = LinkStatus.RESET
     |  
     |  UNRESET = LinkStatus.UNRESET
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class MasterParams(pybind11_builtins.pybind11_object)
     |  Configuration information for the dnp3 master.
     |  
     |  Method resolution order:
     |      MasterParams
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.MasterParams) -> None
     |      
     |      Default constructor.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  disableUnsolOnStartup
     |      If true, the master will disable unsol on startup for all 3 classes.
     |  
     |  eventScanOnEventsAvailableClassMask
     |      Which classes should be requested in an event scan when detecting corresponding events available IIN.
     |  
     |  ignoreRestartIIN
     |      If true, the master will not clear the restart IIN bit in response to detecting it set.
     |  
     |  integrityOnEventOverflowIIN
     |      Defines whether an integrity scan will be performed when the EventBufferOverflow IIN is detected.
     |  
     |  maxRxFragSize
     |      Maximum APDU rx size in bytes. 
     |      :type maxRxFragSize: unsigned int
     |  
     |  maxTaskRetryPeriod
     |      Maximum time delay before retrying a failed task. Backs off exponentially from taskRetryPeriod.
     |  
     |  maxTxFragSize
     |      Maximum APDU tx size in bytes. 
     |      :type maxTxFragSize: unsigned int
     |  
     |  responseTimeout
     |      Application layer response timeout.
     |  
     |  startupIntegrityClassMask
     |      Which classes should be requested in a startup integrity scan, defaults to 3/2/1/0. 
     |      A mask equal to 0 means no startup integrity scan will be performed.
     |  
     |  taskRetryPeriod
     |      Time delay before retrying a failed task.
     |  
     |  taskStartTimeout
     |      Time delay before failing a non-recurring task (e.g. commands) that cannot start.
     |  
     |  timeSyncMode
     |      If true, the master will do time syncs when it sees the time IIN bit from the outstation.
     |  
     |  unsolClassMask
     |      Bitwise mask used determine which classes are enabled for unsol, if 0 unsol is not enabled.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class MasterTaskType(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      MasterTaskType
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.MasterTaskType, arg0: pydnp3.opendnp3.MasterTaskType) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.MasterTaskType) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.MasterTaskType) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.MasterTaskType, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.MasterTaskType) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.MasterTaskType, arg0: pydnp3.opendnp3.MasterTaskType) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.MasterTaskType) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.MasterTaskType, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ASSIGN_CLASS = MasterTaskType.ASSIGN_CLASS
     |  
     |  AUTO_EVENT_SCAN = MasterTaskType.AUTO_EVENT_SCAN
     |  
     |  CLEAR_RESTART = MasterTaskType.CLEAR_RESTART
     |  
     |  DISABLE_UNSOLICITED = MasterTaskType.DISABLE_UNSOLICITED
     |  
     |  ENABLE_UNSOLICITED = MasterTaskType.ENABLE_UNSOLICITED
     |  
     |  LAN_TIME_SYNC = MasterTaskType.LAN_TIME_SYNC
     |  
     |  NON_LAN_TIME_SYNC = MasterTaskType.NON_LAN_TIME_SYNC
     |  
     |  STARTUP_INTEGRITY_POLL = MasterTaskType.STARTUP_INTEGRITY_POLL
     |  
     |  USER_TASK = MasterTaskType.USER_TASK
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class Measurement(pybind11_builtins.pybind11_object)
     |  Base class shared by all of the DataPoint types.
     |  
     |  Method resolution order:
     |      Measurement
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  flags
     |      Bitfield that stores type specific quality information.
     |  
     |  time
     |      Timestamp associated with the measurement.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class OctetData(pybind11_builtins.pybind11_object)
     |  A base-class for bitstrings containing up to 255 bytes
     |  
     |  Method resolution order:
     |      OctetData
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  ToRSlice(...)
     |      ToRSlice(self: pydnp3.opendnp3.OctetData) -> pydnp3.openpal.RSlice
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.OctetData) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.OctetData, input: pydnp3.openpal.RSlice) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  MAX_SIZE
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class OctetString(OctetData)
     |  Respresents group 110/111 objects.
     |  
     |  Method resolution order:
     |      OctetString
     |      OctetData
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.OctetString) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.OctetString, data: pydnp3.opendnp3.OctetString) -> None
     |      
     |      3. __init__(self: pydnp3.opendnp3.OctetString, buffer: pydnp3.openpal.RSlice) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from OctetData:
     |  
     |  ToRSlice(...)
     |      ToRSlice(self: pydnp3.opendnp3.OctetData) -> pydnp3.openpal.RSlice
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties inherited from OctetData:
     |  
     |  MAX_SIZE
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class OperateType(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      OperateType
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.OperateType, arg0: pydnp3.opendnp3.OperateType) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.OperateType) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.OperateType) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.OperateType, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.OperateType) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.OperateType, arg0: pydnp3.opendnp3.OperateType) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.OperateType) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.OperateType, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  DIRECT_OPERATE = OperateType.DIRECT_OPERATE
     |  
     |  DIRECT_OPERATE_NO_ACK = OperateType.DIRECT_OPERATE_NO_ACK
     |  
     |  SELECT_BEFORE_OPERATE = OperateType.SELECT_BEFORE_OPERATE
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class OutstationConfig(pybind11_builtins.pybind11_object)
     |  Configuration information for a dnp3 outstation (outstation). 
     |  Used as both input describing the startup configuration of the outstation, and as configuration state of mutable properties (i.e. unsolicited responses). 
     |  Major feature areas are unsolicited responses, time synchronization requests, event buffer limits, and the DNP3 object/variations to use by default when the master requests class data or variation 0.
     |  
     |  Method resolution order:
     |      OutstationConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.OutstationConfig) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.OutstationConfig, params: pydnp3.opendnp3.OutstationParams, eventBufferConfig: pydnp3.opendnp3.EventBufferConfig) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  eventBufferConfig
     |      Describes the sizes in the event buffer.
     |  
     |  params
     |      Various parameters that govern outstation behavior.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class OutstationParams(pybind11_builtins.pybind11_object)
     |  Static configuration parameters for an outstation session.
     |  
     |  Method resolution order:
     |      OutstationParams
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.OutstationParams, indexMode: pydnp3.opendnp3.IndexMode = IndexMode.Contiguous, maxControlsPerRequest: int = 16, selectTimeout: pydnp3.openpal.TimeDuration = <pydnp3.openpal.TimeDuration object at 0x7ff4694330b0>, solConfirmTimeout: pydnp3.openpal.TimeDuration = <pydnp3.openpal.TimeDuration object at 0x7ff469d8b7f0>, unsolConfirmTimeout: pydnp3.openpal.TimeDuration = <pydnp3.openpal.TimeDuration object at 0x7ff469d8b7f0>, unsolRetryTimeout: pydnp3.openpal.TimeDuration = <pydnp3.openpal.TimeDuration object at 0x7ff469d8b7f0>, maxTxFragSize: int = 2048, maxRxFragSize: int = 2048, allowUnsolicited: bool = False, typesAllowedInClass0: pydnp3.opendnp3.StaticTypeBitField = <pydnp3.opendnp3.StaticTypeBitField object at 0x7ff469432af0>, unsolClassMask: pydnp3.opendnp3.ClassField = <pydnp3.opendnp3.ClassField object at 0x7ff469dbec30>) -> None
     |      
     |      :type maxControlsPerRequest: unsigned char 
     |      :type maxTxFragSize: unsigned int 
     |      :type maxRxFragSize: unsigned int
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  allowUnsolicited
     |      Global enabled/ disable for unsolicited messages. If false, the NULL unsolicited message is not even sent.
     |  
     |  indexMode
     |      Controls the index mode (defaults to contiguous).
     |  
     |  maxControlsPerRequest
     |      The maximum number of controls the outstation will attempt to process from a single APDU. 
     |      :type maxControlsPerRequest: unsigned char
     |  
     |  maxRxFragSize
     |      The maximum fragment size the outstation will be able to receive. 
     |      :type maxRxFragSize: unsigned int
     |  
     |  maxTxFragSize
     |      The maximum fragment size the outstation will use for fragments it sends. 
     |      :type maxTxFragSize: unsigned int
     |  
     |  selectTimeout
     |      How long the outstation will allow an operate to proceed after a prior select.
     |  
     |  solConfirmTimeout
     |      Timeout for solicited confirms.
     |  
     |  typesAllowedInClass0
     |      A bitmask type that specifies the types allowed in a class 0 reponse.
     |  
     |  unsolClassMask
     |      Class mask for unsolicted, default to 0 as unsolicited has to be enabled.
     |  
     |  unsolConfirmTimeout
     |      Timeout for unsolicited confirms.
     |  
     |  unsolRetryTimeout
     |      Timeout for unsolicited retries.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class Parity(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      Parity
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.Parity, arg0: pydnp3.opendnp3.Parity) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.Parity) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.Parity) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.Parity, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.Parity) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.Parity, arg0: pydnp3.opendnp3.Parity) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.Parity) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.Parity, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Even = Parity.Even
     |  
     |  None = Parity.None
     |  
     |  Odd = Parity.Odd
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class PointClass(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      PointClass
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.PointClass, arg0: pydnp3.opendnp3.PointClass) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.PointClass) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.PointClass) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.PointClass, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.PointClass) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.PointClass, arg0: pydnp3.opendnp3.PointClass) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.PointClass) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.PointClass, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Class0 = PointClass.Class0
     |  
     |  Class1 = PointClass.Class1
     |  
     |  Class2 = PointClass.Class2
     |  
     |  Class3 = PointClass.Class3
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class QualifierCode(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      QualifierCode
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.QualifierCode, arg0: pydnp3.opendnp3.QualifierCode) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.QualifierCode) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.QualifierCode) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.QualifierCode, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.QualifierCode) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.QualifierCode, arg0: pydnp3.opendnp3.QualifierCode) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.QualifierCode) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.QualifierCode, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ALL_OBJECTS = QualifierCode.ALL_OBJECTS
     |  
     |  UINT16_CNT = QualifierCode.UINT16_CNT
     |  
     |  UINT16_CNT_UINT16_INDEX = QualifierCode.UINT16_CNT_UINT16_INDEX
     |  
     |  UINT16_FREE_FORMAT = QualifierCode.UINT16_FREE_FORMAT
     |  
     |  UINT16_START_STOP = QualifierCode.UINT16_START_STOP
     |  
     |  UINT8_CNT = QualifierCode.UINT8_CNT
     |  
     |  UINT8_CNT_UINT8_INDEX = QualifierCode.UINT8_CNT_UINT8_INDEX
     |  
     |  UINT8_START_STOP = QualifierCode.UINT8_START_STOP
     |  
     |  UNDEFINED = QualifierCode.UNDEFINED
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class RestartMode(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      RestartMode
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.RestartMode, arg0: pydnp3.opendnp3.RestartMode) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.RestartMode) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.RestartMode) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.RestartMode, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.RestartMode) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.RestartMode, arg0: pydnp3.opendnp3.RestartMode) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.RestartMode) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.RestartMode, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  SUPPORTED_DELAY_COARSE = RestartMode.SUPPORTED_DELAY_COARSE
     |  
     |  SUPPORTED_DELAY_FINE = RestartMode.SUPPORTED_DELAY_FINE
     |  
     |  UNSUPPORTED = RestartMode.UNSUPPORTED
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class RestartOperationCallbackT(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      RestartOperationCallbackT
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class RestartOperationResult(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      RestartOperationResult
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.RestartOperationResult) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.RestartOperationResult, summary: pydnp3.opendnp3.TaskCompletion, restartTime: pydnp3.openpal.TimeDuration) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  restartTime
     |      Time delay until restart.
     |  
     |  summary
     |      The result of the task as a whole.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class RestartType(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      RestartType
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.RestartType, arg0: pydnp3.opendnp3.RestartType) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.RestartType) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.RestartType) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.RestartType, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.RestartType) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.RestartType, arg0: pydnp3.opendnp3.RestartType) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.RestartType) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.RestartType, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  COLD = RestartType.COLD
     |  
     |  WARM = RestartType.WARM
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class SecurityStat(pybind11_builtins.pybind11_object)
     |  SA security statistic object as used by the API.
     |  
     |  Method resolution order:
     |      SecurityStat
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.SecurityStat) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.SecurityStat, value: pydnp3.opendnp3.SecurityStatValue, quality: int, time: pydnp3.opendnp3.DNPTime) -> None
     |      
     |      :type quality: unsigned char
     |      
     |      3. __init__(self: pydnp3.opendnp3.SecurityStat, quality: int, assocId: int, count: int) -> None
     |      
     |      :type quality: unsigned char 
     |      :type assocId: unsigned short 
     |      :type count: unsigned int
     |      
     |      4. __init__(self: pydnp3.opendnp3.SecurityStat, quality: int, assocId: int, count: int, time: pydnp3.opendnp3.DNPTime) -> None
     |      
     |      :type quality: unsigned char 
     |      :type assocId: unsigned short 
     |      :type count: unsigned int
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  quality
     |      :type quality: unsigned char
     |  
     |  time
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class SecurityStatConfig(IndexConfig)
     |  Method resolution order:
     |      SecurityStatConfig
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.SecurityStatConfig) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class SecurityStatIndex(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      SecurityStatIndex
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.SecurityStatIndex, arg0: pydnp3.opendnp3.SecurityStatIndex) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.SecurityStatIndex) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.SecurityStatIndex) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.SecurityStatIndex, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.SecurityStatIndex) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.SecurityStatIndex, arg0: pydnp3.opendnp3.SecurityStatIndex) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.SecurityStatIndex) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.SecurityStatIndex, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  AUTHENTICATION_FAILURES = SecurityStatIndex.AUTHENTICATION_FAILURES
     |  
     |  AUTHORIZATION_FAILURES = SecurityStatIndex.AUTHORIZATION_FAILURES
     |  
     |  CRITICAL_MESSAGES_RX = SecurityStatIndex.CRITICAL_MESSAGES_RX
     |  
     |  CRITICAL_MESSAGES_TX = SecurityStatIndex.CRITICAL_MESSAGES_TX
     |  
     |  DISCARED_MESSAGES = SecurityStatIndex.DISCARED_MESSAGES
     |  
     |  ERROR_MESSAGES_RX = SecurityStatIndex.ERROR_MESSAGES_RX
     |  
     |  ERROR_MESSAGES_TX = SecurityStatIndex.ERROR_MESSAGES_TX
     |  
     |  FAILED_SESSION_KEY_CHANGES = SecurityStatIndex.FAILED_SESSION_KEY_CHAN...
     |  
     |  FAILED_UPDATE_KEY_CHANGES = SecurityStatIndex.FAILED_UPDATE_KEY_CHANGE...
     |  
     |  REKEYS_DUE_TO_AUTH_FAILUE = SecurityStatIndex.REKEYS_DUE_TO_AUTH_FAILU...
     |  
     |  REKEYS_DUE_TO_RESTART = SecurityStatIndex.REKEYS_DUE_TO_RESTART
     |  
     |  REPLY_TIMEOUTS = SecurityStatIndex.REPLY_TIMEOUTS
     |  
     |  SESSION_KEY_CHANGES = SecurityStatIndex.SESSION_KEY_CHANGES
     |  
     |  SUCCESSFUL_AUTHS = SecurityStatIndex.SUCCESSFUL_AUTHS
     |  
     |  TOTAL_MESSAGES_RX = SecurityStatIndex.TOTAL_MESSAGES_RX
     |  
     |  TOTAL_MESSAGES_TX = SecurityStatIndex.TOTAL_MESSAGES_TX
     |  
     |  UNEXPECTED_MESSAGES = SecurityStatIndex.UNEXPECTED_MESSAGES
     |  
     |  UPDATE_KEY_CHANGES = SecurityStatIndex.UPDATE_KEY_CHANGES
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class SecurityStatInfo(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      SecurityStatInfo
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  DefaultEventVariation
     |  
     |  DefaultStaticVariation
     |  
     |  EventTypeEnum
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class SecurityStatSpec(SecurityStatInfo)
     |  Method resolution order:
     |      SecurityStatSpec
     |      SecurityStatInfo
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  IsEvent(...) from builtins.PyCapsule
     |      IsEvent(oldValue: pydnp3.opendnp3.SecurityStat, newValue: pydnp3.opendnp3.SecurityStat, deadband: int) -> bool
     |      
     |      :type deadband: unsigned int
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties inherited from SecurityStatInfo:
     |  
     |  DefaultEventVariation
     |  
     |  DefaultStaticVariation
     |  
     |  EventTypeEnum
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class SecurityStatValue(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      SecurityStatValue
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.SecurityStatValue, assocId: int = 0, count: int = 0) -> None
     |      
     |      :param assocId: defaults to 0 
     |      :param count: defaults to 0 
     |      :type assocId: unsigned short 
     |      :type count: unsigned int
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  assocId
     |      :type assocId: unsigned short
     |  
     |  count
     |      :type count: unsigned int
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class SimpleCommandHandler(ICommandHandler)
     |  Mock ICommandHandler used for examples and demos.
     |  
     |  Method resolution order:
     |      SimpleCommandHandler
     |      ICommandHandler
     |      ITransactable
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Operate(...)
     |      Operate(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. Operate(self: pydnp3.opendnp3.SimpleCommandHandler, command: pydnp3.opendnp3.ControlRelayOutputBlock, index: int, opType: pydnp3.opendnp3.OperateType) -> pydnp3.opendnp3.CommandStatus
     |      
     |      :type index: unsigned short
     |      
     |      2. Operate(self: pydnp3.opendnp3.SimpleCommandHandler, command: pydnp3.opendnp3.AnalogOutputInt16, index: int, opType: pydnp3.opendnp3.OperateType) -> pydnp3.opendnp3.CommandStatus
     |      
     |      :type index: unsigned short
     |      
     |      3. Operate(self: pydnp3.opendnp3.SimpleCommandHandler, command: pydnp3.opendnp3.AnalogOutputInt32, index: int, opType: pydnp3.opendnp3.OperateType) -> pydnp3.opendnp3.CommandStatus
     |      
     |      :type index: unsigned short
     |      
     |      4. Operate(self: pydnp3.opendnp3.SimpleCommandHandler, command: pydnp3.opendnp3.AnalogOutputFloat32, index: int, opType: pydnp3.opendnp3.OperateType) -> pydnp3.opendnp3.CommandStatus
     |      
     |      :type index: unsigned short
     |      
     |      5. Operate(self: pydnp3.opendnp3.SimpleCommandHandler, command: pydnp3.opendnp3.AnalogOutputDouble64, index: int, opType: pydnp3.opendnp3.OperateType) -> pydnp3.opendnp3.CommandStatus
     |      
     |      :type index: unsigned short
     |  
     |  Select(...)
     |      Select(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. Select(self: pydnp3.opendnp3.SimpleCommandHandler, command: pydnp3.opendnp3.ControlRelayOutputBlock, index: int) -> pydnp3.opendnp3.CommandStatus
     |      
     |      :type index: unsigned short
     |      
     |      2. Select(self: pydnp3.opendnp3.SimpleCommandHandler, command: pydnp3.opendnp3.AnalogOutputInt16, index: int) -> pydnp3.opendnp3.CommandStatus
     |      
     |      :type index: unsigned short
     |      
     |      3. Select(self: pydnp3.opendnp3.SimpleCommandHandler, command: pydnp3.opendnp3.AnalogOutputInt32, index: int) -> pydnp3.opendnp3.CommandStatus
     |      
     |      :type index: unsigned short
     |      
     |      4. Select(self: pydnp3.opendnp3.SimpleCommandHandler, command: pydnp3.opendnp3.AnalogOutputFloat32, index: int) -> pydnp3.opendnp3.CommandStatus
     |      
     |      :type index: unsigned short
     |      
     |      5. Select(self: pydnp3.opendnp3.SimpleCommandHandler, command: pydnp3.opendnp3.AnalogOutputDouble64, index: int) -> pydnp3.opendnp3.CommandStatus
     |      
     |      :type index: unsigned short
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.SimpleCommandHandler, arg0: pydnp3.opendnp3.CommandStatus) -> None
     |      
     |      :param status: The status value to return in response to all commands
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  numEnd
     |      :type numEnd: unsigned int
     |  
     |  numOperate
     |      :type numOperate: unsigned int
     |  
     |  numSelect
     |      :type numSelect: unsigned int
     |  
     |  numStart
     |      :type numStart: unsigned int
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from ITransactable:
     |  
     |  End(...)
     |      End(self: pydnp3.opendnp3.ITransactable) -> None
     |  
     |  Start(...)
     |      Start(self: pydnp3.opendnp3.ITransactable) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class SimpleEventCellBinaryOutputStatusSpec(EventCellBaseBinaryOutputStatusSpec)
     |  Metatype without a deadband.
     |  
     |  Method resolution order:
     |      SimpleEventCellBinaryOutputStatusSpec
     |      EventCellBaseBinaryOutputStatusSpec
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  IsEvent(...)
     |      IsEvent(self: pydnp3.opendnp3.SimpleEventCellBinaryOutputStatusSpec, config: opendnp3::BOStatusConfig, newValue: opendnp3::BinaryOutputStatus) -> bool
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from EventCellBaseBinaryOutputStatusSpec:
     |  
     |  SetEventValue(...)
     |      SetEventValue(self: pydnp3.opendnp3.EventCellBaseBinaryOutputStatusSpec, value: opendnp3::BinaryOutputStatus) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from EventCellBaseBinaryOutputStatusSpec:
     |  
     |  clazz
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class SimpleEventCellBinarySpec(EventCellBaseBinarySpec)
     |  Metatype without a deadband.
     |  
     |  Method resolution order:
     |      SimpleEventCellBinarySpec
     |      EventCellBaseBinarySpec
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  IsEvent(...)
     |      IsEvent(self: pydnp3.opendnp3.SimpleEventCellBinarySpec, config: opendnp3::BinaryConfig, newValue: opendnp3::Binary) -> bool
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from EventCellBaseBinarySpec:
     |  
     |  SetEventValue(...)
     |      SetEventValue(self: pydnp3.opendnp3.EventCellBaseBinarySpec, value: opendnp3::Binary) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from EventCellBaseBinarySpec:
     |  
     |  clazz
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class SimpleEventCellDoubleBitBinarySpec(EventCellBaseDoubleBitBinarySpec)
     |  Metatype without a deadband.
     |  
     |  Method resolution order:
     |      SimpleEventCellDoubleBitBinarySpec
     |      EventCellBaseDoubleBitBinarySpec
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  IsEvent(...)
     |      IsEvent(self: pydnp3.opendnp3.SimpleEventCellDoubleBitBinarySpec, config: opendnp3::DoubleBitBinaryConfig, newValue: opendnp3::DoubleBitBinary) -> bool
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from EventCellBaseDoubleBitBinarySpec:
     |  
     |  SetEventValue(...)
     |      SetEventValue(self: pydnp3.opendnp3.EventCellBaseDoubleBitBinarySpec, value: opendnp3::DoubleBitBinary) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from EventCellBaseDoubleBitBinarySpec:
     |  
     |  clazz
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StackStatistics(pybind11_builtins.pybind11_object)
     |  Statistics related to both a master or outstation session.
     |  
     |  Method resolution order:
     |      StackStatistics
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.StackStatistics) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.StackStatistics, link: pydnp3.opendnp3.StackStatisticsLink, transport: pydnp3.opendnp3.StackStatisticsTransport) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  link
     |  
     |  transport
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StackStatisticsLink(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      StackStatisticsLink
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StackStatisticsLink, numUnexpectedFrame: int = 0, numBadMasterBit: int = 0, numUnknownDestination: int = 0, numUnknownSource: int = 0) -> None
     |      
     |      :type numUnexpectedFrame: unsigned int 
     |      :type numBadMasterBit: unsigned int 
     |      :type numUnknownDestination: unsigned int 
     |      :type numUnknownSource: unsigned int
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  numBadMasterBit
     |      Frames received w/ wrong master bit. 
     |      :type numBadMasterBit: unsigned int
     |  
     |  numUnexpectedFrame
     |      Number of unexpected frames. 
     |      :type numUnexpectedFrame: unsigned int
     |  
     |  numUnknownDestination
     |      Frames received for an unknown destination. 
     |      :type numUnknownDestination: unsigned int
     |  
     |  numUnknownSource
     |      Frames received for an unknown source. 
     |      :type numUnknownSource: unsigned int
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StackStatisticsTransport(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      StackStatisticsTransport
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.StackStatisticsTransport) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.StackStatisticsTransport, rx: pydnp3.opendnp3.StackStatisticsTransportRx, tx: pydnp3.opendnp3.StackStatisticsTransportTx) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  rx
     |  
     |  tx
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StackStatisticsTransportRx(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      StackStatisticsTransportRx
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StackStatisticsTransportRx, numTransportRx: int = 0, numTransportErrorRx: int = 0, numTransportBufferOverflow: int = 0, numTransportDiscard: int = 0, numTransportIgnore: int = 0) -> None
     |      
     |      :type numTransportRx: unsigned int 
     |      :type numTransportErrorRx: unsigned int 
     |      :type numTransportBufferOverflow: unsigned int 
     |      :type numTransportDiscard: unsigned int 
     |      :type numTransportIgnore: unsigned int
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  numTransportBufferOverflow
     |      Number of times received data was too big for reassembly buffer. 
     |      :type numTransportBufferOverflow: unsigned int
     |  
     |  numTransportDiscard
     |      Number of times transport buffer is discard due to new FIR. 
     |      :type numTransportDiscard: unsigned int
     |  
     |  numTransportErrorRx
     |      Number of TPDUs dropped due to malformed contents. 
     |      :type numTransportErrorRx: unsigned int
     |  
     |  numTransportIgnore
     |      Number of segments ignored due to bad FIR/FIN or SEQ. 
     |      :type numTransportIgnore: unsigned int
     |  
     |  numTransportRx
     |      Number of valid TPDU's received. 
     |      :type numTransportRx: unsigned int
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StackStatisticsTransportTx(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      StackStatisticsTransportTx
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StackStatisticsTransportTx, numTransportTx: int = 0) -> None
     |      
     |      :type numTransportTx: unsigned int
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  numTransportTx
     |      Number of TPDUs transmitted. 
     |      :type numTransportTx: unsigned int
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StartStopRangeUint16(pybind11_builtins.pybind11_object)
     |  A template for a integer range.
     |  
     |  Method resolution order:
     |      StartStopRangeUint16
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StartStopRangeUint16, start: int = 0, stop: int = 0) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  start
     |  
     |  stop
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StartStopRangeUint8(pybind11_builtins.pybind11_object)
     |  A template for a integer range.
     |  
     |  Method resolution order:
     |      StartStopRangeUint8
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StartStopRangeUint8, start: int = 0, stop: int = 0) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  start
     |  
     |  stop
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StaticAnalogOutputStatusVariation(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      StaticAnalogOutputStatusVariation
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.StaticAnalogOutputStatusVariation, arg0: pydnp3.opendnp3.StaticAnalogOutputStatusVariation) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.StaticAnalogOutputStatusVariation) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.StaticAnalogOutputStatusVariation) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StaticAnalogOutputStatusVariation, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.StaticAnalogOutputStatusVariation) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.StaticAnalogOutputStatusVariation, arg0: pydnp3.opendnp3.StaticAnalogOutputStatusVariation) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.StaticAnalogOutputStatusVariation) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.StaticAnalogOutputStatusVariation, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Group40Var1 = StaticAnalogOutputStatusVariation.Group40Var1
     |  
     |  Group40Var2 = StaticAnalogOutputStatusVariation.Group40Var2
     |  
     |  Group40Var3 = StaticAnalogOutputStatusVariation.Group40Var3
     |  
     |  Group40Var4 = StaticAnalogOutputStatusVariation.Group40Var4
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StaticAnalogVariation(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      StaticAnalogVariation
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.StaticAnalogVariation, arg0: pydnp3.opendnp3.StaticAnalogVariation) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.StaticAnalogVariation) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.StaticAnalogVariation) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StaticAnalogVariation, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.StaticAnalogVariation) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.StaticAnalogVariation, arg0: pydnp3.opendnp3.StaticAnalogVariation) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.StaticAnalogVariation) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.StaticAnalogVariation, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Group30Var1 = StaticAnalogVariation.Group30Var1
     |  
     |  Group30Var2 = StaticAnalogVariation.Group30Var2
     |  
     |  Group30Var3 = StaticAnalogVariation.Group30Var3
     |  
     |  Group30Var4 = StaticAnalogVariation.Group30Var4
     |  
     |  Group30Var5 = StaticAnalogVariation.Group30Var5
     |  
     |  Group30Var6 = StaticAnalogVariation.Group30Var6
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StaticBinaryOutputStatusVariation(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      StaticBinaryOutputStatusVariation
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.StaticBinaryOutputStatusVariation, arg0: pydnp3.opendnp3.StaticBinaryOutputStatusVariation) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.StaticBinaryOutputStatusVariation) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.StaticBinaryOutputStatusVariation) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StaticBinaryOutputStatusVariation, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.StaticBinaryOutputStatusVariation) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.StaticBinaryOutputStatusVariation, arg0: pydnp3.opendnp3.StaticBinaryOutputStatusVariation) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.StaticBinaryOutputStatusVariation) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.StaticBinaryOutputStatusVariation, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Group10Var2 = StaticBinaryOutputStatusVariation.Group10Var2
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StaticBinaryVariation(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      StaticBinaryVariation
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.StaticBinaryVariation, arg0: pydnp3.opendnp3.StaticBinaryVariation) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.StaticBinaryVariation) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.StaticBinaryVariation) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StaticBinaryVariation, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.StaticBinaryVariation) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.StaticBinaryVariation, arg0: pydnp3.opendnp3.StaticBinaryVariation) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.StaticBinaryVariation) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.StaticBinaryVariation, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Group1Var1 = StaticBinaryVariation.Group1Var1
     |  
     |  Group1Var2 = StaticBinaryVariation.Group1Var2
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StaticConfigAnalogInfo(IndexConfig)
     |  All entries have this information.
     |  
     |  Method resolution order:
     |      StaticConfigAnalogInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StaticConfigAnalogInfo) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StaticConfigAnalogOutputStatusInfo(IndexConfig)
     |  All entries have this information.
     |  
     |  Method resolution order:
     |      StaticConfigAnalogOutputStatusInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StaticConfigAnalogOutputStatusInfo) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StaticConfigBinaryInfo(IndexConfig)
     |  All entries have this information.
     |  
     |  Method resolution order:
     |      StaticConfigBinaryInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StaticConfigBinaryInfo) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StaticConfigBinaryOutputStatusInfo(IndexConfig)
     |  All entries have this information.
     |  
     |  Method resolution order:
     |      StaticConfigBinaryOutputStatusInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StaticConfigBinaryOutputStatusInfo) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StaticConfigCounterInfo(IndexConfig)
     |  All entries have this information.
     |  
     |  Method resolution order:
     |      StaticConfigCounterInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StaticConfigCounterInfo) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StaticConfigDoubleBitBinaryInfo(IndexConfig)
     |  All entries have this information.
     |  
     |  Method resolution order:
     |      StaticConfigDoubleBitBinaryInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StaticConfigDoubleBitBinaryInfo) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StaticConfigFrozenCounterInfo(IndexConfig)
     |  All entries have this information.
     |  
     |  Method resolution order:
     |      StaticConfigFrozenCounterInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StaticConfigFrozenCounterInfo) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StaticConfigTimeAndIntervalInfo(IndexConfig)
     |  All entries have this information.
     |  
     |  Method resolution order:
     |      StaticConfigTimeAndIntervalInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StaticConfigTimeAndIntervalInfo) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StaticCounterVariation(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      StaticCounterVariation
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.StaticCounterVariation, arg0: pydnp3.opendnp3.StaticCounterVariation) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.StaticCounterVariation) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.StaticCounterVariation) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StaticCounterVariation, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.StaticCounterVariation) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.StaticCounterVariation, arg0: pydnp3.opendnp3.StaticCounterVariation) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.StaticCounterVariation) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.StaticCounterVariation, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Group20Var1 = StaticCounterVariation.Group20Var1
     |  
     |  Group20Var2 = StaticCounterVariation.Group20Var2
     |  
     |  Group20Var5 = StaticCounterVariation.Group20Var5
     |  
     |  Group20Var6 = StaticCounterVariation.Group20Var6
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StaticDoubleBinaryVariation(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      StaticDoubleBinaryVariation
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.StaticDoubleBinaryVariation, arg0: pydnp3.opendnp3.StaticDoubleBinaryVariation) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.StaticDoubleBinaryVariation) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.StaticDoubleBinaryVariation) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StaticDoubleBinaryVariation, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.StaticDoubleBinaryVariation) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.StaticDoubleBinaryVariation, arg0: pydnp3.opendnp3.StaticDoubleBinaryVariation) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.StaticDoubleBinaryVariation) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.StaticDoubleBinaryVariation, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Group3Var2 = StaticDoubleBinaryVariation.Group3Var2
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StaticFrozenCounterVariation(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      StaticFrozenCounterVariation
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.StaticFrozenCounterVariation, arg0: pydnp3.opendnp3.StaticFrozenCounterVariation) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.StaticFrozenCounterVariation) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.StaticFrozenCounterVariation) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StaticFrozenCounterVariation, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.StaticFrozenCounterVariation) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.StaticFrozenCounterVariation, arg0: pydnp3.opendnp3.StaticFrozenCounterVariation) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.StaticFrozenCounterVariation) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.StaticFrozenCounterVariation, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Group21Var1 = StaticFrozenCounterVariation.Group21Var1
     |  
     |  Group21Var10 = StaticFrozenCounterVariation.Group21Var10
     |  
     |  Group21Var2 = StaticFrozenCounterVariation.Group21Var2
     |  
     |  Group21Var5 = StaticFrozenCounterVariation.Group21Var5
     |  
     |  Group21Var6 = StaticFrozenCounterVariation.Group21Var6
     |  
     |  Group21Var9 = StaticFrozenCounterVariation.Group21Var9
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StaticSecurityStatVariation(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      StaticSecurityStatVariation
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.StaticSecurityStatVariation, arg0: pydnp3.opendnp3.StaticSecurityStatVariation) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.StaticSecurityStatVariation) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.StaticSecurityStatVariation) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StaticSecurityStatVariation, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.StaticSecurityStatVariation) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.StaticSecurityStatVariation, arg0: pydnp3.opendnp3.StaticSecurityStatVariation) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.StaticSecurityStatVariation) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.StaticSecurityStatVariation, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Group121Var1 = StaticSecurityStatVariation.Group121Var1
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StaticTimeAndIntervalVariation(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      StaticTimeAndIntervalVariation
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.StaticTimeAndIntervalVariation, arg0: pydnp3.opendnp3.StaticTimeAndIntervalVariation) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.StaticTimeAndIntervalVariation) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.StaticTimeAndIntervalVariation) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StaticTimeAndIntervalVariation, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.StaticTimeAndIntervalVariation) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.StaticTimeAndIntervalVariation, arg0: pydnp3.opendnp3.StaticTimeAndIntervalVariation) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.StaticTimeAndIntervalVariation) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.StaticTimeAndIntervalVariation, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Group50Var4 = StaticTimeAndIntervalVariation.Group50Var4
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StaticTypeBitField(pybind11_builtins.pybind11_object)
     |  A bitfield that describes a subset of all static types. 
     |  E.g. {Binary, Analog} or {Analog, Counter, FrozenCounter}
     |  
     |  Method resolution order:
     |      StaticTypeBitField
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  Except(...)
     |      Except(self: pydnp3.opendnp3.StaticTypeBitField, type: pydnp3.opendnp3.StaticTypeBitmask) -> pydnp3.opendnp3.StaticTypeBitField
     |  
     |  IsSet(...)
     |      IsSet(self: pydnp3.opendnp3.StaticTypeBitField, type: pydnp3.opendnp3.StaticTypeBitmask) -> bool
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.StaticTypeBitField) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.StaticTypeBitField, mask: int) -> None
     |      
     |      type mask: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  AllTypes(...) from builtins.PyCapsule
     |      AllTypes() -> pydnp3.opendnp3.StaticTypeBitField
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StaticTypeBitmask(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      StaticTypeBitmask
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.StaticTypeBitmask, arg0: pydnp3.opendnp3.StaticTypeBitmask) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.StaticTypeBitmask) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.StaticTypeBitmask) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StaticTypeBitmask, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.StaticTypeBitmask) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.StaticTypeBitmask, arg0: pydnp3.opendnp3.StaticTypeBitmask) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.StaticTypeBitmask) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.StaticTypeBitmask, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  AnalogInput = StaticTypeBitmask.AnalogInput
     |  
     |  AnalogOutputStatus = StaticTypeBitmask.AnalogOutputStatus
     |  
     |  BinaryInput = StaticTypeBitmask.BinaryInput
     |  
     |  BinaryOutputStatus = StaticTypeBitmask.BinaryOutputStatus
     |  
     |  Counter = StaticTypeBitmask.Counter
     |  
     |  DoubleBinaryInput = StaticTypeBitmask.DoubleBinaryInput
     |  
     |  FrozenCounter = StaticTypeBitmask.FrozenCounter
     |  
     |  TimeAndInterval = StaticTypeBitmask.TimeAndInterval
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class StopBits(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      StopBits
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.StopBits, arg0: pydnp3.opendnp3.StopBits) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.StopBits) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.StopBits) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.StopBits, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.StopBits) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.StopBits, arg0: pydnp3.opendnp3.StopBits) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.StopBits) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.StopBits, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  None = StopBits.None
     |  
     |  One = StopBits.One
     |  
     |  OnePointFive = StopBits.OnePointFive
     |  
     |  Two = StopBits.Two
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class SuccessCommandHandler(SimpleCommandHandler)
     |  A singleton command handler that always returns success.
     |  
     |  Method resolution order:
     |      SuccessCommandHandler
     |      SimpleCommandHandler
     |      ICommandHandler
     |      ITransactable
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.SuccessCommandHandler) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  Create(...) from builtins.PyCapsule
     |      Create() -> pydnp3.opendnp3.ICommandHandler
     |      
     |      :return: shared_ptr to opendnp3.ICommandHandler
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from SimpleCommandHandler:
     |  
     |  Operate(...)
     |      Operate(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. Operate(self: pydnp3.opendnp3.SimpleCommandHandler, command: pydnp3.opendnp3.ControlRelayOutputBlock, index: int, opType: pydnp3.opendnp3.OperateType) -> pydnp3.opendnp3.CommandStatus
     |      
     |      :type index: unsigned short
     |      
     |      2. Operate(self: pydnp3.opendnp3.SimpleCommandHandler, command: pydnp3.opendnp3.AnalogOutputInt16, index: int, opType: pydnp3.opendnp3.OperateType) -> pydnp3.opendnp3.CommandStatus
     |      
     |      :type index: unsigned short
     |      
     |      3. Operate(self: pydnp3.opendnp3.SimpleCommandHandler, command: pydnp3.opendnp3.AnalogOutputInt32, index: int, opType: pydnp3.opendnp3.OperateType) -> pydnp3.opendnp3.CommandStatus
     |      
     |      :type index: unsigned short
     |      
     |      4. Operate(self: pydnp3.opendnp3.SimpleCommandHandler, command: pydnp3.opendnp3.AnalogOutputFloat32, index: int, opType: pydnp3.opendnp3.OperateType) -> pydnp3.opendnp3.CommandStatus
     |      
     |      :type index: unsigned short
     |      
     |      5. Operate(self: pydnp3.opendnp3.SimpleCommandHandler, command: pydnp3.opendnp3.AnalogOutputDouble64, index: int, opType: pydnp3.opendnp3.OperateType) -> pydnp3.opendnp3.CommandStatus
     |      
     |      :type index: unsigned short
     |  
     |  Select(...)
     |      Select(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. Select(self: pydnp3.opendnp3.SimpleCommandHandler, command: pydnp3.opendnp3.ControlRelayOutputBlock, index: int) -> pydnp3.opendnp3.CommandStatus
     |      
     |      :type index: unsigned short
     |      
     |      2. Select(self: pydnp3.opendnp3.SimpleCommandHandler, command: pydnp3.opendnp3.AnalogOutputInt16, index: int) -> pydnp3.opendnp3.CommandStatus
     |      
     |      :type index: unsigned short
     |      
     |      3. Select(self: pydnp3.opendnp3.SimpleCommandHandler, command: pydnp3.opendnp3.AnalogOutputInt32, index: int) -> pydnp3.opendnp3.CommandStatus
     |      
     |      :type index: unsigned short
     |      
     |      4. Select(self: pydnp3.opendnp3.SimpleCommandHandler, command: pydnp3.opendnp3.AnalogOutputFloat32, index: int) -> pydnp3.opendnp3.CommandStatus
     |      
     |      :type index: unsigned short
     |      
     |      5. Select(self: pydnp3.opendnp3.SimpleCommandHandler, command: pydnp3.opendnp3.AnalogOutputDouble64, index: int) -> pydnp3.opendnp3.CommandStatus
     |      
     |      :type index: unsigned short
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from SimpleCommandHandler:
     |  
     |  numEnd
     |      :type numEnd: unsigned int
     |  
     |  numOperate
     |      :type numOperate: unsigned int
     |  
     |  numSelect
     |      :type numSelect: unsigned int
     |  
     |  numStart
     |      :type numStart: unsigned int
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from ITransactable:
     |  
     |  End(...)
     |      End(self: pydnp3.opendnp3.ITransactable) -> None
     |  
     |  Start(...)
     |      Start(self: pydnp3.opendnp3.ITransactable) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class TaskCompletion(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      TaskCompletion
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.TaskCompletion, arg0: pydnp3.opendnp3.TaskCompletion) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.TaskCompletion) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.TaskCompletion) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.TaskCompletion, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.TaskCompletion) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.TaskCompletion, arg0: pydnp3.opendnp3.TaskCompletion) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.TaskCompletion) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.TaskCompletion, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  FAILURE_BAD_RESPONSE = TaskCompletion.FAILURE_BAD_RESPONSE
     |  
     |  FAILURE_MESSAGE_FORMAT_ERROR = TaskCompletion.FAILURE_MESSAGE_FORMAT_E...
     |  
     |  FAILURE_NO_COMMS = TaskCompletion.FAILURE_NO_COMMS
     |  
     |  FAILURE_RESPONSE_TIMEOUT = TaskCompletion.FAILURE_RESPONSE_TIMEOUT
     |  
     |  FAILURE_START_TIMEOUT = TaskCompletion.FAILURE_START_TIMEOUT
     |  
     |  SUCCESS = TaskCompletion.SUCCESS
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class TaskConfig(pybind11_builtins.pybind11_object)
     |  Object containing multiple fields for configuring tasks.
     |  
     |  Method resolution order:
     |      TaskConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.TaskConfig, taskId: pydnp3.opendnp3.TaskId, pCallback: pydnp3.opendnp3.ITaskCallback) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.TaskConfig) -> None
     |      
     |      Default constructor.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  Default(...) from builtins.PyCapsule
     |      Default() -> pydnp3.opendnp3.TaskConfig
     |  
     |  With(...) from builtins.PyCapsule
     |      With(arg0: pydnp3.opendnp3.ITaskCallback) -> pydnp3.opendnp3.TaskConfig
     |      
     |      Syntax sugar for building configs.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  pCallback
     |  
     |  taskId
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class TaskId(pybind11_builtins.pybind11_object)
     |  Interface that represents a running master.
     |  
     |  Method resolution order:
     |      TaskId
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  GetId(...)
     |      GetId(self: pydnp3.opendnp3.TaskId) -> int
     |  
     |  IsDefined(...)
     |      IsDefined(self: pydnp3.opendnp3.TaskId) -> bool
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  Defined(...) from builtins.PyCapsule
     |      Defined(id: int) -> pydnp3.opendnp3.TaskId
     |  
     |  Undefined(...) from builtins.PyCapsule
     |      Undefined() -> pydnp3.opendnp3.TaskId
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class TaskInfo(pybind11_builtins.pybind11_object)
     |  Struct that provides information about a completed or failed task.
     |  
     |  Method resolution order:
     |      TaskInfo
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.TaskInfo, type: pydnp3.opendnp3.MasterTaskType, result: pydnp3.opendnp3.TaskCompletion, id: pydnp3.opendnp3.TaskId) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  id
     |  
     |  result
     |  
     |  type
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class TimeAndInterval(pybind11_builtins.pybind11_object)
     |  Maps to Group50Var4. 
     |  This class is a bit of an outlier as an indexed type and is really only used in the DNP3 PV profile.
     |  
     |  Method resolution order:
     |      TimeAndInterval
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  GetUnitsEnum(...)
     |      GetUnitsEnum(self: pydnp3.opendnp3.TimeAndInterval) -> pydnp3.opendnp3.IntervalUnits
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.TimeAndInterval) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.TimeAndInterval, time: pydnp3.opendnp3.DNPTime, interval: int, units: int) -> None
     |      
     |      :type interval: unsigned int 
     |      :type units: unsigned char
     |      
     |      3. __init__(self: pydnp3.opendnp3.TimeAndInterval, time: pydnp3.opendnp3.DNPTime, interval: int, units: pydnp3.opendnp3.IntervalUnits) -> None
     |      
     |      :type interval: unsigned int
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  interval
     |      :type interval: unsigned int
     |  
     |  time
     |  
     |  units
     |      :type units: unsigned char
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class TimeAndIntervalConfig(StaticConfigTimeAndIntervalInfo)
     |  Method resolution order:
     |      TimeAndIntervalConfig
     |      StaticConfigTimeAndIntervalInfo
     |      IndexConfig
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.TimeAndIntervalConfig) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from StaticConfigTimeAndIntervalInfo:
     |  
     |  svariation
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from IndexConfig:
     |  
     |  vIndex
     |      Virtual index for discontiguous data, as opposed to the raw array index.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class TimeAndIntervalInfo(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      TimeAndIntervalInfo
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  DefaultStaticVariation
     |  
     |  StaticTypeEnum
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class TimeAndIntervalSpec(TimeAndIntervalInfo)
     |  Method resolution order:
     |      TimeAndIntervalSpec
     |      TimeAndIntervalInfo
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties inherited from TimeAndIntervalInfo:
     |  
     |  DefaultStaticVariation
     |  
     |  StaticTypeEnum
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class TimeSyncMode(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      TimeSyncMode
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.TimeSyncMode, arg0: pydnp3.opendnp3.TimeSyncMode) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.TimeSyncMode) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.TimeSyncMode) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.TimeSyncMode, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.TimeSyncMode) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.TimeSyncMode, arg0: pydnp3.opendnp3.TimeSyncMode) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.TimeSyncMode) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.TimeSyncMode, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  LAN = TimeSyncMode.LAN
     |  
     |  NonLAN = TimeSyncMode.NonLAN
     |  
     |  None = TimeSyncMode.None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class TimestampMode(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      TimestampMode
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.TimestampMode, arg0: pydnp3.opendnp3.TimestampMode) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.TimestampMode) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.TimestampMode) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.TimestampMode, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.TimestampMode) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.TimestampMode, arg0: pydnp3.opendnp3.TimestampMode) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.TimestampMode) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.TimestampMode, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  INVALID = TimestampMode.INVALID
     |  
     |  SYNCHRONIZED = TimestampMode.SYNCHRONIZED
     |  
     |  UNSYNCHRONIZED = TimestampMode.UNSYNCHRONIZED
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class Transaction(pybind11_builtins.pybind11_object)
     |  Uses RAII to safely perform a transaction.
     |  
     |  Method resolution order:
     |      Transaction
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(*args, **kwargs)
     |      Overloaded function.
     |      
     |      1. __init__(self: pydnp3.opendnp3.Transaction, transactable: pydnp3.opendnp3.ITransactable) -> None
     |      
     |      2. __init__(self: pydnp3.opendnp3.Transaction, pTransactable: pydnp3.opendnp3.ITransactable) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  Apply(...) from builtins.PyCapsule
     |      Apply(transactable: pydnp3.opendnp3.ITransactable, fun: Callable[[pydnp3.opendnp3.Transaction], None]) -> None
     |  
     |  End(...) from builtins.PyCapsule
     |      End(pTransactable: pydnp3.opendnp3.ITransactable) -> None
     |  
     |  Start(...) from builtins.PyCapsule
     |      Start(pTransactable: pydnp3.opendnp3.ITransactable) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class TypedMeasurementBool(Measurement)
     |  Common subclass to analogs and counters.
     |  
     |  Method resolution order:
     |      TypedMeasurementBool
     |      Measurement
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Measurement:
     |  
     |  flags
     |      Bitfield that stores type specific quality information.
     |  
     |  time
     |      Timestamp associated with the measurement.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class TypedMeasurementDouble(Measurement)
     |  Common subclass to analogs and counters.
     |  
     |  Method resolution order:
     |      TypedMeasurementDouble
     |      Measurement
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Measurement:
     |  
     |  flags
     |      Bitfield that stores type specific quality information.
     |  
     |  time
     |      Timestamp associated with the measurement.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class TypedMeasurementDoubleBit(Measurement)
     |  Common subclass to analogs and counters.
     |  
     |  Method resolution order:
     |      TypedMeasurementDoubleBit
     |      Measurement
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Measurement:
     |  
     |  flags
     |      Bitfield that stores type specific quality information.
     |  
     |  time
     |      Timestamp associated with the measurement.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class TypedMeasurementUint32(Measurement)
     |  Common subclass to analogs and counters.
     |  
     |  Method resolution order:
     |      TypedMeasurementUint32
     |      Measurement
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  value
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Measurement:
     |  
     |  flags
     |      Bitfield that stores type specific quality information.
     |  
     |  time
     |      Timestamp associated with the measurement.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class UserOperation(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      UserOperation
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.UserOperation, arg0: pydnp3.opendnp3.UserOperation) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.UserOperation) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.UserOperation) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.UserOperation, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.UserOperation) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.UserOperation, arg0: pydnp3.opendnp3.UserOperation) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.UserOperation) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.UserOperation, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  OP_ADD = UserOperation.OP_ADD
     |  
     |  OP_CHANGE = UserOperation.OP_CHANGE
     |  
     |  OP_DELETE = UserOperation.OP_DELETE
     |  
     |  OP_UNDEFINED = UserOperation.OP_UNDEFINED
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class UserRole(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      UserRole
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __eq__(...)
     |      __eq__(self: pydnp3.opendnp3.UserRole, arg0: pydnp3.opendnp3.UserRole) -> bool
     |  
     |  __getstate__(...)
     |      __getstate__(self: pydnp3.opendnp3.UserRole) -> tuple
     |  
     |  __hash__(...)
     |      __hash__(self: pydnp3.opendnp3.UserRole) -> int
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.UserRole, arg0: int) -> None
     |  
     |  __int__(...)
     |      __int__(self: pydnp3.opendnp3.UserRole) -> int
     |  
     |  __ne__(...)
     |      __ne__(self: pydnp3.opendnp3.UserRole, arg0: pydnp3.opendnp3.UserRole) -> bool
     |  
     |  __repr__(...)
     |      __repr__(self: pydnp3.opendnp3.UserRole) -> str
     |  
     |  __setstate__(...)
     |      __setstate__(self: pydnp3.opendnp3.UserRole, arg0: tuple) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  __members__
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ENGINEER = UserRole.ENGINEER
     |  
     |  INSTALLER = UserRole.INSTALLER
     |  
     |  OPERATOR = UserRole.OPERATOR
     |  
     |  RBACMNT = UserRole.RBACMNT
     |  
     |  SECADM = UserRole.SECADM
     |  
     |  SECAUD = UserRole.SECAUD
     |  
     |  SINGLE_USER = UserRole.SINGLE_USER
     |  
     |  UNDEFINED = UserRole.UNDEFINED
     |  
     |  VIEWER = UserRole.VIEWER
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.
    
    class WriteHeaderFunT(pybind11_builtins.pybind11_object)
     |  Method resolution order:
     |      WriteHeaderFunT
     |      pybind11_builtins.pybind11_object
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(...)
     |      __init__(self: pydnp3.opendnp3.WriteHeaderFunT) -> None
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from pybind11_builtins.pybind11_object:
     |  
     |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
     |      Create and return a new object.  See help(type) for accurate signature.

FUNCTIONS
    AnalogOutput(...) method of builtins.PyCapsule instance
        AnalogOutput(*args, **kwargs)
        Overloaded function.
        
        1. AnalogOutput(value: int = 0, status: pydnp3.opendnp3.CommandStatus = CommandStatus.SUCCESS) -> pydnp3.opendnp3.AnalogOutput_Int16
        
        Return instance of class AnalogOutput<T>
        
        2. AnalogOutput(value: int = 0, status: pydnp3.opendnp3.CommandStatus = CommandStatus.SUCCESS) -> pydnp3.opendnp3.AnalogOutput_Int32
        
        Return instance of class AnalogOutput<T>
        
        3. AnalogOutput(value: float = 0, status: pydnp3.opendnp3.CommandStatus = CommandStatus.SUCCESS) -> pydnp3.opendnp3.AnalogOutput_Float
        
        Return instance of class AnalogOutput<T>
        
        4. AnalogOutput(value: float = 0, status: pydnp3.opendnp3.CommandStatus = CommandStatus.SUCCESS) -> pydnp3.opendnp3.AnalogOutput_Double
        
        Return instance of class AnalogOutput<T>
    
    AuthErrorCodeFromType(...) method of builtins.PyCapsule instance
        AuthErrorCodeFromType(rawType: int) -> pydnp3.opendnp3.AuthErrorCode
        
        :type rawType: unsigned char
    
    AuthErrorCodeToString(...) method of builtins.PyCapsule instance
        AuthErrorCodeToString(code: pydnp3.opendnp3.AuthErrorCode) -> str
    
    AuthErrorCodeToType(...) method of builtins.PyCapsule instance
        AuthErrorCodeToType(code: pydnp3.opendnp3.AuthErrorCode) -> int
    
    CertificateTypeFromType(...) method of builtins.PyCapsule instance
        CertificateTypeFromType(rawType: int) -> pydnp3.opendnp3.CertificateType
        
        :type rawType: unsigned char
    
    CertificateTypeToString(...) method of builtins.PyCapsule instance
        CertificateTypeToString(certificateType: pydnp3.opendnp3.CertificateType) -> str
    
    CertificateTypeToType(...) method of builtins.PyCapsule instance
        CertificateTypeToType(certificateType: pydnp3.opendnp3.CertificateType) -> int
    
    ChallengeReasonFromType(...) method of builtins.PyCapsule instance
        ChallengeReasonFromType(rawType: int) -> pydnp3.opendnp3.ChallengeReason
        
        :type rawType: unsigned char
    
    ChallengeReasonToString(...) method of builtins.PyCapsule instance
        ChallengeReasonToString(reason: pydnp3.opendnp3.ChallengeReason) -> str
    
    ChallengeReasonToType(...) method of builtins.PyCapsule instance
        ChallengeReasonToType(reason: pydnp3.opendnp3.ChallengeReason) -> int
    
    ChannelStateToString(...) method of builtins.PyCapsule instance
        ChannelStateToString(state: pydnp3.opendnp3.ChannelState) -> str
    
    CommandPointStateToString(...) method of builtins.PyCapsule instance
        CommandPointStateToString(state: pydnp3.opendnp3.CommandPointState) -> str
    
    CommandStatusFromType(...) method of builtins.PyCapsule instance
        CommandStatusFromType(rawType: int) -> pydnp3.opendnp3.CommandStatus
        
        :type rawType: unsigned char
    
    CommandStatusToString(...) method of builtins.PyCapsule instance
        CommandStatusToString(status: pydnp3.opendnp3.CommandStatus) -> str
    
    CommandStatusToType(...) method of builtins.PyCapsule instance
        CommandStatusToType(status: pydnp3.opendnp3.CommandStatus) -> int
    
    ControlCodeFromType(...) method of builtins.PyCapsule instance
        ControlCodeFromType(rawType: int) -> pydnp3.opendnp3.ControlCode
        
        :type rawType: unsigned char
    
    ControlCodeToString(...) method of builtins.PyCapsule instance
        ControlCodeToString(code: pydnp3.opendnp3.ControlCode) -> str
    
    ControlCodeToType(...) method of builtins.PyCapsule instance
        ControlCodeToType(code: pydnp3.opendnp3.ControlCode) -> int
    
    DeadbandConfig(...) method of builtins.PyCapsule instance
        DeadbandConfig(*args, **kwargs)
        Overloaded function.
        
        1. DeadbandConfig() -> pydnp3.opendnp3.DeadbandConfigAnalogInfo
        
        Return instance of class DeadbandConfig<Info>
        
        2. DeadbandConfig() -> pydnp3.opendnp3.DeadbandConfigCounterInfo
        
        Return instance of class DeadbandConfig<Info>
        
        3. DeadbandConfig() -> pydnp3.opendnp3.DeadbandConfigFrozenCounterInfo
        
        Return instance of class DeadbandConfig<Info>
        
        4. DeadbandConfig() -> pydnp3.opendnp3.DeadbandConfigAnalogOutputStatusInfo
        
        Return instance of class DeadbandConfig<Info>
    
    DoubleBitFromType(...) method of builtins.PyCapsule instance
        DoubleBitFromType(rawType: int) -> pydnp3.opendnp3.DoubleBit
        
        type rawType: unsigned char
    
    DoubleBitToString(...) method of builtins.PyCapsule instance
        DoubleBitToString(db: pydnp3.opendnp3.DoubleBit) -> str
    
    DoubleBitToType(...) method of builtins.PyCapsule instance
        DoubleBitToType(db: pydnp3.opendnp3.DoubleBit) -> int
    
    EventConfig(...) method of builtins.PyCapsule instance
        EventConfig(*args, **kwargs)
        Overloaded function.
        
        1. EventConfig() -> pydnp3.opendnp3.EventConfigBinaryInfo
        
        Return instance of class EventConfig<Info>
        
        2. EventConfig() -> pydnp3.opendnp3.EventConfigDoubleBitBinaryInfo
        
        Return instance of class EventConfig<Info>
        
        3. EventConfig() -> pydnp3.opendnp3.EventConfigAnalogInfo
        
        Return instance of class EventConfig<Info>
        
        4. EventConfig() -> pydnp3.opendnp3.EventConfigCounterInfo
        
        Return instance of class EventConfig<Info>
        
        5. EventConfig() -> pydnp3.opendnp3.EventConfigFrozenCounterInfo
        
        Return instance of class EventConfig<Info>
        
        6. EventConfig() -> pydnp3.opendnp3.EventConfigBinaryOutputStatusInfo
        
        Return instance of class EventConfig<Info>
        
        7. EventConfig() -> pydnp3.opendnp3.EventConfigAnalogOutputStatusInfo
        
        Return instance of class EventConfig<Info>
    
    FlagsTypeFromType(...) method of builtins.PyCapsule instance
        FlagsTypeFromType(rawType: int) -> pydnp3.opendnp3.FlagsType
        
        :type rawType: unsigned char
    
    FlagsTypeToString(...) method of builtins.PyCapsule instance
        FlagsTypeToString(flagsType: pydnp3.opendnp3.FlagsType) -> str
    
    FlagsTypeToType(...) method of builtins.PyCapsule instance
        FlagsTypeToType(flagsType: pydnp3.opendnp3.FlagsType) -> int
    
    FlowControlFromType(...) method of builtins.PyCapsule instance
        FlowControlFromType(rawType: int) -> pydnp3.opendnp3.FlowControl
        
        :type rawType: unsigned char
    
    FlowControlToString(...) method of builtins.PyCapsule instance
        FlowControlToString(flowControl: pydnp3.opendnp3.FlowControl) -> str
    
    FlowControlToType(...) method of builtins.PyCapsule instance
        FlowControlToType(flowControl: pydnp3.opendnp3.FlowControl) -> int
    
    FunctionCodeFromType(...) method of builtins.PyCapsule instance
        FunctionCodeFromType(rawType: int) -> pydnp3.opendnp3.FunctionCode
        
        :type rawType: unsigned char
    
    FunctionCodeToString(...) method of builtins.PyCapsule instance
        FunctionCodeToString(code: pydnp3.opendnp3.FunctionCode) -> str
    
    FunctionCodeToType(...) method of builtins.PyCapsule instance
        FunctionCodeToType(code: pydnp3.opendnp3.FunctionCode) -> int
    
    GroupVariationFromType(...) method of builtins.PyCapsule instance
        GroupVariationFromType(rawType: int) -> pydnp3.opendnp3.GroupVariation
        
        :type rawType: unsigned short
    
    GroupVariationToString(...) method of builtins.PyCapsule instance
        GroupVariationToString(gv: pydnp3.opendnp3.GroupVariation) -> str
    
    GroupVariationToType(...) method of builtins.PyCapsule instance
        GroupVariationToType(gv: pydnp3.opendnp3.GroupVariation) -> int
    
    HMACTypeFromType(...) method of builtins.PyCapsule instance
        HMACTypeFromType(rawType: int) -> pydnp3.opendnp3.HMACType
        
        :type rawType: unsigned char
    
    HMACTypeToString(...) method of builtins.PyCapsule instance
        HMACTypeToString(arg0: pydnp3.opendnp3.HMACType) -> str
    
    HMACTypeToType(...) method of builtins.PyCapsule instance
        HMACTypeToType(arg0: pydnp3.opendnp3.HMACType) -> int
    
    HasAbsoluteTime(...) method of builtins.PyCapsule instance
        HasAbsoluteTime(gv: pydnp3.opendnp3.GroupVariation) -> bool
    
    HasFlags(...) method of builtins.PyCapsule instance
        HasFlags(gv: pydnp3.opendnp3.GroupVariation) -> bool
    
    HasRelativeTime(...) method of builtins.PyCapsule instance
        HasRelativeTime(gv: pydnp3.opendnp3.GroupVariation) -> bool
    
    IntervalUnitsFromType(...) method of builtins.PyCapsule instance
        IntervalUnitsFromType(rawType: int) -> pydnp3.opendnp3.IntervalUnits
        
        :type rawType: unsigned char
    
    IntervalUnitsToString(...) method of builtins.PyCapsule instance
        IntervalUnitsToString(units: pydnp3.opendnp3.IntervalUnits) -> str
    
    IntervalUnitsToType(...) method of builtins.PyCapsule instance
        IntervalUnitsToType(units: pydnp3.opendnp3.IntervalUnits) -> int
    
    IsEvent(...) method of builtins.PyCapsule instance
        IsEvent(gv: pydnp3.opendnp3.GroupVariation) -> bool
    
    KeyChangeMethodFromType(...) method of builtins.PyCapsule instance
        KeyChangeMethodFromType(rawType: int) -> pydnp3.opendnp3.KeyChangeMethod
        
        :type rawType: unsigned char
    
    KeyChangeMethodToString(...) method of builtins.PyCapsule instance
        KeyChangeMethodToString(arg0: pydnp3.opendnp3.KeyChangeMethod) -> str
    
    KeyChangeMethodToType(...) method of builtins.PyCapsule instance
        KeyChangeMethodToType(arg0: pydnp3.opendnp3.KeyChangeMethod) -> int
    
    KeyStatusFromType(...) method of builtins.PyCapsule instance
        KeyStatusFromType(rawType: int) -> pydnp3.opendnp3.KeyStatus
        
        :type rawType: unsigned char
    
    KeyStatusToString(...) method of builtins.PyCapsule instance
        KeyStatusToString(status: pydnp3.opendnp3.KeyStatus) -> str
    
    KeyStatusToType(...) method of builtins.PyCapsule instance
        KeyStatusToType(status: pydnp3.opendnp3.KeyStatus) -> int
    
    KeyWrapAlgorithmFromType(...) method of builtins.PyCapsule instance
        KeyWrapAlgorithmFromType(rawType: int) -> pydnp3.opendnp3.KeyWrapAlgorithm
        
        :rawType: unsigned char
    
    KeyWrapAlgorithmToString(...) method of builtins.PyCapsule instance
        KeyWrapAlgorithmToString(arg0: pydnp3.opendnp3.KeyWrapAlgorithm) -> str
    
    KeyWrapAlgorithmToType(...) method of builtins.PyCapsule instance
        KeyWrapAlgorithmToType(arg0: pydnp3.opendnp3.KeyWrapAlgorithm) -> int
    
    LinkFunctionFromType(...) method of builtins.PyCapsule instance
        LinkFunctionFromType(rawType: int) -> pydnp3.opendnp3.LinkFunction
        
        :type rawType: unsigned char
    
    LinkFunctionToString(...) method of builtins.PyCapsule instance
        LinkFunctionToString(linkFunction: pydnp3.opendnp3.LinkFunction) -> str
    
    LinkFunctionToType(...) method of builtins.PyCapsule instance
        LinkFunctionToType(linkFunction: pydnp3.opendnp3.LinkFunction) -> int
    
    LinkStatusToString(...) method of builtins.PyCapsule instance
        LinkStatusToString(linkStatus: pydnp3.opendnp3.LinkStatus) -> str
    
    LogFlagToString(...) method of builtins.PyCapsule instance
        LogFlagToString(flag: int) -> str
    
    MasterTaskTypeToString(...) method of builtins.PyCapsule instance
        MasterTaskTypeToString(arg0: pydnp3.opendnp3.MasterTaskType) -> str
    
    ParityFromType(...) method of builtins.PyCapsule instance
        ParityFromType(rawType: int) -> pydnp3.opendnp3.Parity
        
        :type rawType: unsigned char
    
    ParityToString(...) method of builtins.PyCapsule instance
        ParityToString(parity: pydnp3.opendnp3.Parity) -> str
    
    ParityToType(...) method of builtins.PyCapsule instance
        ParityToType(parity: pydnp3.opendnp3.Parity) -> int
    
    QualifierCodeFromType(...) method of builtins.PyCapsule instance
        QualifierCodeFromType(rawType: int) -> pydnp3.opendnp3.QualifierCode
        
        :type rawType: unsigned char
    
    QualifierCodeToString(...) method of builtins.PyCapsule instance
        QualifierCodeToString(code: pydnp3.opendnp3.QualifierCode) -> str
    
    QualifierCodeToType(...) method of builtins.PyCapsule instance
        QualifierCodeToType(code: pydnp3.opendnp3.QualifierCode) -> int
    
    StaticConfig(...) method of builtins.PyCapsule instance
        StaticConfig(*args, **kwargs)
        Overloaded function.
        
        1. StaticConfig() -> pydnp3.opendnp3.StaticConfigBinaryInfo
        
        Return instance of class StaticConfig<Info>
        
        2. StaticConfig() -> pydnp3.opendnp3.StaticConfigDoubleBitBinaryInfo
        
        Return instance of class StaticConfig<Info>
        
        3. StaticConfig() -> pydnp3.opendnp3.StaticConfigAnalogInfo
        
        Return instance of class StaticConfig<Info>
        
        4. StaticConfig() -> pydnp3.opendnp3.StaticConfigCounterInfo
        
        Return instance of class StaticConfig<Info>
        
        5. StaticConfig() -> pydnp3.opendnp3.StaticConfigFrozenCounterInfo
        
        Return instance of class StaticConfig<Info>
        
        6. StaticConfig() -> pydnp3.opendnp3.StaticConfigBinaryOutputStatusInfo
        
        Return instance of class StaticConfig<Info>
        
        7. StaticConfig() -> pydnp3.opendnp3.StaticConfigAnalogOutputStatusInfo
        
        Return instance of class StaticConfig<Info>
        
        8. StaticConfig() -> pydnp3.opendnp3.StaticConfigTimeAndIntervalInfo
        
        Return instance of class StaticConfig<Info>
    
    StopBitsFromType(...) method of builtins.PyCapsule instance
        StopBitsFromType(rawType: int) -> pydnp3.opendnp3.StopBits
        
        :type rawType: unsigned char
    
    StopBitsToString(...) method of builtins.PyCapsule instance
        StopBitsToString(stopBits: pydnp3.opendnp3.StopBits) -> str
    
    StopBitsToType(...) method of builtins.PyCapsule instance
        StopBitsToType(stopBits: pydnp3.opendnp3.StopBits) -> int
    
    TaskCompletionToString(...) method of builtins.PyCapsule instance
        TaskCompletionToString(arg0: pydnp3.opendnp3.TaskCompletion) -> str
    
    ToUnderlying(...) method of builtins.PyCapsule instance
        ToUnderlying(*args, **kwargs)
        Overloaded function.
        
        1. ToUnderlying(flag: pydnp3.opendnp3.BinaryQuality) -> int
        
        2. ToUnderlying(flag: pydnp3.opendnp3.DoubleBitBinaryQuality) -> int
        
        3. ToUnderlying(flag: pydnp3.opendnp3.CounterQuality) -> int
        
        4. ToUnderlying(flag: pydnp3.opendnp3.FrozenCounterQuality) -> int
        
        5. ToUnderlying(flag: pydnp3.opendnp3.AnalogQuality) -> int
        
        6. ToUnderlying(flag: pydnp3.opendnp3.AnalogOutputStatusQuality) -> int
        
        7. ToUnderlying(flag: pydnp3.opendnp3.BinaryOutputStatusQuality) -> int
    
    UserOperationFromType(...) method of builtins.PyCapsule instance
        UserOperationFromType(rawType: int) -> pydnp3.opendnp3.UserOperation
        
        :type rawType: unsigned char
    
    UserOperationToString(...) method of builtins.PyCapsule instance
        UserOperationToString(userOperation: pydnp3.opendnp3.UserOperation) -> str
    
    UserOperationToType(...) method of builtins.PyCapsule instance
        UserOperationToType(userOperation: pydnp3.opendnp3.UserOperation) -> int
    
    UserRoleFromType(...) method of builtins.PyCapsule instance
        UserRoleFromType(rawType: int) -> pydnp3.opendnp3.UserRole
        
        :type rawType: unsigned short
    
    UserRoleToString(...) method of builtins.PyCapsule instance
        UserRoleToString(userRole: pydnp3.opendnp3.UserRole) -> str
    
    UserRoleToType(...) method of builtins.PyCapsule instance
        UserRoleToType(userRole: pydnp3.opendnp3.UserRole) -> int
    
    WithIndex(...) method of builtins.PyCapsule instance
        WithIndex(*args, **kwargs)
        Overloaded function.
        
        1. WithIndex(arg0: opendnp3::Binary, arg1: int) -> pydnp3.opendnp3.IndexedBinary
        
        2. WithIndex(arg0: opendnp3::DoubleBitBinary, arg1: int) -> pydnp3.opendnp3.IndexedDoubleBitBinary
        
        3. WithIndex(arg0: opendnp3::Analog, arg1: int) -> pydnp3.opendnp3.IndexedAnalog
        
        4. WithIndex(arg0: opendnp3::Counter, arg1: int) -> pydnp3.opendnp3.IndexedCounter
        
        5. WithIndex(arg0: opendnp3::FrozenCounter, arg1: int) -> pydnp3.opendnp3.IndexedFrozenCounter
        
        6. WithIndex(arg0: opendnp3::BinaryOutputStatus, arg1: int) -> pydnp3.opendnp3.IndexedBinaryOutputStatus
        
        7. WithIndex(arg0: opendnp3::AnalogOutputStatus, arg1: int) -> pydnp3.opendnp3.IndexedAnalogOutputStatus
        
        8. WithIndex(arg0: opendnp3::OctetString, arg1: int) -> pydnp3.opendnp3.IndexedOctetString
        
        9. WithIndex(arg0: opendnp3::TimeAndInterval, arg1: int) -> pydnp3.opendnp3.IndexedTimeAndInterval
        
        10. WithIndex(arg0: pydnp3.opendnp3.BinaryCommandEvent, arg1: int) -> pydnp3.opendnp3.IndexedBinaryCommandEvent
        
        11. WithIndex(arg0: pydnp3.opendnp3.AnalogCommandEvent, arg1: int) -> pydnp3.opendnp3.IndexedAnalogCommandEvent
        
        12. WithIndex(arg0: opendnp3::SecurityStat, arg1: int) -> pydnp3.opendnp3.IndexedSecurityStat
        
        13. WithIndex(arg0: pydnp3.opendnp3.ControlRelayOutputBlock, arg1: int) -> pydnp3.opendnp3.IndexedControlRelayOutputBlock
        
        14. WithIndex(arg0: pydnp3.opendnp3.AnalogOutputInt16, arg1: int) -> pydnp3.opendnp3.IndexedAnalogOutputInt16
        
        15. WithIndex(arg0: pydnp3.opendnp3.AnalogOutputInt32, arg1: int) -> pydnp3.opendnp3.IndexedAnalogOutputInt32
        
        16. WithIndex(arg0: pydnp3.opendnp3.AnalogOutputFloat32, arg1: int) -> pydnp3.opendnp3.IndexedAnalogOutputFloat32
        
        17. WithIndex(arg0: pydnp3.opendnp3.AnalogOutputDouble64, arg1: int) -> pydnp3.opendnp3.IndexedAnalogOutputDouble64

DATA
    DEFAULT_APP_TIMEOUT = <pydnp3.openpal.TimeDuration object>
    DEFAULT_MAX_APDU_SIZE = 2048
    NUM_OUTSTATION_EVENT_TYPES = 8

FILE
    (built-in)


